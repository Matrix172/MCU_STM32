
MCU_Project.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000062f8  0800013c  0800013c  0001013c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001dc  08006434  08006434  00016434  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006610  08006610  00020098  2**0
                  CONTENTS
  4 .ARM          00000008  08006610  08006610  00016610  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006618  08006618  00020098  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006618  08006618  00016618  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800661c  0800661c  0001661c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000098  20000000  08006620  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000002b8  20000098  080066b8  00020098  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000350  080066b8  00020350  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020098  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000200c1  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000db8d  00000000  00000000  00020104  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000024a3  00000000  00000000  0002dc91  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000e98  00000000  00000000  00030138  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000b1a  00000000  00000000  00030fd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000aece  00000000  00000000  00031aea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000042c3  00000000  00000000  0003c9b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_frame  000043b8  00000000  00000000  00040c7c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 0000006c  00000000  00000000  00045034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800013c <__do_global_dtors_aux>:
 800013c:	b510      	push	{r4, lr}
 800013e:	4c05      	ldr	r4, [pc, #20]	; (8000154 <__do_global_dtors_aux+0x18>)
 8000140:	7823      	ldrb	r3, [r4, #0]
 8000142:	b933      	cbnz	r3, 8000152 <__do_global_dtors_aux+0x16>
 8000144:	4b04      	ldr	r3, [pc, #16]	; (8000158 <__do_global_dtors_aux+0x1c>)
 8000146:	b113      	cbz	r3, 800014e <__do_global_dtors_aux+0x12>
 8000148:	4804      	ldr	r0, [pc, #16]	; (800015c <__do_global_dtors_aux+0x20>)
 800014a:	f3af 8000 	nop.w
 800014e:	2301      	movs	r3, #1
 8000150:	7023      	strb	r3, [r4, #0]
 8000152:	bd10      	pop	{r4, pc}
 8000154:	20000098 	.word	0x20000098
 8000158:	00000000 	.word	0x00000000
 800015c:	0800641c 	.word	0x0800641c

08000160 <frame_dummy>:
 8000160:	b508      	push	{r3, lr}
 8000162:	4b03      	ldr	r3, [pc, #12]	; (8000170 <frame_dummy+0x10>)
 8000164:	b11b      	cbz	r3, 800016e <frame_dummy+0xe>
 8000166:	4903      	ldr	r1, [pc, #12]	; (8000174 <frame_dummy+0x14>)
 8000168:	4803      	ldr	r0, [pc, #12]	; (8000178 <frame_dummy+0x18>)
 800016a:	f3af 8000 	nop.w
 800016e:	bd08      	pop	{r3, pc}
 8000170:	00000000 	.word	0x00000000
 8000174:	2000009c 	.word	0x2000009c
 8000178:	0800641c 	.word	0x0800641c

0800017c <strlen>:
 800017c:	4603      	mov	r3, r0
 800017e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000182:	2a00      	cmp	r2, #0
 8000184:	d1fb      	bne.n	800017e <strlen+0x2>
 8000186:	1a18      	subs	r0, r3, r0
 8000188:	3801      	subs	r0, #1
 800018a:	4770      	bx	lr

0800018c <__aeabi_uldivmod>:
 800018c:	b953      	cbnz	r3, 80001a4 <__aeabi_uldivmod+0x18>
 800018e:	b94a      	cbnz	r2, 80001a4 <__aeabi_uldivmod+0x18>
 8000190:	2900      	cmp	r1, #0
 8000192:	bf08      	it	eq
 8000194:	2800      	cmpeq	r0, #0
 8000196:	bf1c      	itt	ne
 8000198:	f04f 31ff 	movne.w	r1, #4294967295
 800019c:	f04f 30ff 	movne.w	r0, #4294967295
 80001a0:	f000 b972 	b.w	8000488 <__aeabi_idiv0>
 80001a4:	f1ad 0c08 	sub.w	ip, sp, #8
 80001a8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001ac:	f000 f806 	bl	80001bc <__udivmoddi4>
 80001b0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001b4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80001b8:	b004      	add	sp, #16
 80001ba:	4770      	bx	lr

080001bc <__udivmoddi4>:
 80001bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80001c0:	9e08      	ldr	r6, [sp, #32]
 80001c2:	460d      	mov	r5, r1
 80001c4:	4604      	mov	r4, r0
 80001c6:	468e      	mov	lr, r1
 80001c8:	2b00      	cmp	r3, #0
 80001ca:	d14c      	bne.n	8000266 <__udivmoddi4+0xaa>
 80001cc:	428a      	cmp	r2, r1
 80001ce:	4694      	mov	ip, r2
 80001d0:	d967      	bls.n	80002a2 <__udivmoddi4+0xe6>
 80001d2:	fab2 f382 	clz	r3, r2
 80001d6:	b153      	cbz	r3, 80001ee <__udivmoddi4+0x32>
 80001d8:	fa02 fc03 	lsl.w	ip, r2, r3
 80001dc:	f1c3 0220 	rsb	r2, r3, #32
 80001e0:	fa01 fe03 	lsl.w	lr, r1, r3
 80001e4:	fa20 f202 	lsr.w	r2, r0, r2
 80001e8:	ea42 0e0e 	orr.w	lr, r2, lr
 80001ec:	409c      	lsls	r4, r3
 80001ee:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80001f2:	fbbe f1f7 	udiv	r1, lr, r7
 80001f6:	fa1f f58c 	uxth.w	r5, ip
 80001fa:	fb07 ee11 	mls	lr, r7, r1, lr
 80001fe:	fb01 f005 	mul.w	r0, r1, r5
 8000202:	0c22      	lsrs	r2, r4, #16
 8000204:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 8000208:	4290      	cmp	r0, r2
 800020a:	d90a      	bls.n	8000222 <__udivmoddi4+0x66>
 800020c:	eb1c 0202 	adds.w	r2, ip, r2
 8000210:	f101 3eff 	add.w	lr, r1, #4294967295
 8000214:	f080 8119 	bcs.w	800044a <__udivmoddi4+0x28e>
 8000218:	4290      	cmp	r0, r2
 800021a:	f240 8116 	bls.w	800044a <__udivmoddi4+0x28e>
 800021e:	3902      	subs	r1, #2
 8000220:	4462      	add	r2, ip
 8000222:	1a12      	subs	r2, r2, r0
 8000224:	fbb2 f0f7 	udiv	r0, r2, r7
 8000228:	fb07 2210 	mls	r2, r7, r0, r2
 800022c:	fb00 f505 	mul.w	r5, r0, r5
 8000230:	b2a4      	uxth	r4, r4
 8000232:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000236:	42a5      	cmp	r5, r4
 8000238:	d90a      	bls.n	8000250 <__udivmoddi4+0x94>
 800023a:	eb1c 0404 	adds.w	r4, ip, r4
 800023e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000242:	f080 8104 	bcs.w	800044e <__udivmoddi4+0x292>
 8000246:	42a5      	cmp	r5, r4
 8000248:	f240 8101 	bls.w	800044e <__udivmoddi4+0x292>
 800024c:	4464      	add	r4, ip
 800024e:	3802      	subs	r0, #2
 8000250:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000254:	2100      	movs	r1, #0
 8000256:	1b64      	subs	r4, r4, r5
 8000258:	b11e      	cbz	r6, 8000262 <__udivmoddi4+0xa6>
 800025a:	40dc      	lsrs	r4, r3
 800025c:	2300      	movs	r3, #0
 800025e:	e9c6 4300 	strd	r4, r3, [r6]
 8000262:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000266:	428b      	cmp	r3, r1
 8000268:	d908      	bls.n	800027c <__udivmoddi4+0xc0>
 800026a:	2e00      	cmp	r6, #0
 800026c:	f000 80ea 	beq.w	8000444 <__udivmoddi4+0x288>
 8000270:	2100      	movs	r1, #0
 8000272:	e9c6 0500 	strd	r0, r5, [r6]
 8000276:	4608      	mov	r0, r1
 8000278:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800027c:	fab3 f183 	clz	r1, r3
 8000280:	2900      	cmp	r1, #0
 8000282:	d148      	bne.n	8000316 <__udivmoddi4+0x15a>
 8000284:	42ab      	cmp	r3, r5
 8000286:	d302      	bcc.n	800028e <__udivmoddi4+0xd2>
 8000288:	4282      	cmp	r2, r0
 800028a:	f200 80f8 	bhi.w	800047e <__udivmoddi4+0x2c2>
 800028e:	1a84      	subs	r4, r0, r2
 8000290:	eb65 0203 	sbc.w	r2, r5, r3
 8000294:	2001      	movs	r0, #1
 8000296:	4696      	mov	lr, r2
 8000298:	2e00      	cmp	r6, #0
 800029a:	d0e2      	beq.n	8000262 <__udivmoddi4+0xa6>
 800029c:	e9c6 4e00 	strd	r4, lr, [r6]
 80002a0:	e7df      	b.n	8000262 <__udivmoddi4+0xa6>
 80002a2:	b902      	cbnz	r2, 80002a6 <__udivmoddi4+0xea>
 80002a4:	deff      	udf	#255	; 0xff
 80002a6:	fab2 f382 	clz	r3, r2
 80002aa:	2b00      	cmp	r3, #0
 80002ac:	f040 808e 	bne.w	80003cc <__udivmoddi4+0x210>
 80002b0:	1a88      	subs	r0, r1, r2
 80002b2:	2101      	movs	r1, #1
 80002b4:	0c17      	lsrs	r7, r2, #16
 80002b6:	fa1f fe82 	uxth.w	lr, r2
 80002ba:	fbb0 f5f7 	udiv	r5, r0, r7
 80002be:	fb07 0015 	mls	r0, r7, r5, r0
 80002c2:	0c22      	lsrs	r2, r4, #16
 80002c4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80002c8:	fb0e f005 	mul.w	r0, lr, r5
 80002cc:	4290      	cmp	r0, r2
 80002ce:	d908      	bls.n	80002e2 <__udivmoddi4+0x126>
 80002d0:	eb1c 0202 	adds.w	r2, ip, r2
 80002d4:	f105 38ff 	add.w	r8, r5, #4294967295
 80002d8:	d202      	bcs.n	80002e0 <__udivmoddi4+0x124>
 80002da:	4290      	cmp	r0, r2
 80002dc:	f200 80cc 	bhi.w	8000478 <__udivmoddi4+0x2bc>
 80002e0:	4645      	mov	r5, r8
 80002e2:	1a12      	subs	r2, r2, r0
 80002e4:	fbb2 f0f7 	udiv	r0, r2, r7
 80002e8:	fb07 2210 	mls	r2, r7, r0, r2
 80002ec:	fb0e fe00 	mul.w	lr, lr, r0
 80002f0:	b2a4      	uxth	r4, r4
 80002f2:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80002f6:	45a6      	cmp	lr, r4
 80002f8:	d908      	bls.n	800030c <__udivmoddi4+0x150>
 80002fa:	eb1c 0404 	adds.w	r4, ip, r4
 80002fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000302:	d202      	bcs.n	800030a <__udivmoddi4+0x14e>
 8000304:	45a6      	cmp	lr, r4
 8000306:	f200 80b4 	bhi.w	8000472 <__udivmoddi4+0x2b6>
 800030a:	4610      	mov	r0, r2
 800030c:	eba4 040e 	sub.w	r4, r4, lr
 8000310:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000314:	e7a0      	b.n	8000258 <__udivmoddi4+0x9c>
 8000316:	f1c1 0720 	rsb	r7, r1, #32
 800031a:	408b      	lsls	r3, r1
 800031c:	fa22 fc07 	lsr.w	ip, r2, r7
 8000320:	ea4c 0c03 	orr.w	ip, ip, r3
 8000324:	fa25 fa07 	lsr.w	sl, r5, r7
 8000328:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800032c:	fbba f8f9 	udiv	r8, sl, r9
 8000330:	408d      	lsls	r5, r1
 8000332:	fa20 f307 	lsr.w	r3, r0, r7
 8000336:	fb09 aa18 	mls	sl, r9, r8, sl
 800033a:	fa1f fe8c 	uxth.w	lr, ip
 800033e:	432b      	orrs	r3, r5
 8000340:	fa00 f501 	lsl.w	r5, r0, r1
 8000344:	fb08 f00e 	mul.w	r0, r8, lr
 8000348:	0c1c      	lsrs	r4, r3, #16
 800034a:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 800034e:	42a0      	cmp	r0, r4
 8000350:	fa02 f201 	lsl.w	r2, r2, r1
 8000354:	d90b      	bls.n	800036e <__udivmoddi4+0x1b2>
 8000356:	eb1c 0404 	adds.w	r4, ip, r4
 800035a:	f108 3aff 	add.w	sl, r8, #4294967295
 800035e:	f080 8086 	bcs.w	800046e <__udivmoddi4+0x2b2>
 8000362:	42a0      	cmp	r0, r4
 8000364:	f240 8083 	bls.w	800046e <__udivmoddi4+0x2b2>
 8000368:	f1a8 0802 	sub.w	r8, r8, #2
 800036c:	4464      	add	r4, ip
 800036e:	1a24      	subs	r4, r4, r0
 8000370:	b298      	uxth	r0, r3
 8000372:	fbb4 f3f9 	udiv	r3, r4, r9
 8000376:	fb09 4413 	mls	r4, r9, r3, r4
 800037a:	fb03 fe0e 	mul.w	lr, r3, lr
 800037e:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 8000382:	45a6      	cmp	lr, r4
 8000384:	d908      	bls.n	8000398 <__udivmoddi4+0x1dc>
 8000386:	eb1c 0404 	adds.w	r4, ip, r4
 800038a:	f103 30ff 	add.w	r0, r3, #4294967295
 800038e:	d26a      	bcs.n	8000466 <__udivmoddi4+0x2aa>
 8000390:	45a6      	cmp	lr, r4
 8000392:	d968      	bls.n	8000466 <__udivmoddi4+0x2aa>
 8000394:	3b02      	subs	r3, #2
 8000396:	4464      	add	r4, ip
 8000398:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 800039c:	fba0 9302 	umull	r9, r3, r0, r2
 80003a0:	eba4 040e 	sub.w	r4, r4, lr
 80003a4:	429c      	cmp	r4, r3
 80003a6:	46c8      	mov	r8, r9
 80003a8:	469e      	mov	lr, r3
 80003aa:	d354      	bcc.n	8000456 <__udivmoddi4+0x29a>
 80003ac:	d051      	beq.n	8000452 <__udivmoddi4+0x296>
 80003ae:	2e00      	cmp	r6, #0
 80003b0:	d067      	beq.n	8000482 <__udivmoddi4+0x2c6>
 80003b2:	ebb5 0308 	subs.w	r3, r5, r8
 80003b6:	eb64 040e 	sbc.w	r4, r4, lr
 80003ba:	40cb      	lsrs	r3, r1
 80003bc:	fa04 f707 	lsl.w	r7, r4, r7
 80003c0:	431f      	orrs	r7, r3
 80003c2:	40cc      	lsrs	r4, r1
 80003c4:	e9c6 7400 	strd	r7, r4, [r6]
 80003c8:	2100      	movs	r1, #0
 80003ca:	e74a      	b.n	8000262 <__udivmoddi4+0xa6>
 80003cc:	fa02 fc03 	lsl.w	ip, r2, r3
 80003d0:	f1c3 0020 	rsb	r0, r3, #32
 80003d4:	40c1      	lsrs	r1, r0
 80003d6:	409d      	lsls	r5, r3
 80003d8:	fa24 f000 	lsr.w	r0, r4, r0
 80003dc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003e0:	4328      	orrs	r0, r5
 80003e2:	fbb1 f5f7 	udiv	r5, r1, r7
 80003e6:	fb07 1115 	mls	r1, r7, r5, r1
 80003ea:	fa1f fe8c 	uxth.w	lr, ip
 80003ee:	0c02      	lsrs	r2, r0, #16
 80003f0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80003f4:	fb05 f10e 	mul.w	r1, r5, lr
 80003f8:	4291      	cmp	r1, r2
 80003fa:	fa04 f403 	lsl.w	r4, r4, r3
 80003fe:	d908      	bls.n	8000412 <__udivmoddi4+0x256>
 8000400:	eb1c 0202 	adds.w	r2, ip, r2
 8000404:	f105 38ff 	add.w	r8, r5, #4294967295
 8000408:	d22f      	bcs.n	800046a <__udivmoddi4+0x2ae>
 800040a:	4291      	cmp	r1, r2
 800040c:	d92d      	bls.n	800046a <__udivmoddi4+0x2ae>
 800040e:	3d02      	subs	r5, #2
 8000410:	4462      	add	r2, ip
 8000412:	1a52      	subs	r2, r2, r1
 8000414:	fbb2 f1f7 	udiv	r1, r2, r7
 8000418:	fb07 2211 	mls	r2, r7, r1, r2
 800041c:	b280      	uxth	r0, r0
 800041e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8000422:	fb01 f20e 	mul.w	r2, r1, lr
 8000426:	4282      	cmp	r2, r0
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0x280>
 800042a:	eb1c 0000 	adds.w	r0, ip, r0
 800042e:	f101 38ff 	add.w	r8, r1, #4294967295
 8000432:	d216      	bcs.n	8000462 <__udivmoddi4+0x2a6>
 8000434:	4282      	cmp	r2, r0
 8000436:	d914      	bls.n	8000462 <__udivmoddi4+0x2a6>
 8000438:	3902      	subs	r1, #2
 800043a:	4460      	add	r0, ip
 800043c:	1a80      	subs	r0, r0, r2
 800043e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000442:	e73a      	b.n	80002ba <__udivmoddi4+0xfe>
 8000444:	4631      	mov	r1, r6
 8000446:	4630      	mov	r0, r6
 8000448:	e70b      	b.n	8000262 <__udivmoddi4+0xa6>
 800044a:	4671      	mov	r1, lr
 800044c:	e6e9      	b.n	8000222 <__udivmoddi4+0x66>
 800044e:	4610      	mov	r0, r2
 8000450:	e6fe      	b.n	8000250 <__udivmoddi4+0x94>
 8000452:	454d      	cmp	r5, r9
 8000454:	d2ab      	bcs.n	80003ae <__udivmoddi4+0x1f2>
 8000456:	ebb9 0802 	subs.w	r8, r9, r2
 800045a:	eb63 0e0c 	sbc.w	lr, r3, ip
 800045e:	3801      	subs	r0, #1
 8000460:	e7a5      	b.n	80003ae <__udivmoddi4+0x1f2>
 8000462:	4641      	mov	r1, r8
 8000464:	e7ea      	b.n	800043c <__udivmoddi4+0x280>
 8000466:	4603      	mov	r3, r0
 8000468:	e796      	b.n	8000398 <__udivmoddi4+0x1dc>
 800046a:	4645      	mov	r5, r8
 800046c:	e7d1      	b.n	8000412 <__udivmoddi4+0x256>
 800046e:	46d0      	mov	r8, sl
 8000470:	e77d      	b.n	800036e <__udivmoddi4+0x1b2>
 8000472:	4464      	add	r4, ip
 8000474:	3802      	subs	r0, #2
 8000476:	e749      	b.n	800030c <__udivmoddi4+0x150>
 8000478:	3d02      	subs	r5, #2
 800047a:	4462      	add	r2, ip
 800047c:	e731      	b.n	80002e2 <__udivmoddi4+0x126>
 800047e:	4608      	mov	r0, r1
 8000480:	e70a      	b.n	8000298 <__udivmoddi4+0xdc>
 8000482:	4631      	mov	r1, r6
 8000484:	e6ed      	b.n	8000262 <__udivmoddi4+0xa6>
 8000486:	bf00      	nop

08000488 <__aeabi_idiv0>:
 8000488:	4770      	bx	lr
 800048a:	bf00      	nop

0800048c <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 800048c:	b480      	push	{r7}
 800048e:	b083      	sub	sp, #12
 8000490:	af00      	add	r7, sp, #0
 8000492:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000494:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000498:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 800049c:	f003 0301 	and.w	r3, r3, #1
 80004a0:	2b00      	cmp	r3, #0
 80004a2:	d013      	beq.n	80004cc <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80004a4:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80004a8:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80004ac:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80004b0:	2b00      	cmp	r3, #0
 80004b2:	d00b      	beq.n	80004cc <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80004b4:	e000      	b.n	80004b8 <ITM_SendChar+0x2c>
    {
      __NOP();
 80004b6:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80004b8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	2b00      	cmp	r3, #0
 80004c0:	d0f9      	beq.n	80004b6 <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80004c2:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80004c6:	687a      	ldr	r2, [r7, #4]
 80004c8:	b2d2      	uxtb	r2, r2
 80004ca:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80004cc:	687b      	ldr	r3, [r7, #4]
}
 80004ce:	4618      	mov	r0, r3
 80004d0:	370c      	adds	r7, #12
 80004d2:	46bd      	mov	sp, r7
 80004d4:	bc80      	pop	{r7}
 80004d6:	4770      	bx	lr

080004d8 <main>:
/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void)
{
 80004d8:	b580      	push	{r7, lr}
 80004da:	af00      	add	r7, sp, #0
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 80004dc:	f001 fbe7 	bl	8001cae <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 80004e0:	f000 f810 	bl	8000504 <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 80004e4:	f000 f9ea 	bl	80008bc <MX_GPIO_Init>
	MX_TIM3_Init();
 80004e8:	f000 f966 	bl	80007b8 <MX_TIM3_Init>
	MX_SPI1_Init();
 80004ec:	f000 f92e 	bl	800074c <MX_SPI1_Init>
	MX_ADC_Init();
 80004f0:	f000 f86c 	bl	80005cc <MX_ADC_Init>
	MX_RTC_Init();
 80004f4:	f000 f8d0 	bl	8000698 <MX_RTC_Init>
	/* USER CODE BEGIN 2 */

	affichemod();
 80004f8:	f000 fa8e 	bl	8000a18 <affichemod>
	{
		/* USER CODE END WHILE */


		/* USER CODE BEGIN 3 */
		fonctionmod();
 80004fc:	f000 fc86 	bl	8000e0c <fonctionmod>
 8000500:	e7fc      	b.n	80004fc <main+0x24>
	...

08000504 <SystemClock_Config>:
/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void)
{
 8000504:	b580      	push	{r7, lr}
 8000506:	b096      	sub	sp, #88	; 0x58
 8000508:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800050a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800050e:	2234      	movs	r2, #52	; 0x34
 8000510:	2100      	movs	r1, #0
 8000512:	4618      	mov	r0, r3
 8000514:	f005 f9f0 	bl	80058f8 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000518:	f107 0310 	add.w	r3, r7, #16
 800051c:	2200      	movs	r2, #0
 800051e:	601a      	str	r2, [r3, #0]
 8000520:	605a      	str	r2, [r3, #4]
 8000522:	609a      	str	r2, [r3, #8]
 8000524:	60da      	str	r2, [r3, #12]
 8000526:	611a      	str	r2, [r3, #16]
	RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000528:	1d3b      	adds	r3, r7, #4
 800052a:	2200      	movs	r2, #0
 800052c:	601a      	str	r2, [r3, #0]
 800052e:	605a      	str	r2, [r3, #4]
 8000530:	609a      	str	r2, [r3, #8]

	/** Configure the main internal regulator output voltage
	 */
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000532:	4b25      	ldr	r3, [pc, #148]	; (80005c8 <SystemClock_Config+0xc4>)
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	f423 53c0 	bic.w	r3, r3, #6144	; 0x1800
 800053a:	4a23      	ldr	r2, [pc, #140]	; (80005c8 <SystemClock_Config+0xc4>)
 800053c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000540:	6013      	str	r3, [r2, #0]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI;
 8000542:	230a      	movs	r3, #10
 8000544:	627b      	str	r3, [r7, #36]	; 0x24
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000546:	2301      	movs	r3, #1
 8000548:	633b      	str	r3, [r7, #48]	; 0x30
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800054a:	2310      	movs	r3, #16
 800054c:	637b      	str	r3, [r7, #52]	; 0x34
	RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 800054e:	2301      	movs	r3, #1
 8000550:	63bb      	str	r3, [r7, #56]	; 0x38
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000552:	2302      	movs	r3, #2
 8000554:	64bb      	str	r3, [r7, #72]	; 0x48
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000556:	2300      	movs	r3, #0
 8000558:	64fb      	str	r3, [r7, #76]	; 0x4c
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 800055a:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 800055e:	653b      	str	r3, [r7, #80]	; 0x50
	RCC_OscInitStruct.PLL.PLLDIV = RCC_PLL_DIV3;
 8000560:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8000564:	657b      	str	r3, [r7, #84]	; 0x54
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000566:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800056a:	4618      	mov	r0, r3
 800056c:	f002 fbfa 	bl	8002d64 <HAL_RCC_OscConfig>
 8000570:	4603      	mov	r3, r0
 8000572:	2b00      	cmp	r3, #0
 8000574:	d001      	beq.n	800057a <SystemClock_Config+0x76>
	{
		Error_Handler();
 8000576:	f001 f967 	bl	8001848 <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800057a:	230f      	movs	r3, #15
 800057c:	613b      	str	r3, [r7, #16]
			|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800057e:	2303      	movs	r3, #3
 8000580:	617b      	str	r3, [r7, #20]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000582:	2300      	movs	r3, #0
 8000584:	61bb      	str	r3, [r7, #24]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000586:	2300      	movs	r3, #0
 8000588:	61fb      	str	r3, [r7, #28]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800058a:	2300      	movs	r3, #0
 800058c:	623b      	str	r3, [r7, #32]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 800058e:	f107 0310 	add.w	r3, r7, #16
 8000592:	2101      	movs	r1, #1
 8000594:	4618      	mov	r0, r3
 8000596:	f002 ff15 	bl	80033c4 <HAL_RCC_ClockConfig>
 800059a:	4603      	mov	r3, r0
 800059c:	2b00      	cmp	r3, #0
 800059e:	d001      	beq.n	80005a4 <SystemClock_Config+0xa0>
	{
		Error_Handler();
 80005a0:	f001 f952 	bl	8001848 <Error_Handler>
	}
	PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 80005a4:	2301      	movs	r3, #1
 80005a6:	607b      	str	r3, [r7, #4]
	PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 80005a8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80005ac:	60bb      	str	r3, [r7, #8]
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80005ae:	1d3b      	adds	r3, r7, #4
 80005b0:	4618      	mov	r0, r3
 80005b2:	f003 f959 	bl	8003868 <HAL_RCCEx_PeriphCLKConfig>
 80005b6:	4603      	mov	r3, r0
 80005b8:	2b00      	cmp	r3, #0
 80005ba:	d001      	beq.n	80005c0 <SystemClock_Config+0xbc>
	{
		Error_Handler();
 80005bc:	f001 f944 	bl	8001848 <Error_Handler>
	}
}
 80005c0:	bf00      	nop
 80005c2:	3758      	adds	r7, #88	; 0x58
 80005c4:	46bd      	mov	sp, r7
 80005c6:	bd80      	pop	{r7, pc}
 80005c8:	40007000 	.word	0x40007000

080005cc <MX_ADC_Init>:
 * @brief ADC Initialization Function
 * @param None
 * @retval None
 */
static void MX_ADC_Init(void)
{
 80005cc:	b580      	push	{r7, lr}
 80005ce:	b084      	sub	sp, #16
 80005d0:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN ADC_Init 0 */

	/* USER CODE END ADC_Init 0 */

	ADC_ChannelConfTypeDef sConfig = {0};
 80005d2:	1d3b      	adds	r3, r7, #4
 80005d4:	2200      	movs	r2, #0
 80005d6:	601a      	str	r2, [r3, #0]
 80005d8:	605a      	str	r2, [r3, #4]
 80005da:	609a      	str	r2, [r3, #8]

	/* USER CODE END ADC_Init 1 */

	/** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
	 */
	hadc.Instance = ADC1;
 80005dc:	4b2c      	ldr	r3, [pc, #176]	; (8000690 <MX_ADC_Init+0xc4>)
 80005de:	4a2d      	ldr	r2, [pc, #180]	; (8000694 <MX_ADC_Init+0xc8>)
 80005e0:	601a      	str	r2, [r3, #0]
	hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 80005e2:	4b2b      	ldr	r3, [pc, #172]	; (8000690 <MX_ADC_Init+0xc4>)
 80005e4:	2200      	movs	r2, #0
 80005e6:	605a      	str	r2, [r3, #4]
	hadc.Init.Resolution = ADC_RESOLUTION_12B;
 80005e8:	4b29      	ldr	r3, [pc, #164]	; (8000690 <MX_ADC_Init+0xc4>)
 80005ea:	2200      	movs	r2, #0
 80005ec:	609a      	str	r2, [r3, #8]
	hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80005ee:	4b28      	ldr	r3, [pc, #160]	; (8000690 <MX_ADC_Init+0xc4>)
 80005f0:	2200      	movs	r2, #0
 80005f2:	60da      	str	r2, [r3, #12]
	hadc.Init.ScanConvMode = ADC_SCAN_DISABLE;
 80005f4:	4b26      	ldr	r3, [pc, #152]	; (8000690 <MX_ADC_Init+0xc4>)
 80005f6:	2200      	movs	r2, #0
 80005f8:	611a      	str	r2, [r3, #16]
	hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 80005fa:	4b25      	ldr	r3, [pc, #148]	; (8000690 <MX_ADC_Init+0xc4>)
 80005fc:	2200      	movs	r2, #0
 80005fe:	615a      	str	r2, [r3, #20]
	hadc.Init.LowPowerAutoWait = ADC_AUTOWAIT_DISABLE;
 8000600:	4b23      	ldr	r3, [pc, #140]	; (8000690 <MX_ADC_Init+0xc4>)
 8000602:	2200      	movs	r2, #0
 8000604:	619a      	str	r2, [r3, #24]
	hadc.Init.LowPowerAutoPowerOff = ADC_AUTOPOWEROFF_DISABLE;
 8000606:	4b22      	ldr	r3, [pc, #136]	; (8000690 <MX_ADC_Init+0xc4>)
 8000608:	2200      	movs	r2, #0
 800060a:	61da      	str	r2, [r3, #28]
	hadc.Init.ChannelsBank = ADC_CHANNELS_BANK_A;
 800060c:	4b20      	ldr	r3, [pc, #128]	; (8000690 <MX_ADC_Init+0xc4>)
 800060e:	2200      	movs	r2, #0
 8000610:	621a      	str	r2, [r3, #32]
	hadc.Init.ContinuousConvMode = DISABLE;
 8000612:	4b1f      	ldr	r3, [pc, #124]	; (8000690 <MX_ADC_Init+0xc4>)
 8000614:	2200      	movs	r2, #0
 8000616:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
	hadc.Init.NbrOfConversion = 2;
 800061a:	4b1d      	ldr	r3, [pc, #116]	; (8000690 <MX_ADC_Init+0xc4>)
 800061c:	2202      	movs	r2, #2
 800061e:	629a      	str	r2, [r3, #40]	; 0x28
	hadc.Init.DiscontinuousConvMode = DISABLE;
 8000620:	4b1b      	ldr	r3, [pc, #108]	; (8000690 <MX_ADC_Init+0xc4>)
 8000622:	2200      	movs	r2, #0
 8000624:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
	hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000628:	4b19      	ldr	r3, [pc, #100]	; (8000690 <MX_ADC_Init+0xc4>)
 800062a:	2210      	movs	r2, #16
 800062c:	635a      	str	r2, [r3, #52]	; 0x34
	hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800062e:	4b18      	ldr	r3, [pc, #96]	; (8000690 <MX_ADC_Init+0xc4>)
 8000630:	2200      	movs	r2, #0
 8000632:	639a      	str	r2, [r3, #56]	; 0x38
	hadc.Init.DMAContinuousRequests = DISABLE;
 8000634:	4b16      	ldr	r3, [pc, #88]	; (8000690 <MX_ADC_Init+0xc4>)
 8000636:	2200      	movs	r2, #0
 8000638:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
	if (HAL_ADC_Init(&hadc) != HAL_OK)
 800063c:	4814      	ldr	r0, [pc, #80]	; (8000690 <MX_ADC_Init+0xc4>)
 800063e:	f001 fbd5 	bl	8001dec <HAL_ADC_Init>
 8000642:	4603      	mov	r3, r0
 8000644:	2b00      	cmp	r3, #0
 8000646:	d001      	beq.n	800064c <MX_ADC_Init+0x80>
	{
		Error_Handler();
 8000648:	f001 f8fe 	bl	8001848 <Error_Handler>
	}

	/** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
	 */
	sConfig.Channel = ADC_CHANNEL_0;
 800064c:	2300      	movs	r3, #0
 800064e:	607b      	str	r3, [r7, #4]
	sConfig.Rank = ADC_REGULAR_RANK_1;
 8000650:	2301      	movs	r3, #1
 8000652:	60bb      	str	r3, [r7, #8]
	sConfig.SamplingTime = ADC_SAMPLETIME_384CYCLES;
 8000654:	2307      	movs	r3, #7
 8000656:	60fb      	str	r3, [r7, #12]
	if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 8000658:	1d3b      	adds	r3, r7, #4
 800065a:	4619      	mov	r1, r3
 800065c:	480c      	ldr	r0, [pc, #48]	; (8000690 <MX_ADC_Init+0xc4>)
 800065e:	f001 fe91 	bl	8002384 <HAL_ADC_ConfigChannel>
 8000662:	4603      	mov	r3, r0
 8000664:	2b00      	cmp	r3, #0
 8000666:	d001      	beq.n	800066c <MX_ADC_Init+0xa0>
	{
		Error_Handler();
 8000668:	f001 f8ee 	bl	8001848 <Error_Handler>
	}

	/** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
	 */
	sConfig.Channel = ADC_CHANNEL_1;
 800066c:	2301      	movs	r3, #1
 800066e:	607b      	str	r3, [r7, #4]
	sConfig.Rank = ADC_REGULAR_RANK_2;
 8000670:	2302      	movs	r3, #2
 8000672:	60bb      	str	r3, [r7, #8]
	if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 8000674:	1d3b      	adds	r3, r7, #4
 8000676:	4619      	mov	r1, r3
 8000678:	4805      	ldr	r0, [pc, #20]	; (8000690 <MX_ADC_Init+0xc4>)
 800067a:	f001 fe83 	bl	8002384 <HAL_ADC_ConfigChannel>
 800067e:	4603      	mov	r3, r0
 8000680:	2b00      	cmp	r3, #0
 8000682:	d001      	beq.n	8000688 <MX_ADC_Init+0xbc>
	{
		Error_Handler();
 8000684:	f001 f8e0 	bl	8001848 <Error_Handler>
	}
	/* USER CODE BEGIN ADC_Init 2 */

	/* USER CODE END ADC_Init 2 */

}
 8000688:	bf00      	nop
 800068a:	3710      	adds	r7, #16
 800068c:	46bd      	mov	sp, r7
 800068e:	bd80      	pop	{r7, pc}
 8000690:	200000b4 	.word	0x200000b4
 8000694:	40012400 	.word	0x40012400

08000698 <MX_RTC_Init>:
 * @brief RTC Initialization Function
 * @param None
 * @retval None
 */
static void MX_RTC_Init(void)
{
 8000698:	b580      	push	{r7, lr}
 800069a:	b086      	sub	sp, #24
 800069c:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN RTC_Init 0 */

	/* USER CODE END RTC_Init 0 */

	RTC_TimeTypeDef sTime = {0};
 800069e:	1d3b      	adds	r3, r7, #4
 80006a0:	2200      	movs	r2, #0
 80006a2:	601a      	str	r2, [r3, #0]
 80006a4:	605a      	str	r2, [r3, #4]
 80006a6:	609a      	str	r2, [r3, #8]
 80006a8:	60da      	str	r2, [r3, #12]
 80006aa:	611a      	str	r2, [r3, #16]
	RTC_DateTypeDef sDate = {0};
 80006ac:	2300      	movs	r3, #0
 80006ae:	603b      	str	r3, [r7, #0]

	/* USER CODE END RTC_Init 1 */

	/** Initialize RTC Only
	 */
	hrtc.Instance = RTC;
 80006b0:	4b24      	ldr	r3, [pc, #144]	; (8000744 <MX_RTC_Init+0xac>)
 80006b2:	4a25      	ldr	r2, [pc, #148]	; (8000748 <MX_RTC_Init+0xb0>)
 80006b4:	601a      	str	r2, [r3, #0]
	hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 80006b6:	4b23      	ldr	r3, [pc, #140]	; (8000744 <MX_RTC_Init+0xac>)
 80006b8:	2200      	movs	r2, #0
 80006ba:	605a      	str	r2, [r3, #4]
	hrtc.Init.AsynchPrediv = 124;
 80006bc:	4b21      	ldr	r3, [pc, #132]	; (8000744 <MX_RTC_Init+0xac>)
 80006be:	227c      	movs	r2, #124	; 0x7c
 80006c0:	609a      	str	r2, [r3, #8]
	hrtc.Init.SynchPrediv = 255;
 80006c2:	4b20      	ldr	r3, [pc, #128]	; (8000744 <MX_RTC_Init+0xac>)
 80006c4:	22ff      	movs	r2, #255	; 0xff
 80006c6:	60da      	str	r2, [r3, #12]
	hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 80006c8:	4b1e      	ldr	r3, [pc, #120]	; (8000744 <MX_RTC_Init+0xac>)
 80006ca:	2200      	movs	r2, #0
 80006cc:	611a      	str	r2, [r3, #16]
	hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 80006ce:	4b1d      	ldr	r3, [pc, #116]	; (8000744 <MX_RTC_Init+0xac>)
 80006d0:	2200      	movs	r2, #0
 80006d2:	615a      	str	r2, [r3, #20]
	hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 80006d4:	4b1b      	ldr	r3, [pc, #108]	; (8000744 <MX_RTC_Init+0xac>)
 80006d6:	2200      	movs	r2, #0
 80006d8:	619a      	str	r2, [r3, #24]
	if (HAL_RTC_Init(&hrtc) != HAL_OK)
 80006da:	481a      	ldr	r0, [pc, #104]	; (8000744 <MX_RTC_Init+0xac>)
 80006dc:	f003 f9ce 	bl	8003a7c <HAL_RTC_Init>
 80006e0:	4603      	mov	r3, r0
 80006e2:	2b00      	cmp	r3, #0
 80006e4:	d001      	beq.n	80006ea <MX_RTC_Init+0x52>
	{
		Error_Handler();
 80006e6:	f001 f8af 	bl	8001848 <Error_Handler>

	/* USER CODE END Check_RTC_BKUP */

	/** Initialize RTC and set the Time and Date
	 */
	sTime.Hours = 0x13;
 80006ea:	2313      	movs	r3, #19
 80006ec:	713b      	strb	r3, [r7, #4]
	sTime.Minutes = 0x20;
 80006ee:	2320      	movs	r3, #32
 80006f0:	717b      	strb	r3, [r7, #5]
	sTime.Seconds = 0x0;
 80006f2:	2300      	movs	r3, #0
 80006f4:	71bb      	strb	r3, [r7, #6]
	sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 80006f6:	2300      	movs	r3, #0
 80006f8:	613b      	str	r3, [r7, #16]
	sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 80006fa:	2300      	movs	r3, #0
 80006fc:	617b      	str	r3, [r7, #20]
	if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 80006fe:	1d3b      	adds	r3, r7, #4
 8000700:	2201      	movs	r2, #1
 8000702:	4619      	mov	r1, r3
 8000704:	480f      	ldr	r0, [pc, #60]	; (8000744 <MX_RTC_Init+0xac>)
 8000706:	f003 fa3c 	bl	8003b82 <HAL_RTC_SetTime>
 800070a:	4603      	mov	r3, r0
 800070c:	2b00      	cmp	r3, #0
 800070e:	d001      	beq.n	8000714 <MX_RTC_Init+0x7c>
	{
		Error_Handler();
 8000710:	f001 f89a 	bl	8001848 <Error_Handler>
	}
	sDate.WeekDay = RTC_WEEKDAY_THURSDAY;
 8000714:	2304      	movs	r3, #4
 8000716:	703b      	strb	r3, [r7, #0]
	sDate.Month = RTC_MONTH_FEBRUARY;
 8000718:	2302      	movs	r3, #2
 800071a:	707b      	strb	r3, [r7, #1]
	sDate.Date = 0x22;
 800071c:	2322      	movs	r3, #34	; 0x22
 800071e:	70bb      	strb	r3, [r7, #2]
	sDate.Year = 0x24;
 8000720:	2324      	movs	r3, #36	; 0x24
 8000722:	70fb      	strb	r3, [r7, #3]

	if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 8000724:	463b      	mov	r3, r7
 8000726:	2201      	movs	r2, #1
 8000728:	4619      	mov	r1, r3
 800072a:	4806      	ldr	r0, [pc, #24]	; (8000744 <MX_RTC_Init+0xac>)
 800072c:	f003 fb21 	bl	8003d72 <HAL_RTC_SetDate>
 8000730:	4603      	mov	r3, r0
 8000732:	2b00      	cmp	r3, #0
 8000734:	d001      	beq.n	800073a <MX_RTC_Init+0xa2>
	{
		Error_Handler();
 8000736:	f001 f887 	bl	8001848 <Error_Handler>
	}
	/* USER CODE BEGIN RTC_Init 2 */

	/* USER CODE END RTC_Init 2 */

}
 800073a:	bf00      	nop
 800073c:	3718      	adds	r7, #24
 800073e:	46bd      	mov	sp, r7
 8000740:	bd80      	pop	{r7, pc}
 8000742:	bf00      	nop
 8000744:	20000108 	.word	0x20000108
 8000748:	40002800 	.word	0x40002800

0800074c <MX_SPI1_Init>:
 * @brief SPI1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_SPI1_Init(void)
{
 800074c:	b580      	push	{r7, lr}
 800074e:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN SPI1_Init 1 */

	/* USER CODE END SPI1_Init 1 */
	/* SPI1 parameter configuration*/
	hspi1.Instance = SPI1;
 8000750:	4b17      	ldr	r3, [pc, #92]	; (80007b0 <MX_SPI1_Init+0x64>)
 8000752:	4a18      	ldr	r2, [pc, #96]	; (80007b4 <MX_SPI1_Init+0x68>)
 8000754:	601a      	str	r2, [r3, #0]
	hspi1.Init.Mode = SPI_MODE_MASTER;
 8000756:	4b16      	ldr	r3, [pc, #88]	; (80007b0 <MX_SPI1_Init+0x64>)
 8000758:	f44f 7282 	mov.w	r2, #260	; 0x104
 800075c:	605a      	str	r2, [r3, #4]
	hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 800075e:	4b14      	ldr	r3, [pc, #80]	; (80007b0 <MX_SPI1_Init+0x64>)
 8000760:	2200      	movs	r2, #0
 8000762:	609a      	str	r2, [r3, #8]
	hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8000764:	4b12      	ldr	r3, [pc, #72]	; (80007b0 <MX_SPI1_Init+0x64>)
 8000766:	2200      	movs	r2, #0
 8000768:	60da      	str	r2, [r3, #12]
	hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 800076a:	4b11      	ldr	r3, [pc, #68]	; (80007b0 <MX_SPI1_Init+0x64>)
 800076c:	2200      	movs	r2, #0
 800076e:	611a      	str	r2, [r3, #16]
	hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000770:	4b0f      	ldr	r3, [pc, #60]	; (80007b0 <MX_SPI1_Init+0x64>)
 8000772:	2200      	movs	r2, #0
 8000774:	615a      	str	r2, [r3, #20]
	hspi1.Init.NSS = SPI_NSS_SOFT;
 8000776:	4b0e      	ldr	r3, [pc, #56]	; (80007b0 <MX_SPI1_Init+0x64>)
 8000778:	f44f 7200 	mov.w	r2, #512	; 0x200
 800077c:	619a      	str	r2, [r3, #24]
	hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800077e:	4b0c      	ldr	r3, [pc, #48]	; (80007b0 <MX_SPI1_Init+0x64>)
 8000780:	2200      	movs	r2, #0
 8000782:	61da      	str	r2, [r3, #28]
	hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000784:	4b0a      	ldr	r3, [pc, #40]	; (80007b0 <MX_SPI1_Init+0x64>)
 8000786:	2200      	movs	r2, #0
 8000788:	621a      	str	r2, [r3, #32]
	hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 800078a:	4b09      	ldr	r3, [pc, #36]	; (80007b0 <MX_SPI1_Init+0x64>)
 800078c:	2200      	movs	r2, #0
 800078e:	625a      	str	r2, [r3, #36]	; 0x24
	hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000790:	4b07      	ldr	r3, [pc, #28]	; (80007b0 <MX_SPI1_Init+0x64>)
 8000792:	2200      	movs	r2, #0
 8000794:	629a      	str	r2, [r3, #40]	; 0x28
	hspi1.Init.CRCPolynomial = 10;
 8000796:	4b06      	ldr	r3, [pc, #24]	; (80007b0 <MX_SPI1_Init+0x64>)
 8000798:	220a      	movs	r2, #10
 800079a:	62da      	str	r2, [r3, #44]	; 0x2c
	if (HAL_SPI_Init(&hspi1) != HAL_OK)
 800079c:	4804      	ldr	r0, [pc, #16]	; (80007b0 <MX_SPI1_Init+0x64>)
 800079e:	f003 fc76 	bl	800408e <HAL_SPI_Init>
 80007a2:	4603      	mov	r3, r0
 80007a4:	2b00      	cmp	r3, #0
 80007a6:	d001      	beq.n	80007ac <MX_SPI1_Init+0x60>
	{
		Error_Handler();
 80007a8:	f001 f84e 	bl	8001848 <Error_Handler>
	}
	/* USER CODE BEGIN SPI1_Init 2 */

	/* USER CODE END SPI1_Init 2 */

}
 80007ac:	bf00      	nop
 80007ae:	bd80      	pop	{r7, pc}
 80007b0:	20000128 	.word	0x20000128
 80007b4:	40013000 	.word	0x40013000

080007b8 <MX_TIM3_Init>:
 * @brief TIM3 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM3_Init(void)
{
 80007b8:	b580      	push	{r7, lr}
 80007ba:	b08a      	sub	sp, #40	; 0x28
 80007bc:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM3_Init 0 */

	/* USER CODE END TIM3_Init 0 */

	TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80007be:	f107 0318 	add.w	r3, r7, #24
 80007c2:	2200      	movs	r2, #0
 80007c4:	601a      	str	r2, [r3, #0]
 80007c6:	605a      	str	r2, [r3, #4]
 80007c8:	609a      	str	r2, [r3, #8]
 80007ca:	60da      	str	r2, [r3, #12]
	TIM_MasterConfigTypeDef sMasterConfig = {0};
 80007cc:	f107 0310 	add.w	r3, r7, #16
 80007d0:	2200      	movs	r2, #0
 80007d2:	601a      	str	r2, [r3, #0]
 80007d4:	605a      	str	r2, [r3, #4]
	TIM_OC_InitTypeDef sConfigOC = {0};
 80007d6:	463b      	mov	r3, r7
 80007d8:	2200      	movs	r2, #0
 80007da:	601a      	str	r2, [r3, #0]
 80007dc:	605a      	str	r2, [r3, #4]
 80007de:	609a      	str	r2, [r3, #8]
 80007e0:	60da      	str	r2, [r3, #12]

	/* USER CODE BEGIN TIM3_Init 1 */

	/* USER CODE END TIM3_Init 1 */
	htim3.Instance = TIM3;
 80007e2:	4b34      	ldr	r3, [pc, #208]	; (80008b4 <MX_TIM3_Init+0xfc>)
 80007e4:	4a34      	ldr	r2, [pc, #208]	; (80008b8 <MX_TIM3_Init+0x100>)
 80007e6:	601a      	str	r2, [r3, #0]
	htim3.Init.Prescaler = 32000;
 80007e8:	4b32      	ldr	r3, [pc, #200]	; (80008b4 <MX_TIM3_Init+0xfc>)
 80007ea:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 80007ee:	605a      	str	r2, [r3, #4]
	htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80007f0:	4b30      	ldr	r3, [pc, #192]	; (80008b4 <MX_TIM3_Init+0xfc>)
 80007f2:	2200      	movs	r2, #0
 80007f4:	609a      	str	r2, [r3, #8]
	htim3.Init.Period = 1000;
 80007f6:	4b2f      	ldr	r3, [pc, #188]	; (80008b4 <MX_TIM3_Init+0xfc>)
 80007f8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80007fc:	60da      	str	r2, [r3, #12]
	htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80007fe:	4b2d      	ldr	r3, [pc, #180]	; (80008b4 <MX_TIM3_Init+0xfc>)
 8000800:	2200      	movs	r2, #0
 8000802:	611a      	str	r2, [r3, #16]
	htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000804:	4b2b      	ldr	r3, [pc, #172]	; (80008b4 <MX_TIM3_Init+0xfc>)
 8000806:	2200      	movs	r2, #0
 8000808:	615a      	str	r2, [r3, #20]
	if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800080a:	482a      	ldr	r0, [pc, #168]	; (80008b4 <MX_TIM3_Init+0xfc>)
 800080c:	f003 fed6 	bl	80045bc <HAL_TIM_Base_Init>
 8000810:	4603      	mov	r3, r0
 8000812:	2b00      	cmp	r3, #0
 8000814:	d001      	beq.n	800081a <MX_TIM3_Init+0x62>
	{
		Error_Handler();
 8000816:	f001 f817 	bl	8001848 <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800081a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800081e:	61bb      	str	r3, [r7, #24]
	if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000820:	f107 0318 	add.w	r3, r7, #24
 8000824:	4619      	mov	r1, r3
 8000826:	4823      	ldr	r0, [pc, #140]	; (80008b4 <MX_TIM3_Init+0xfc>)
 8000828:	f004 fa0c 	bl	8004c44 <HAL_TIM_ConfigClockSource>
 800082c:	4603      	mov	r3, r0
 800082e:	2b00      	cmp	r3, #0
 8000830:	d001      	beq.n	8000836 <MX_TIM3_Init+0x7e>
	{
		Error_Handler();
 8000832:	f001 f809 	bl	8001848 <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8000836:	481f      	ldr	r0, [pc, #124]	; (80008b4 <MX_TIM3_Init+0xfc>)
 8000838:	f003 ff4a 	bl	80046d0 <HAL_TIM_PWM_Init>
 800083c:	4603      	mov	r3, r0
 800083e:	2b00      	cmp	r3, #0
 8000840:	d001      	beq.n	8000846 <MX_TIM3_Init+0x8e>
	{
		Error_Handler();
 8000842:	f001 f801 	bl	8001848 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000846:	2300      	movs	r3, #0
 8000848:	613b      	str	r3, [r7, #16]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800084a:	2300      	movs	r3, #0
 800084c:	617b      	str	r3, [r7, #20]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800084e:	f107 0310 	add.w	r3, r7, #16
 8000852:	4619      	mov	r1, r3
 8000854:	4817      	ldr	r0, [pc, #92]	; (80008b4 <MX_TIM3_Init+0xfc>)
 8000856:	f004 fd09 	bl	800526c <HAL_TIMEx_MasterConfigSynchronization>
 800085a:	4603      	mov	r3, r0
 800085c:	2b00      	cmp	r3, #0
 800085e:	d001      	beq.n	8000864 <MX_TIM3_Init+0xac>
	{
		Error_Handler();
 8000860:	f000 fff2 	bl	8001848 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000864:	2360      	movs	r3, #96	; 0x60
 8000866:	603b      	str	r3, [r7, #0]
	sConfigOC.Pulse = 0;
 8000868:	2300      	movs	r3, #0
 800086a:	607b      	str	r3, [r7, #4]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800086c:	2300      	movs	r3, #0
 800086e:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000870:	2300      	movs	r3, #0
 8000872:	60fb      	str	r3, [r7, #12]
	if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000874:	463b      	mov	r3, r7
 8000876:	2200      	movs	r2, #0
 8000878:	4619      	mov	r1, r3
 800087a:	480e      	ldr	r0, [pc, #56]	; (80008b4 <MX_TIM3_Init+0xfc>)
 800087c:	f004 f920 	bl	8004ac0 <HAL_TIM_PWM_ConfigChannel>
 8000880:	4603      	mov	r3, r0
 8000882:	2b00      	cmp	r3, #0
 8000884:	d001      	beq.n	800088a <MX_TIM3_Init+0xd2>
	{
		Error_Handler();
 8000886:	f000 ffdf 	bl	8001848 <Error_Handler>
	}
	sConfigOC.Pulse = 500;
 800088a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800088e:	607b      	str	r3, [r7, #4]
	if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8000890:	463b      	mov	r3, r7
 8000892:	2204      	movs	r2, #4
 8000894:	4619      	mov	r1, r3
 8000896:	4807      	ldr	r0, [pc, #28]	; (80008b4 <MX_TIM3_Init+0xfc>)
 8000898:	f004 f912 	bl	8004ac0 <HAL_TIM_PWM_ConfigChannel>
 800089c:	4603      	mov	r3, r0
 800089e:	2b00      	cmp	r3, #0
 80008a0:	d001      	beq.n	80008a6 <MX_TIM3_Init+0xee>
	{
		Error_Handler();
 80008a2:	f000 ffd1 	bl	8001848 <Error_Handler>
	}
	/* USER CODE BEGIN TIM3_Init 2 */

	/* USER CODE END TIM3_Init 2 */
	HAL_TIM_MspPostInit(&htim3);
 80008a6:	4803      	ldr	r0, [pc, #12]	; (80008b4 <MX_TIM3_Init+0xfc>)
 80008a8:	f001 f8c2 	bl	8001a30 <HAL_TIM_MspPostInit>

}
 80008ac:	bf00      	nop
 80008ae:	3728      	adds	r7, #40	; 0x28
 80008b0:	46bd      	mov	sp, r7
 80008b2:	bd80      	pop	{r7, pc}
 80008b4:	20000180 	.word	0x20000180
 80008b8:	40000400 	.word	0x40000400

080008bc <MX_GPIO_Init>:
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void)
{
 80008bc:	b580      	push	{r7, lr}
 80008be:	b088      	sub	sp, #32
 80008c0:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 80008c2:	f107 030c 	add.w	r3, r7, #12
 80008c6:	2200      	movs	r2, #0
 80008c8:	601a      	str	r2, [r3, #0]
 80008ca:	605a      	str	r2, [r3, #4]
 80008cc:	609a      	str	r2, [r3, #8]
 80008ce:	60da      	str	r2, [r3, #12]
 80008d0:	611a      	str	r2, [r3, #16]
	/* USER CODE BEGIN MX_GPIO_Init_1 */
	/* USER CODE END MX_GPIO_Init_1 */

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOC_CLK_ENABLE();
 80008d2:	4b3f      	ldr	r3, [pc, #252]	; (80009d0 <MX_GPIO_Init+0x114>)
 80008d4:	69db      	ldr	r3, [r3, #28]
 80008d6:	4a3e      	ldr	r2, [pc, #248]	; (80009d0 <MX_GPIO_Init+0x114>)
 80008d8:	f043 0304 	orr.w	r3, r3, #4
 80008dc:	61d3      	str	r3, [r2, #28]
 80008de:	4b3c      	ldr	r3, [pc, #240]	; (80009d0 <MX_GPIO_Init+0x114>)
 80008e0:	69db      	ldr	r3, [r3, #28]
 80008e2:	f003 0304 	and.w	r3, r3, #4
 80008e6:	60bb      	str	r3, [r7, #8]
 80008e8:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 80008ea:	4b39      	ldr	r3, [pc, #228]	; (80009d0 <MX_GPIO_Init+0x114>)
 80008ec:	69db      	ldr	r3, [r3, #28]
 80008ee:	4a38      	ldr	r2, [pc, #224]	; (80009d0 <MX_GPIO_Init+0x114>)
 80008f0:	f043 0301 	orr.w	r3, r3, #1
 80008f4:	61d3      	str	r3, [r2, #28]
 80008f6:	4b36      	ldr	r3, [pc, #216]	; (80009d0 <MX_GPIO_Init+0x114>)
 80008f8:	69db      	ldr	r3, [r3, #28]
 80008fa:	f003 0301 	and.w	r3, r3, #1
 80008fe:	607b      	str	r3, [r7, #4]
 8000900:	687b      	ldr	r3, [r7, #4]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8000902:	4b33      	ldr	r3, [pc, #204]	; (80009d0 <MX_GPIO_Init+0x114>)
 8000904:	69db      	ldr	r3, [r3, #28]
 8000906:	4a32      	ldr	r2, [pc, #200]	; (80009d0 <MX_GPIO_Init+0x114>)
 8000908:	f043 0302 	orr.w	r3, r3, #2
 800090c:	61d3      	str	r3, [r2, #28]
 800090e:	4b30      	ldr	r3, [pc, #192]	; (80009d0 <MX_GPIO_Init+0x114>)
 8000910:	69db      	ldr	r3, [r3, #28]
 8000912:	f003 0302 	and.w	r3, r3, #2
 8000916:	603b      	str	r3, [r7, #0]
 8000918:	683b      	ldr	r3, [r7, #0]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOB, L0_Pin|L1_Pin, GPIO_PIN_RESET);
 800091a:	2200      	movs	r2, #0
 800091c:	2106      	movs	r1, #6
 800091e:	482d      	ldr	r0, [pc, #180]	; (80009d4 <MX_GPIO_Init+0x118>)
 8000920:	f002 f9ef 	bl	8002d02 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(SPI_CS_GPIO_Port, SPI_CS_Pin, GPIO_PIN_RESET);
 8000924:	2200      	movs	r2, #0
 8000926:	f44f 7180 	mov.w	r1, #256	; 0x100
 800092a:	482b      	ldr	r0, [pc, #172]	; (80009d8 <MX_GPIO_Init+0x11c>)
 800092c:	f002 f9e9 	bl	8002d02 <HAL_GPIO_WritePin>

	/*Configure GPIO pins : BTNCarte_Pin BTN4_Pin */
	GPIO_InitStruct.Pin = BTNCarte_Pin|BTN4_Pin;
 8000930:	f242 0320 	movw	r3, #8224	; 0x2020
 8000934:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000936:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 800093a:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 800093c:	2300      	movs	r3, #0
 800093e:	617b      	str	r3, [r7, #20]
	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000940:	f107 030c 	add.w	r3, r7, #12
 8000944:	4619      	mov	r1, r3
 8000946:	4825      	ldr	r0, [pc, #148]	; (80009dc <MX_GPIO_Init+0x120>)
 8000948:	f002 f834 	bl	80029b4 <HAL_GPIO_Init>

	/*Configure GPIO pins : L0_Pin L1_Pin */
	GPIO_InitStruct.Pin = L0_Pin|L1_Pin;
 800094c:	2306      	movs	r3, #6
 800094e:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000950:	2301      	movs	r3, #1
 8000952:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000954:	2300      	movs	r3, #0
 8000956:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000958:	2300      	movs	r3, #0
 800095a:	61bb      	str	r3, [r7, #24]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800095c:	f107 030c 	add.w	r3, r7, #12
 8000960:	4619      	mov	r1, r3
 8000962:	481c      	ldr	r0, [pc, #112]	; (80009d4 <MX_GPIO_Init+0x118>)
 8000964:	f002 f826 	bl	80029b4 <HAL_GPIO_Init>

	/*Configure GPIO pin : BTN3_Pin */
	GPIO_InitStruct.Pin = BTN3_Pin;
 8000968:	2340      	movs	r3, #64	; 0x40
 800096a:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800096c:	2300      	movs	r3, #0
 800096e:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000970:	2300      	movs	r3, #0
 8000972:	617b      	str	r3, [r7, #20]
	HAL_GPIO_Init(BTN3_GPIO_Port, &GPIO_InitStruct);
 8000974:	f107 030c 	add.w	r3, r7, #12
 8000978:	4619      	mov	r1, r3
 800097a:	4818      	ldr	r0, [pc, #96]	; (80009dc <MX_GPIO_Init+0x120>)
 800097c:	f002 f81a 	bl	80029b4 <HAL_GPIO_Init>

	/*Configure GPIO pin : SPI_CS_Pin */
	GPIO_InitStruct.Pin = SPI_CS_Pin;
 8000980:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000984:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000986:	2301      	movs	r3, #1
 8000988:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Pull = GPIO_PULLUP;
 800098a:	2301      	movs	r3, #1
 800098c:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800098e:	2300      	movs	r3, #0
 8000990:	61bb      	str	r3, [r7, #24]
	HAL_GPIO_Init(SPI_CS_GPIO_Port, &GPIO_InitStruct);
 8000992:	f107 030c 	add.w	r3, r7, #12
 8000996:	4619      	mov	r1, r3
 8000998:	480f      	ldr	r0, [pc, #60]	; (80009d8 <MX_GPIO_Init+0x11c>)
 800099a:	f002 f80b 	bl	80029b4 <HAL_GPIO_Init>

	/*Configure GPIO pins : BTN1_Pin BTN2_Pin */
	GPIO_InitStruct.Pin = BTN1_Pin|BTN2_Pin;
 800099e:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 80009a2:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80009a4:	2300      	movs	r3, #0
 80009a6:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009a8:	2300      	movs	r3, #0
 80009aa:	617b      	str	r3, [r7, #20]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80009ac:	f107 030c 	add.w	r3, r7, #12
 80009b0:	4619      	mov	r1, r3
 80009b2:	4809      	ldr	r0, [pc, #36]	; (80009d8 <MX_GPIO_Init+0x11c>)
 80009b4:	f001 fffe 	bl	80029b4 <HAL_GPIO_Init>

	/* EXTI interrupt init*/
	HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 80009b8:	2200      	movs	r2, #0
 80009ba:	2100      	movs	r1, #0
 80009bc:	2028      	movs	r0, #40	; 0x28
 80009be:	f001 ffc2 	bl	8002946 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 80009c2:	2028      	movs	r0, #40	; 0x28
 80009c4:	f001 ffdb 	bl	800297e <HAL_NVIC_EnableIRQ>

	/* USER CODE BEGIN MX_GPIO_Init_2 */
	/* USER CODE END MX_GPIO_Init_2 */
}
 80009c8:	bf00      	nop
 80009ca:	3720      	adds	r7, #32
 80009cc:	46bd      	mov	sp, r7
 80009ce:	bd80      	pop	{r7, pc}
 80009d0:	40023800 	.word	0x40023800
 80009d4:	40020400 	.word	0x40020400
 80009d8:	40020000 	.word	0x40020000
 80009dc:	40020800 	.word	0x40020800

080009e0 <_write>:
		{"JAP", 8}    // Tokyo
};
//afficher_heure(fuseaux_horaires[i].acronyme, fuseaux_horaires[i].decalage_horaire);

int _write(int file, char *ptr, int len)
{
 80009e0:	b580      	push	{r7, lr}
 80009e2:	b086      	sub	sp, #24
 80009e4:	af00      	add	r7, sp, #0
 80009e6:	60f8      	str	r0, [r7, #12]
 80009e8:	60b9      	str	r1, [r7, #8]
 80009ea:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80009ec:	2300      	movs	r3, #0
 80009ee:	617b      	str	r3, [r7, #20]
 80009f0:	e009      	b.n	8000a06 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 80009f2:	68bb      	ldr	r3, [r7, #8]
 80009f4:	1c5a      	adds	r2, r3, #1
 80009f6:	60ba      	str	r2, [r7, #8]
 80009f8:	781b      	ldrb	r3, [r3, #0]
 80009fa:	4618      	mov	r0, r3
 80009fc:	f7ff fd46 	bl	800048c <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000a00:	697b      	ldr	r3, [r7, #20]
 8000a02:	3301      	adds	r3, #1
 8000a04:	617b      	str	r3, [r7, #20]
 8000a06:	697a      	ldr	r2, [r7, #20]
 8000a08:	687b      	ldr	r3, [r7, #4]
 8000a0a:	429a      	cmp	r2, r3
 8000a0c:	dbf1      	blt.n	80009f2 <_write+0x12>
	}
	return len;
 8000a0e:	687b      	ldr	r3, [r7, #4]
}
 8000a10:	4618      	mov	r0, r3
 8000a12:	3718      	adds	r7, #24
 8000a14:	46bd      	mov	sp, r7
 8000a16:	bd80      	pop	{r7, pc}

08000a18 <affichemod>:



void affichemod(){
 8000a18:	b580      	push	{r7, lr}
 8000a1a:	af00      	add	r7, sp, #0
	MAX7219_Clear();
 8000a1c:	f004 fcd3 	bl	80053c6 <MAX7219_Clear>
	MAX7219_Init();
 8000a20:	f004 fc9a 	bl	8005358 <MAX7219_Init>
	MAX7219_DisplayChar(1,'S', 0); // Pas de point décimal
 8000a24:	2200      	movs	r2, #0
 8000a26:	2153      	movs	r1, #83	; 0x53
 8000a28:	2001      	movs	r0, #1
 8000a2a:	f004 fce2 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(2,'E', 0); // Avec point décimal
 8000a2e:	2200      	movs	r2, #0
 8000a30:	2145      	movs	r1, #69	; 0x45
 8000a32:	2002      	movs	r0, #2
 8000a34:	f004 fcdd 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(3,'T', 1); // Pas de point décimal
 8000a38:	2201      	movs	r2, #1
 8000a3a:	2154      	movs	r1, #84	; 0x54
 8000a3c:	2003      	movs	r0, #3
 8000a3e:	f004 fcd8 	bl	80053f2 <MAX7219_DisplayChar>
	switchmode();
 8000a42:	f000 fb51 	bl	80010e8 <switchmode>
}
 8000a46:	bf00      	nop
 8000a48:	bd80      	pop	{r7, pc}
	...

08000a4c <affiche_num>:

void affiche_num(){
 8000a4c:	b580      	push	{r7, lr}
 8000a4e:	af00      	add	r7, sp, #0
	MAX7219_Clear();
 8000a50:	f004 fcb9 	bl	80053c6 <MAX7219_Clear>
	MAX7219_Init();
 8000a54:	f004 fc80 	bl	8005358 <MAX7219_Init>

	dizainesminutes = valeurMin / 10;
 8000a58:	4b29      	ldr	r3, [pc, #164]	; (8000b00 <affiche_num+0xb4>)
 8000a5a:	681b      	ldr	r3, [r3, #0]
 8000a5c:	4a29      	ldr	r2, [pc, #164]	; (8000b04 <affiche_num+0xb8>)
 8000a5e:	fb82 1203 	smull	r1, r2, r2, r3
 8000a62:	1092      	asrs	r2, r2, #2
 8000a64:	17db      	asrs	r3, r3, #31
 8000a66:	1ad3      	subs	r3, r2, r3
 8000a68:	4a27      	ldr	r2, [pc, #156]	; (8000b08 <affiche_num+0xbc>)
 8000a6a:	6013      	str	r3, [r2, #0]
	minutes = valeurMin % 10;
 8000a6c:	4b24      	ldr	r3, [pc, #144]	; (8000b00 <affiche_num+0xb4>)
 8000a6e:	6819      	ldr	r1, [r3, #0]
 8000a70:	4b24      	ldr	r3, [pc, #144]	; (8000b04 <affiche_num+0xb8>)
 8000a72:	fb83 2301 	smull	r2, r3, r3, r1
 8000a76:	109a      	asrs	r2, r3, #2
 8000a78:	17cb      	asrs	r3, r1, #31
 8000a7a:	1ad2      	subs	r2, r2, r3
 8000a7c:	4613      	mov	r3, r2
 8000a7e:	009b      	lsls	r3, r3, #2
 8000a80:	4413      	add	r3, r2
 8000a82:	005b      	lsls	r3, r3, #1
 8000a84:	1aca      	subs	r2, r1, r3
 8000a86:	4b21      	ldr	r3, [pc, #132]	; (8000b0c <affiche_num+0xc0>)
 8000a88:	601a      	str	r2, [r3, #0]
	dizaines = valeur / 10;
 8000a8a:	4b21      	ldr	r3, [pc, #132]	; (8000b10 <affiche_num+0xc4>)
 8000a8c:	681b      	ldr	r3, [r3, #0]
 8000a8e:	4a1d      	ldr	r2, [pc, #116]	; (8000b04 <affiche_num+0xb8>)
 8000a90:	fb82 1203 	smull	r1, r2, r2, r3
 8000a94:	1092      	asrs	r2, r2, #2
 8000a96:	17db      	asrs	r3, r3, #31
 8000a98:	1ad3      	subs	r3, r2, r3
 8000a9a:	4a1e      	ldr	r2, [pc, #120]	; (8000b14 <affiche_num+0xc8>)
 8000a9c:	6013      	str	r3, [r2, #0]
	unites = valeur % 10;
 8000a9e:	4b1c      	ldr	r3, [pc, #112]	; (8000b10 <affiche_num+0xc4>)
 8000aa0:	6819      	ldr	r1, [r3, #0]
 8000aa2:	4b18      	ldr	r3, [pc, #96]	; (8000b04 <affiche_num+0xb8>)
 8000aa4:	fb83 2301 	smull	r2, r3, r3, r1
 8000aa8:	109a      	asrs	r2, r3, #2
 8000aaa:	17cb      	asrs	r3, r1, #31
 8000aac:	1ad2      	subs	r2, r2, r3
 8000aae:	4613      	mov	r3, r2
 8000ab0:	009b      	lsls	r3, r3, #2
 8000ab2:	4413      	add	r3, r2
 8000ab4:	005b      	lsls	r3, r3, #1
 8000ab6:	1aca      	subs	r2, r1, r3
 8000ab8:	4b17      	ldr	r3, [pc, #92]	; (8000b18 <affiche_num+0xcc>)
 8000aba:	601a      	str	r2, [r3, #0]

	MAX7219_DisplayChar(1, dizainesminutes + '0', 0);
 8000abc:	4b12      	ldr	r3, [pc, #72]	; (8000b08 <affiche_num+0xbc>)
 8000abe:	681b      	ldr	r3, [r3, #0]
 8000ac0:	3330      	adds	r3, #48	; 0x30
 8000ac2:	2200      	movs	r2, #0
 8000ac4:	4619      	mov	r1, r3
 8000ac6:	2001      	movs	r0, #1
 8000ac8:	f004 fc93 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(2, minutes + '0', 1);
 8000acc:	4b0f      	ldr	r3, [pc, #60]	; (8000b0c <affiche_num+0xc0>)
 8000ace:	681b      	ldr	r3, [r3, #0]
 8000ad0:	3330      	adds	r3, #48	; 0x30
 8000ad2:	2201      	movs	r2, #1
 8000ad4:	4619      	mov	r1, r3
 8000ad6:	2002      	movs	r0, #2
 8000ad8:	f004 fc8b 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(3, dizaines + '0', 0);
 8000adc:	4b0d      	ldr	r3, [pc, #52]	; (8000b14 <affiche_num+0xc8>)
 8000ade:	681b      	ldr	r3, [r3, #0]
 8000ae0:	3330      	adds	r3, #48	; 0x30
 8000ae2:	2200      	movs	r2, #0
 8000ae4:	4619      	mov	r1, r3
 8000ae6:	2003      	movs	r0, #3
 8000ae8:	f004 fc83 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(4, unites + '0', 0);
 8000aec:	4b0a      	ldr	r3, [pc, #40]	; (8000b18 <affiche_num+0xcc>)
 8000aee:	681b      	ldr	r3, [r3, #0]
 8000af0:	3330      	adds	r3, #48	; 0x30
 8000af2:	2200      	movs	r2, #0
 8000af4:	4619      	mov	r1, r3
 8000af6:	2004      	movs	r0, #4
 8000af8:	f004 fc7b 	bl	80053f2 <MAX7219_DisplayChar>
}
 8000afc:	bf00      	nop
 8000afe:	bd80      	pop	{r7, pc}
 8000b00:	200001d0 	.word	0x200001d0
 8000b04:	66666667 	.word	0x66666667
 8000b08:	200001dc 	.word	0x200001dc
 8000b0c:	200001e0 	.word	0x200001e0
 8000b10:	200001cc 	.word	0x200001cc
 8000b14:	200001d4 	.word	0x200001d4
 8000b18:	200001d8 	.word	0x200001d8

08000b1c <affiche_horloge>:

void affiche_horloge(){
 8000b1c:	b580      	push	{r7, lr}
 8000b1e:	af00      	add	r7, sp, #0
	MAX7219_Clear();
 8000b20:	f004 fc51 	bl	80053c6 <MAX7219_Clear>
	MAX7219_Init();
 8000b24:	f004 fc18 	bl	8005358 <MAX7219_Init>

	dizainesminutes = valeurMin / 10;
 8000b28:	4b29      	ldr	r3, [pc, #164]	; (8000bd0 <affiche_horloge+0xb4>)
 8000b2a:	681b      	ldr	r3, [r3, #0]
 8000b2c:	4a29      	ldr	r2, [pc, #164]	; (8000bd4 <affiche_horloge+0xb8>)
 8000b2e:	fb82 1203 	smull	r1, r2, r2, r3
 8000b32:	1092      	asrs	r2, r2, #2
 8000b34:	17db      	asrs	r3, r3, #31
 8000b36:	1ad3      	subs	r3, r2, r3
 8000b38:	4a27      	ldr	r2, [pc, #156]	; (8000bd8 <affiche_horloge+0xbc>)
 8000b3a:	6013      	str	r3, [r2, #0]
	minutes = valeurMin % 10;
 8000b3c:	4b24      	ldr	r3, [pc, #144]	; (8000bd0 <affiche_horloge+0xb4>)
 8000b3e:	6819      	ldr	r1, [r3, #0]
 8000b40:	4b24      	ldr	r3, [pc, #144]	; (8000bd4 <affiche_horloge+0xb8>)
 8000b42:	fb83 2301 	smull	r2, r3, r3, r1
 8000b46:	109a      	asrs	r2, r3, #2
 8000b48:	17cb      	asrs	r3, r1, #31
 8000b4a:	1ad2      	subs	r2, r2, r3
 8000b4c:	4613      	mov	r3, r2
 8000b4e:	009b      	lsls	r3, r3, #2
 8000b50:	4413      	add	r3, r2
 8000b52:	005b      	lsls	r3, r3, #1
 8000b54:	1aca      	subs	r2, r1, r3
 8000b56:	4b21      	ldr	r3, [pc, #132]	; (8000bdc <affiche_horloge+0xc0>)
 8000b58:	601a      	str	r2, [r3, #0]
	dizainesheures = valeur / 10;
 8000b5a:	4b21      	ldr	r3, [pc, #132]	; (8000be0 <affiche_horloge+0xc4>)
 8000b5c:	681b      	ldr	r3, [r3, #0]
 8000b5e:	4a1d      	ldr	r2, [pc, #116]	; (8000bd4 <affiche_horloge+0xb8>)
 8000b60:	fb82 1203 	smull	r1, r2, r2, r3
 8000b64:	1092      	asrs	r2, r2, #2
 8000b66:	17db      	asrs	r3, r3, #31
 8000b68:	1ad3      	subs	r3, r2, r3
 8000b6a:	4a1e      	ldr	r2, [pc, #120]	; (8000be4 <affiche_horloge+0xc8>)
 8000b6c:	6013      	str	r3, [r2, #0]
	heures = valeur % 10;
 8000b6e:	4b1c      	ldr	r3, [pc, #112]	; (8000be0 <affiche_horloge+0xc4>)
 8000b70:	6819      	ldr	r1, [r3, #0]
 8000b72:	4b18      	ldr	r3, [pc, #96]	; (8000bd4 <affiche_horloge+0xb8>)
 8000b74:	fb83 2301 	smull	r2, r3, r3, r1
 8000b78:	109a      	asrs	r2, r3, #2
 8000b7a:	17cb      	asrs	r3, r1, #31
 8000b7c:	1ad2      	subs	r2, r2, r3
 8000b7e:	4613      	mov	r3, r2
 8000b80:	009b      	lsls	r3, r3, #2
 8000b82:	4413      	add	r3, r2
 8000b84:	005b      	lsls	r3, r3, #1
 8000b86:	1aca      	subs	r2, r1, r3
 8000b88:	4b17      	ldr	r3, [pc, #92]	; (8000be8 <affiche_horloge+0xcc>)
 8000b8a:	601a      	str	r2, [r3, #0]

	MAX7219_DisplayChar(1, dizainesheures + '0', 0);
 8000b8c:	4b15      	ldr	r3, [pc, #84]	; (8000be4 <affiche_horloge+0xc8>)
 8000b8e:	681b      	ldr	r3, [r3, #0]
 8000b90:	3330      	adds	r3, #48	; 0x30
 8000b92:	2200      	movs	r2, #0
 8000b94:	4619      	mov	r1, r3
 8000b96:	2001      	movs	r0, #1
 8000b98:	f004 fc2b 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(2, heures + '0', 1);
 8000b9c:	4b12      	ldr	r3, [pc, #72]	; (8000be8 <affiche_horloge+0xcc>)
 8000b9e:	681b      	ldr	r3, [r3, #0]
 8000ba0:	3330      	adds	r3, #48	; 0x30
 8000ba2:	2201      	movs	r2, #1
 8000ba4:	4619      	mov	r1, r3
 8000ba6:	2002      	movs	r0, #2
 8000ba8:	f004 fc23 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(3, dizainesminutes + '0', 0);
 8000bac:	4b0a      	ldr	r3, [pc, #40]	; (8000bd8 <affiche_horloge+0xbc>)
 8000bae:	681b      	ldr	r3, [r3, #0]
 8000bb0:	3330      	adds	r3, #48	; 0x30
 8000bb2:	2200      	movs	r2, #0
 8000bb4:	4619      	mov	r1, r3
 8000bb6:	2003      	movs	r0, #3
 8000bb8:	f004 fc1b 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(4, minutes + '0', 0);
 8000bbc:	4b07      	ldr	r3, [pc, #28]	; (8000bdc <affiche_horloge+0xc0>)
 8000bbe:	681b      	ldr	r3, [r3, #0]
 8000bc0:	3330      	adds	r3, #48	; 0x30
 8000bc2:	2200      	movs	r2, #0
 8000bc4:	4619      	mov	r1, r3
 8000bc6:	2004      	movs	r0, #4
 8000bc8:	f004 fc13 	bl	80053f2 <MAX7219_DisplayChar>

}
 8000bcc:	bf00      	nop
 8000bce:	bd80      	pop	{r7, pc}
 8000bd0:	200001d0 	.word	0x200001d0
 8000bd4:	66666667 	.word	0x66666667
 8000bd8:	200001dc 	.word	0x200001dc
 8000bdc:	200001e0 	.word	0x200001e0
 8000be0:	200001cc 	.word	0x200001cc
 8000be4:	200001e8 	.word	0x200001e8
 8000be8:	200001e4 	.word	0x200001e4

08000bec <affiche_clear>:

void affiche_clear(){
 8000bec:	b580      	push	{r7, lr}
 8000bee:	af00      	add	r7, sp, #0
	MAX7219_Clear();
 8000bf0:	f004 fbe9 	bl	80053c6 <MAX7219_Clear>
	MAX7219_Init();
 8000bf4:	f004 fbb0 	bl	8005358 <MAX7219_Init>
	MAX7219_DisplayChar(1, dizainesminutes + '0', 0);
 8000bf8:	4b10      	ldr	r3, [pc, #64]	; (8000c3c <affiche_clear+0x50>)
 8000bfa:	681b      	ldr	r3, [r3, #0]
 8000bfc:	3330      	adds	r3, #48	; 0x30
 8000bfe:	2200      	movs	r2, #0
 8000c00:	4619      	mov	r1, r3
 8000c02:	2001      	movs	r0, #1
 8000c04:	f004 fbf5 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(2, minutes + '0', 1);
 8000c08:	4b0d      	ldr	r3, [pc, #52]	; (8000c40 <affiche_clear+0x54>)
 8000c0a:	681b      	ldr	r3, [r3, #0]
 8000c0c:	3330      	adds	r3, #48	; 0x30
 8000c0e:	2201      	movs	r2, #1
 8000c10:	4619      	mov	r1, r3
 8000c12:	2002      	movs	r0, #2
 8000c14:	f004 fbed 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(3, dizaines + '0', 0);
 8000c18:	4b0a      	ldr	r3, [pc, #40]	; (8000c44 <affiche_clear+0x58>)
 8000c1a:	681b      	ldr	r3, [r3, #0]
 8000c1c:	3330      	adds	r3, #48	; 0x30
 8000c1e:	2200      	movs	r2, #0
 8000c20:	4619      	mov	r1, r3
 8000c22:	2003      	movs	r0, #3
 8000c24:	f004 fbe5 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(4, unites + '0', 0);
 8000c28:	4b07      	ldr	r3, [pc, #28]	; (8000c48 <affiche_clear+0x5c>)
 8000c2a:	681b      	ldr	r3, [r3, #0]
 8000c2c:	3330      	adds	r3, #48	; 0x30
 8000c2e:	2200      	movs	r2, #0
 8000c30:	4619      	mov	r1, r3
 8000c32:	2004      	movs	r0, #4
 8000c34:	f004 fbdd 	bl	80053f2 <MAX7219_DisplayChar>

}
 8000c38:	bf00      	nop
 8000c3a:	bd80      	pop	{r7, pc}
 8000c3c:	200001dc 	.word	0x200001dc
 8000c40:	200001e0 	.word	0x200001e0
 8000c44:	200001d4 	.word	0x200001d4
 8000c48:	200001d8 	.word	0x200001d8

08000c4c <affiche_fuseau_horaire_et_heure>:


void affiche_fuseau_horaire_et_heure() {
 8000c4c:	b580      	push	{r7, lr}
 8000c4e:	b084      	sub	sp, #16
 8000c50:	af00      	add	r7, sp, #0
	// Afficher le fuseau horaire
	char *fuseau = fuseaux_horaires[current_index].nom;
 8000c52:	4b1e      	ldr	r3, [pc, #120]	; (8000ccc <affiche_fuseau_horaire_et_heure+0x80>)
 8000c54:	681b      	ldr	r3, [r3, #0]
 8000c56:	00db      	lsls	r3, r3, #3
 8000c58:	4a1d      	ldr	r2, [pc, #116]	; (8000cd0 <affiche_fuseau_horaire_et_heure+0x84>)
 8000c5a:	4413      	add	r3, r2
 8000c5c:	607b      	str	r3, [r7, #4]
	for (size_t i = 0; i < strlen(fuseau); i++) {
 8000c5e:	2300      	movs	r3, #0
 8000c60:	60fb      	str	r3, [r7, #12]
 8000c62:	e010      	b.n	8000c86 <affiche_fuseau_horaire_et_heure+0x3a>
		MAX7219_DisplayChar(i+1, fuseau[i], 0);
 8000c64:	68fb      	ldr	r3, [r7, #12]
 8000c66:	1c58      	adds	r0, r3, #1
 8000c68:	687a      	ldr	r2, [r7, #4]
 8000c6a:	68fb      	ldr	r3, [r7, #12]
 8000c6c:	4413      	add	r3, r2
 8000c6e:	781b      	ldrb	r3, [r3, #0]
 8000c70:	2200      	movs	r2, #0
 8000c72:	4619      	mov	r1, r3
 8000c74:	f004 fbbd 	bl	80053f2 <MAX7219_DisplayChar>
		HAL_Delay(500);
 8000c78:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000c7c:	f001 f886 	bl	8001d8c <HAL_Delay>
	for (size_t i = 0; i < strlen(fuseau); i++) {
 8000c80:	68fb      	ldr	r3, [r7, #12]
 8000c82:	3301      	adds	r3, #1
 8000c84:	60fb      	str	r3, [r7, #12]
 8000c86:	6878      	ldr	r0, [r7, #4]
 8000c88:	f7ff fa78 	bl	800017c <strlen>
 8000c8c:	4602      	mov	r2, r0
 8000c8e:	68fb      	ldr	r3, [r7, #12]
 8000c90:	4293      	cmp	r3, r2
 8000c92:	d3e7      	bcc.n	8000c64 <affiche_fuseau_horaire_et_heure+0x18>
	}
	// Effacer les caractères restants
	for (size_t i = strlen(fuseau); i < 4; i++) {
 8000c94:	6878      	ldr	r0, [r7, #4]
 8000c96:	f7ff fa71 	bl	800017c <strlen>
 8000c9a:	60b8      	str	r0, [r7, #8]
 8000c9c:	e00d      	b.n	8000cba <affiche_fuseau_horaire_et_heure+0x6e>
		MAX7219_DisplayChar(i+1, ' ', 0);
 8000c9e:	68bb      	ldr	r3, [r7, #8]
 8000ca0:	3301      	adds	r3, #1
 8000ca2:	2200      	movs	r2, #0
 8000ca4:	2120      	movs	r1, #32
 8000ca6:	4618      	mov	r0, r3
 8000ca8:	f004 fba3 	bl	80053f2 <MAX7219_DisplayChar>
		HAL_Delay(500);
 8000cac:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000cb0:	f001 f86c 	bl	8001d8c <HAL_Delay>
	for (size_t i = strlen(fuseau); i < 4; i++) {
 8000cb4:	68bb      	ldr	r3, [r7, #8]
 8000cb6:	3301      	adds	r3, #1
 8000cb8:	60bb      	str	r3, [r7, #8]
 8000cba:	68bb      	ldr	r3, [r7, #8]
 8000cbc:	2b03      	cmp	r3, #3
 8000cbe:	d9ee      	bls.n	8000c9e <affiche_fuseau_horaire_et_heure+0x52>
	}

	// Calculer et afficher l'heure locale
	affiche_heure_locale();
 8000cc0:	f000 f808 	bl	8000cd4 <affiche_heure_locale>
}
 8000cc4:	bf00      	nop
 8000cc6:	3710      	adds	r7, #16
 8000cc8:	46bd      	mov	sp, r7
 8000cca:	bd80      	pop	{r7, pc}
 8000ccc:	200001c0 	.word	0x200001c0
 8000cd0:	20000008 	.word	0x20000008

08000cd4 <affiche_heure_locale>:

void affiche_heure_locale() {
 8000cd4:	b580      	push	{r7, lr}
 8000cd6:	b088      	sub	sp, #32
 8000cd8:	af00      	add	r7, sp, #0
	// Récupérer le décalage horaire du fuseau horaire actuel
	int decalage = fuseaux_horaires[current_index].decalage;
 8000cda:	4b33      	ldr	r3, [pc, #204]	; (8000da8 <affiche_heure_locale+0xd4>)
 8000cdc:	681b      	ldr	r3, [r3, #0]
 8000cde:	4a33      	ldr	r2, [pc, #204]	; (8000dac <affiche_heure_locale+0xd8>)
 8000ce0:	00db      	lsls	r3, r3, #3
 8000ce2:	4413      	add	r3, r2
 8000ce4:	685b      	ldr	r3, [r3, #4]
 8000ce6:	61bb      	str	r3, [r7, #24]

	RTC_TimeTypeDef sTime;
	RTC_DateTypeDef sDate;

	HAL_RTC_GetDate(&hrtc, &sDate, RTC_FORMAT_BIN);
 8000ce8:	463b      	mov	r3, r7
 8000cea:	2200      	movs	r2, #0
 8000cec:	4619      	mov	r1, r3
 8000cee:	4830      	ldr	r0, [pc, #192]	; (8000db0 <affiche_heure_locale+0xdc>)
 8000cf0:	f003 f8c3 	bl	8003e7a <HAL_RTC_GetDate>
	HAL_RTC_GetTime(&hrtc, &sTime, RTC_FORMAT_BIN);
 8000cf4:	1d3b      	adds	r3, r7, #4
 8000cf6:	2200      	movs	r2, #0
 8000cf8:	4619      	mov	r1, r3
 8000cfa:	482d      	ldr	r0, [pc, #180]	; (8000db0 <affiche_heure_locale+0xdc>)
 8000cfc:	f002 ffdb 	bl	8003cb6 <HAL_RTC_GetTime>

	// Calculer l'heure locale en ajoutant le décalage
	int valeurdecalage = sTime.Hours + decalage;
 8000d00:	793b      	ldrb	r3, [r7, #4]
 8000d02:	461a      	mov	r2, r3
 8000d04:	69bb      	ldr	r3, [r7, #24]
 8000d06:	4413      	add	r3, r2
 8000d08:	61fb      	str	r3, [r7, #28]

	// Gérer les cas où l'heure dépasse 24 heures ou est inférieure à 0
	if (valeurdecalage >= 24) {
 8000d0a:	69fb      	ldr	r3, [r7, #28]
 8000d0c:	2b17      	cmp	r3, #23
 8000d0e:	dd03      	ble.n	8000d18 <affiche_heure_locale+0x44>
		valeurdecalage -= 24;
 8000d10:	69fb      	ldr	r3, [r7, #28]
 8000d12:	3b18      	subs	r3, #24
 8000d14:	61fb      	str	r3, [r7, #28]
 8000d16:	e005      	b.n	8000d24 <affiche_heure_locale+0x50>
	} else if (valeurdecalage < 0) {
 8000d18:	69fb      	ldr	r3, [r7, #28]
 8000d1a:	2b00      	cmp	r3, #0
 8000d1c:	da02      	bge.n	8000d24 <affiche_heure_locale+0x50>
		valeurdecalage += 24;
 8000d1e:	69fb      	ldr	r3, [r7, #28]
 8000d20:	3318      	adds	r3, #24
 8000d22:	61fb      	str	r3, [r7, #28]
	}

	// Afficher l'heure locale sur l'afficheur 7 segments
	MAX7219_DisplayChar(1, (valeurdecalage / 10) + '0', 0);
 8000d24:	69fb      	ldr	r3, [r7, #28]
 8000d26:	4a23      	ldr	r2, [pc, #140]	; (8000db4 <affiche_heure_locale+0xe0>)
 8000d28:	fb82 1203 	smull	r1, r2, r2, r3
 8000d2c:	1092      	asrs	r2, r2, #2
 8000d2e:	17db      	asrs	r3, r3, #31
 8000d30:	1ad3      	subs	r3, r2, r3
 8000d32:	3330      	adds	r3, #48	; 0x30
 8000d34:	2200      	movs	r2, #0
 8000d36:	4619      	mov	r1, r3
 8000d38:	2001      	movs	r0, #1
 8000d3a:	f004 fb5a 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(2, (valeurdecalage % 10) + '0', 1);
 8000d3e:	69f9      	ldr	r1, [r7, #28]
 8000d40:	4b1c      	ldr	r3, [pc, #112]	; (8000db4 <affiche_heure_locale+0xe0>)
 8000d42:	fb83 2301 	smull	r2, r3, r3, r1
 8000d46:	109a      	asrs	r2, r3, #2
 8000d48:	17cb      	asrs	r3, r1, #31
 8000d4a:	1ad2      	subs	r2, r2, r3
 8000d4c:	4613      	mov	r3, r2
 8000d4e:	009b      	lsls	r3, r3, #2
 8000d50:	4413      	add	r3, r2
 8000d52:	005b      	lsls	r3, r3, #1
 8000d54:	1aca      	subs	r2, r1, r3
 8000d56:	f102 0330 	add.w	r3, r2, #48	; 0x30
 8000d5a:	2201      	movs	r2, #1
 8000d5c:	4619      	mov	r1, r3
 8000d5e:	2002      	movs	r0, #2
 8000d60:	f004 fb47 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(3, (sTime.Minutes / 10) + '0', 0);
 8000d64:	797b      	ldrb	r3, [r7, #5]
 8000d66:	4a14      	ldr	r2, [pc, #80]	; (8000db8 <affiche_heure_locale+0xe4>)
 8000d68:	fba2 2303 	umull	r2, r3, r2, r3
 8000d6c:	08db      	lsrs	r3, r3, #3
 8000d6e:	b2db      	uxtb	r3, r3
 8000d70:	3330      	adds	r3, #48	; 0x30
 8000d72:	2200      	movs	r2, #0
 8000d74:	4619      	mov	r1, r3
 8000d76:	2003      	movs	r0, #3
 8000d78:	f004 fb3b 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(4, (sTime.Minutes  % 10) + '0', 0);
 8000d7c:	797a      	ldrb	r2, [r7, #5]
 8000d7e:	4b0e      	ldr	r3, [pc, #56]	; (8000db8 <affiche_heure_locale+0xe4>)
 8000d80:	fba3 1302 	umull	r1, r3, r3, r2
 8000d84:	08d9      	lsrs	r1, r3, #3
 8000d86:	460b      	mov	r3, r1
 8000d88:	009b      	lsls	r3, r3, #2
 8000d8a:	440b      	add	r3, r1
 8000d8c:	005b      	lsls	r3, r3, #1
 8000d8e:	1ad3      	subs	r3, r2, r3
 8000d90:	b2db      	uxtb	r3, r3
 8000d92:	3330      	adds	r3, #48	; 0x30
 8000d94:	2200      	movs	r2, #0
 8000d96:	4619      	mov	r1, r3
 8000d98:	2004      	movs	r0, #4
 8000d9a:	f004 fb2a 	bl	80053f2 <MAX7219_DisplayChar>
}
 8000d9e:	bf00      	nop
 8000da0:	3720      	adds	r7, #32
 8000da2:	46bd      	mov	sp, r7
 8000da4:	bd80      	pop	{r7, pc}
 8000da6:	bf00      	nop
 8000da8:	200001c0 	.word	0x200001c0
 8000dac:	20000008 	.word	0x20000008
 8000db0:	20000108 	.word	0x20000108
 8000db4:	66666667 	.word	0x66666667
 8000db8:	cccccccd 	.word	0xcccccccd

08000dbc <boucle_affiche>:

void boucle_affiche() {
 8000dbc:	b580      	push	{r7, lr}
 8000dbe:	af00      	add	r7, sp, #0
	affiche_fuseau_horaire_et_heure();
 8000dc0:	f7ff ff44 	bl	8000c4c <affiche_fuseau_horaire_et_heure>
	current_index = (current_index + 1) % (sizeof(fuseaux_horaires) / sizeof(fuseaux_horaires[0]));
 8000dc4:	4b09      	ldr	r3, [pc, #36]	; (8000dec <boucle_affiche+0x30>)
 8000dc6:	681b      	ldr	r3, [r3, #0]
 8000dc8:	3301      	adds	r3, #1
 8000dca:	4619      	mov	r1, r3
 8000dcc:	4b08      	ldr	r3, [pc, #32]	; (8000df0 <boucle_affiche+0x34>)
 8000dce:	fba3 2301 	umull	r2, r3, r3, r1
 8000dd2:	089a      	lsrs	r2, r3, #2
 8000dd4:	4613      	mov	r3, r2
 8000dd6:	009b      	lsls	r3, r3, #2
 8000dd8:	4413      	add	r3, r2
 8000dda:	1aca      	subs	r2, r1, r3
 8000ddc:	4b03      	ldr	r3, [pc, #12]	; (8000dec <boucle_affiche+0x30>)
 8000dde:	601a      	str	r2, [r3, #0]
	HAL_Delay(2000);
 8000de0:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8000de4:	f000 ffd2 	bl	8001d8c <HAL_Delay>
}
 8000de8:	bf00      	nop
 8000dea:	bd80      	pop	{r7, pc}
 8000dec:	200001c0 	.word	0x200001c0
 8000df0:	cccccccd 	.word	0xcccccccd

08000df4 <reveil>:
	printf("Entrée en mode SLEEP\n");
	HAL_SuspendTick();
	HAL_PWR_EnterSLEEPMode(PWR_LOWPOWERREGULATOR_ON, PWR_STOPENTRY_WFI);;
}

void reveil(){
 8000df4:	b580      	push	{r7, lr}
 8000df6:	af00      	add	r7, sp, #0
	HAL_ResumeTick();
 8000df8:	f000 ffea 	bl	8001dd0 <HAL_ResumeTick>
	printf("Sortie du mode SLEEP\n");
 8000dfc:	4802      	ldr	r0, [pc, #8]	; (8000e08 <reveil+0x14>)
 8000dfe:	f004 fc9b 	bl	8005738 <puts>
}
 8000e02:	bf00      	nop
 8000e04:	bd80      	pop	{r7, pc}
 8000e06:	bf00      	nop
 8000e08:	0800644c 	.word	0x0800644c

08000e0c <fonctionmod>:

void fonctionmod(){
 8000e0c:	b580      	push	{r7, lr}
 8000e0e:	af00      	add	r7, sp, #0
	if (HAL_GPIO_ReadPin(BTN3_GPIO_Port, BTN3_Pin) == GPIO_PIN_RESET){
		dodo();
	}
	*/

	switch(mode){
 8000e10:	4b59      	ldr	r3, [pc, #356]	; (8000f78 <fonctionmod+0x16c>)
 8000e12:	681b      	ldr	r3, [r3, #0]
 8000e14:	3b01      	subs	r3, #1
 8000e16:	2b03      	cmp	r3, #3
 8000e18:	f200 80a4 	bhi.w	8000f64 <fonctionmod+0x158>
 8000e1c:	a201      	add	r2, pc, #4	; (adr r2, 8000e24 <fonctionmod+0x18>)
 8000e1e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000e22:	bf00      	nop
 8000e24:	08000e35 	.word	0x08000e35
 8000e28:	08000e53 	.word	0x08000e53
 8000e2c:	08000eb5 	.word	0x08000eb5
 8000e30:	08000f3f 	.word	0x08000f3f
	case 1:
		if (HAL_GPIO_ReadPin(BTN1_GPIO_Port, BTN1_Pin) == GPIO_PIN_RESET) {
 8000e34:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000e38:	4850      	ldr	r0, [pc, #320]	; (8000f7c <fonctionmod+0x170>)
 8000e3a:	f001 ff4b 	bl	8002cd4 <HAL_GPIO_ReadPin>
 8000e3e:	4603      	mov	r3, r0
 8000e40:	2b00      	cmp	r3, #0
 8000e42:	f040 8091 	bne.w	8000f68 <fonctionmod+0x15c>
			printf("Lancement du chronometre \n");
 8000e46:	484e      	ldr	r0, [pc, #312]	; (8000f80 <fonctionmod+0x174>)
 8000e48:	f004 fc76 	bl	8005738 <puts>
			chronometre();
 8000e4c:	f000 f8aa 	bl	8000fa4 <chronometre>
		}
		break;
 8000e50:	e08a      	b.n	8000f68 <fonctionmod+0x15c>

	case 2:
		HAL_Delay(200);
 8000e52:	20c8      	movs	r0, #200	; 0xc8
 8000e54:	f000 ff9a 	bl	8001d8c <HAL_Delay>
		if (mode == 2){
 8000e58:	4b47      	ldr	r3, [pc, #284]	; (8000f78 <fonctionmod+0x16c>)
 8000e5a:	681b      	ldr	r3, [r3, #0]
 8000e5c:	2b02      	cmp	r3, #2
 8000e5e:	d129      	bne.n	8000eb4 <fonctionmod+0xa8>
			if (valide == 0){
 8000e60:	4b48      	ldr	r3, [pc, #288]	; (8000f84 <fonctionmod+0x178>)
 8000e62:	681b      	ldr	r3, [r3, #0]
 8000e64:	2b00      	cmp	r3, #0
 8000e66:	d106      	bne.n	8000e76 <fonctionmod+0x6a>
				//Faire un getTickCount pour eviter de spam le terminal.
				printf("Reglage du minuteur\n");
 8000e68:	4847      	ldr	r0, [pc, #284]	; (8000f88 <fonctionmod+0x17c>)
 8000e6a:	f004 fc65 	bl	8005738 <puts>
				adcfunction();
 8000e6e:	f000 fa37 	bl	80012e0 <adcfunction>
				affiche_num();
 8000e72:	f7ff fdeb 	bl	8000a4c <affiche_num>
			}
			if (HAL_GPIO_ReadPin(BTN1_GPIO_Port, BTN1_Pin) == GPIO_PIN_RESET){
 8000e76:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000e7a:	4840      	ldr	r0, [pc, #256]	; (8000f7c <fonctionmod+0x170>)
 8000e7c:	f001 ff2a 	bl	8002cd4 <HAL_GPIO_ReadPin>
 8000e80:	4603      	mov	r3, r0
 8000e82:	2b00      	cmp	r3, #0
 8000e84:	d116      	bne.n	8000eb4 <fonctionmod+0xa8>
				HAL_ADC_Stop(&hadc);
 8000e86:	4841      	ldr	r0, [pc, #260]	; (8000f8c <fonctionmod+0x180>)
 8000e88:	f001 f956 	bl	8002138 <HAL_ADC_Stop>
				adccheck ++;
 8000e8c:	4b40      	ldr	r3, [pc, #256]	; (8000f90 <fonctionmod+0x184>)
 8000e8e:	681b      	ldr	r3, [r3, #0]
 8000e90:	3301      	adds	r3, #1
 8000e92:	4a3f      	ldr	r2, [pc, #252]	; (8000f90 <fonctionmod+0x184>)
 8000e94:	6013      	str	r3, [r2, #0]
				printf("Temps valide !\n");
 8000e96:	483f      	ldr	r0, [pc, #252]	; (8000f94 <fonctionmod+0x188>)
 8000e98:	f004 fc4e 	bl	8005738 <puts>
				if (adccheck == 2){
 8000e9c:	4b3c      	ldr	r3, [pc, #240]	; (8000f90 <fonctionmod+0x184>)
 8000e9e:	681b      	ldr	r3, [r3, #0]
 8000ea0:	2b02      	cmp	r3, #2
 8000ea2:	d107      	bne.n	8000eb4 <fonctionmod+0xa8>
					valide = 1;
 8000ea4:	4b37      	ldr	r3, [pc, #220]	; (8000f84 <fonctionmod+0x178>)
 8000ea6:	2201      	movs	r2, #1
 8000ea8:	601a      	str	r2, [r3, #0]
					printf("Lancement du minuteur\n");
 8000eaa:	483b      	ldr	r0, [pc, #236]	; (8000f98 <fonctionmod+0x18c>)
 8000eac:	f004 fc44 	bl	8005738 <puts>
					minuteur();
 8000eb0:	f000 fb5a 	bl	8001568 <minuteur>
				}
			}
		}

	case 3:
		HAL_Delay(200);
 8000eb4:	20c8      	movs	r0, #200	; 0xc8
 8000eb6:	f000 ff69 	bl	8001d8c <HAL_Delay>
		if (mode == 3){
 8000eba:	4b2f      	ldr	r3, [pc, #188]	; (8000f78 <fonctionmod+0x16c>)
 8000ebc:	681b      	ldr	r3, [r3, #0]
 8000ebe:	2b03      	cmp	r3, #3
 8000ec0:	d154      	bne.n	8000f6c <fonctionmod+0x160>
			if (valide == 0){
 8000ec2:	4b30      	ldr	r3, [pc, #192]	; (8000f84 <fonctionmod+0x178>)
 8000ec4:	681b      	ldr	r3, [r3, #0]
 8000ec6:	2b00      	cmp	r3, #0
 8000ec8:	d11c      	bne.n	8000f04 <fonctionmod+0xf8>
				if (horlogevar != 0){
 8000eca:	4b34      	ldr	r3, [pc, #208]	; (8000f9c <fonctionmod+0x190>)
 8000ecc:	681b      	ldr	r3, [r3, #0]
 8000ece:	2b00      	cmp	r3, #0
 8000ed0:	d007      	beq.n	8000ee2 <fonctionmod+0xd6>
					printf("Reglage de l'alarme\n");
 8000ed2:	4833      	ldr	r0, [pc, #204]	; (8000fa0 <fonctionmod+0x194>)
 8000ed4:	f004 fc30 	bl	8005738 <puts>
					adchorloge();
 8000ed8:	f000 fa1e 	bl	8001318 <adchorloge>
					affiche_horloge();
 8000edc:	f7ff fe1e 	bl	8000b1c <affiche_horloge>
 8000ee0:	e005      	b.n	8000eee <fonctionmod+0xe2>
				}
				else{
					horloge();
 8000ee2:	f000 fba3 	bl	800162c <horloge>
					HAL_Delay(1000);
 8000ee6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000eea:	f000 ff4f 	bl	8001d8c <HAL_Delay>
				}
				if (HAL_GPIO_ReadPin(BTN2_GPIO_Port, BTN2_Pin) == GPIO_PIN_RESET){
 8000eee:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000ef2:	4822      	ldr	r0, [pc, #136]	; (8000f7c <fonctionmod+0x170>)
 8000ef4:	f001 feee 	bl	8002cd4 <HAL_GPIO_ReadPin>
 8000ef8:	4603      	mov	r3, r0
 8000efa:	2b00      	cmp	r3, #0
 8000efc:	d102      	bne.n	8000f04 <fonctionmod+0xf8>
					horlogevar = 1;
 8000efe:	4b27      	ldr	r3, [pc, #156]	; (8000f9c <fonctionmod+0x190>)
 8000f00:	2201      	movs	r2, #1
 8000f02:	601a      	str	r2, [r3, #0]
				}
			}
			if (HAL_GPIO_ReadPin(BTN1_GPIO_Port, BTN1_Pin) == GPIO_PIN_RESET){
 8000f04:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000f08:	481c      	ldr	r0, [pc, #112]	; (8000f7c <fonctionmod+0x170>)
 8000f0a:	f001 fee3 	bl	8002cd4 <HAL_GPIO_ReadPin>
 8000f0e:	4603      	mov	r3, r0
 8000f10:	2b00      	cmp	r3, #0
 8000f12:	d10a      	bne.n	8000f2a <fonctionmod+0x11e>
				HAL_ADC_Stop(&hadc);
 8000f14:	481d      	ldr	r0, [pc, #116]	; (8000f8c <fonctionmod+0x180>)
 8000f16:	f001 f90f 	bl	8002138 <HAL_ADC_Stop>
				adccheck ++;
 8000f1a:	4b1d      	ldr	r3, [pc, #116]	; (8000f90 <fonctionmod+0x184>)
 8000f1c:	681b      	ldr	r3, [r3, #0]
 8000f1e:	3301      	adds	r3, #1
 8000f20:	4a1b      	ldr	r2, [pc, #108]	; (8000f90 <fonctionmod+0x184>)
 8000f22:	6013      	str	r3, [r2, #0]
				printf("Temps valide !\n");
 8000f24:	481b      	ldr	r0, [pc, #108]	; (8000f94 <fonctionmod+0x188>)
 8000f26:	f004 fc07 	bl	8005738 <puts>
			}
			if (adccheck >= 2){
 8000f2a:	4b19      	ldr	r3, [pc, #100]	; (8000f90 <fonctionmod+0x184>)
 8000f2c:	681b      	ldr	r3, [r3, #0]
 8000f2e:	2b01      	cmp	r3, #1
 8000f30:	dd1c      	ble.n	8000f6c <fonctionmod+0x160>
				valide =1;
 8000f32:	4b14      	ldr	r3, [pc, #80]	; (8000f84 <fonctionmod+0x178>)
 8000f34:	2201      	movs	r2, #1
 8000f36:	601a      	str	r2, [r3, #0]
				checkhorloge();
 8000f38:	f000 fbd8 	bl	80016ec <checkhorloge>
			}
		}
		break;
 8000f3c:	e016      	b.n	8000f6c <fonctionmod+0x160>

	case 4:
		HAL_Delay(200);
 8000f3e:	20c8      	movs	r0, #200	; 0xc8
 8000f40:	f000 ff24 	bl	8001d8c <HAL_Delay>
		if (HAL_GPIO_ReadPin(BTN1_GPIO_Port, BTN1_Pin) == GPIO_PIN_RESET){
 8000f44:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000f48:	480c      	ldr	r0, [pc, #48]	; (8000f7c <fonctionmod+0x170>)
 8000f4a:	f001 fec3 	bl	8002cd4 <HAL_GPIO_ReadPin>
 8000f4e:	4603      	mov	r3, r0
 8000f50:	2b00      	cmp	r3, #0
 8000f52:	d10d      	bne.n	8000f70 <fonctionmod+0x164>
			while (mode == 4){
 8000f54:	e001      	b.n	8000f5a <fonctionmod+0x14e>
				boucle_affiche();
 8000f56:	f7ff ff31 	bl	8000dbc <boucle_affiche>
			while (mode == 4){
 8000f5a:	4b07      	ldr	r3, [pc, #28]	; (8000f78 <fonctionmod+0x16c>)
 8000f5c:	681b      	ldr	r3, [r3, #0]
 8000f5e:	2b04      	cmp	r3, #4
 8000f60:	d0f9      	beq.n	8000f56 <fonctionmod+0x14a>
			}

		}

		break;
 8000f62:	e005      	b.n	8000f70 <fonctionmod+0x164>

	default :
		break;
 8000f64:	bf00      	nop
 8000f66:	e004      	b.n	8000f72 <fonctionmod+0x166>
		break;
 8000f68:	bf00      	nop
 8000f6a:	e002      	b.n	8000f72 <fonctionmod+0x166>
		break;
 8000f6c:	bf00      	nop
 8000f6e:	e000      	b.n	8000f72 <fonctionmod+0x166>
		break;
 8000f70:	bf00      	nop
	}
}
 8000f72:	bf00      	nop
 8000f74:	bd80      	pop	{r7, pc}
 8000f76:	bf00      	nop
 8000f78:	20000000 	.word	0x20000000
 8000f7c:	40020000 	.word	0x40020000
 8000f80:	08006464 	.word	0x08006464
 8000f84:	200001ec 	.word	0x200001ec
 8000f88:	08006480 	.word	0x08006480
 8000f8c:	200000b4 	.word	0x200000b4
 8000f90:	200001f0 	.word	0x200001f0
 8000f94:	08006494 	.word	0x08006494
 8000f98:	080064a4 	.word	0x080064a4
 8000f9c:	200001f4 	.word	0x200001f4
 8000fa0:	080064bc 	.word	0x080064bc

08000fa4 <chronometre>:


void chronometre() {
 8000fa4:	b580      	push	{r7, lr}
 8000fa6:	b084      	sub	sp, #16
 8000fa8:	af00      	add	r7, sp, #0
	MAX7219_Clear();
 8000faa:	f004 fa0c 	bl	80053c6 <MAX7219_Clear>
	MAX7219_Init();
 8000fae:	f004 f9d3 	bl	8005358 <MAX7219_Init>
	stopchrono = 1 ;
 8000fb2:	4b3f      	ldr	r3, [pc, #252]	; (80010b0 <chronometre+0x10c>)
 8000fb4:	2201      	movs	r2, #1
 8000fb6:	601a      	str	r2, [r3, #0]

	uint32_t start_time = HAL_GetTick(); // Temps de départ en millisecondes
 8000fb8:	f000 fede 	bl	8001d78 <HAL_GetTick>
 8000fbc:	60b8      	str	r0, [r7, #8]

	uint32_t minutes = 0; // Initialisation des minutes à 0
 8000fbe:	2300      	movs	r3, #0
 8000fc0:	60fb      	str	r3, [r7, #12]
	uint32_t seconds = 0; // Initialisation des secondes à 0
 8000fc2:	2300      	movs	r3, #0
 8000fc4:	607b      	str	r3, [r7, #4]
	while ((minutes < 99)&&(stopchrono == 1)) {
 8000fc6:	e068      	b.n	800109a <chronometre+0xf6>
		uint32_t elapsed_time = HAL_GetTick() - start_time; // Temps écoulé depuis le début du chronomètre
 8000fc8:	f000 fed6 	bl	8001d78 <HAL_GetTick>
 8000fcc:	4602      	mov	r2, r0
 8000fce:	68bb      	ldr	r3, [r7, #8]
 8000fd0:	1ad3      	subs	r3, r2, r3
 8000fd2:	603b      	str	r3, [r7, #0]

		// Calculez les minutes et les secondes
		minutes = (elapsed_time / (1000 * 60)) % 100;
 8000fd4:	683b      	ldr	r3, [r7, #0]
 8000fd6:	4a37      	ldr	r2, [pc, #220]	; (80010b4 <chronometre+0x110>)
 8000fd8:	fba2 2303 	umull	r2, r3, r2, r3
 8000fdc:	0b9b      	lsrs	r3, r3, #14
 8000fde:	4a36      	ldr	r2, [pc, #216]	; (80010b8 <chronometre+0x114>)
 8000fe0:	fba2 1203 	umull	r1, r2, r2, r3
 8000fe4:	0952      	lsrs	r2, r2, #5
 8000fe6:	2164      	movs	r1, #100	; 0x64
 8000fe8:	fb01 f202 	mul.w	r2, r1, r2
 8000fec:	1a9b      	subs	r3, r3, r2
 8000fee:	60fb      	str	r3, [r7, #12]
		seconds = (elapsed_time / 1000) % 60;
 8000ff0:	683b      	ldr	r3, [r7, #0]
 8000ff2:	4a32      	ldr	r2, [pc, #200]	; (80010bc <chronometre+0x118>)
 8000ff4:	fba2 2303 	umull	r2, r3, r2, r3
 8000ff8:	099a      	lsrs	r2, r3, #6
 8000ffa:	4b31      	ldr	r3, [pc, #196]	; (80010c0 <chronometre+0x11c>)
 8000ffc:	fba3 1302 	umull	r1, r3, r3, r2
 8001000:	0959      	lsrs	r1, r3, #5
 8001002:	460b      	mov	r3, r1
 8001004:	011b      	lsls	r3, r3, #4
 8001006:	1a5b      	subs	r3, r3, r1
 8001008:	009b      	lsls	r3, r3, #2
 800100a:	1ad3      	subs	r3, r2, r3
 800100c:	607b      	str	r3, [r7, #4]

		// Affichez les valeurs calculées sur les afficheurs 7 segments
		MAX7219_DisplayChar(1, minutes / 10 + '0', 0);
 800100e:	68fb      	ldr	r3, [r7, #12]
 8001010:	4a2c      	ldr	r2, [pc, #176]	; (80010c4 <chronometre+0x120>)
 8001012:	fba2 2303 	umull	r2, r3, r2, r3
 8001016:	08db      	lsrs	r3, r3, #3
 8001018:	3330      	adds	r3, #48	; 0x30
 800101a:	2200      	movs	r2, #0
 800101c:	4619      	mov	r1, r3
 800101e:	2001      	movs	r0, #1
 8001020:	f004 f9e7 	bl	80053f2 <MAX7219_DisplayChar>
		MAX7219_DisplayChar(2, minutes % 10 + '0', 1);
 8001024:	68f9      	ldr	r1, [r7, #12]
 8001026:	4b27      	ldr	r3, [pc, #156]	; (80010c4 <chronometre+0x120>)
 8001028:	fba3 2301 	umull	r2, r3, r3, r1
 800102c:	08da      	lsrs	r2, r3, #3
 800102e:	4613      	mov	r3, r2
 8001030:	009b      	lsls	r3, r3, #2
 8001032:	4413      	add	r3, r2
 8001034:	005b      	lsls	r3, r3, #1
 8001036:	1aca      	subs	r2, r1, r3
 8001038:	f102 0330 	add.w	r3, r2, #48	; 0x30
 800103c:	2201      	movs	r2, #1
 800103e:	4619      	mov	r1, r3
 8001040:	2002      	movs	r0, #2
 8001042:	f004 f9d6 	bl	80053f2 <MAX7219_DisplayChar>
		MAX7219_DisplayChar(3, seconds / 10 + '0', 0);
 8001046:	687b      	ldr	r3, [r7, #4]
 8001048:	4a1e      	ldr	r2, [pc, #120]	; (80010c4 <chronometre+0x120>)
 800104a:	fba2 2303 	umull	r2, r3, r2, r3
 800104e:	08db      	lsrs	r3, r3, #3
 8001050:	3330      	adds	r3, #48	; 0x30
 8001052:	2200      	movs	r2, #0
 8001054:	4619      	mov	r1, r3
 8001056:	2003      	movs	r0, #3
 8001058:	f004 f9cb 	bl	80053f2 <MAX7219_DisplayChar>
		MAX7219_DisplayChar(4, seconds % 10 + '0', 0);
 800105c:	6879      	ldr	r1, [r7, #4]
 800105e:	4b19      	ldr	r3, [pc, #100]	; (80010c4 <chronometre+0x120>)
 8001060:	fba3 2301 	umull	r2, r3, r3, r1
 8001064:	08da      	lsrs	r2, r3, #3
 8001066:	4613      	mov	r3, r2
 8001068:	009b      	lsls	r3, r3, #2
 800106a:	4413      	add	r3, r2
 800106c:	005b      	lsls	r3, r3, #1
 800106e:	1aca      	subs	r2, r1, r3
 8001070:	f102 0330 	add.w	r3, r2, #48	; 0x30
 8001074:	2200      	movs	r2, #0
 8001076:	4619      	mov	r1, r3
 8001078:	2004      	movs	r0, #4
 800107a:	f004 f9ba 	bl	80053f2 <MAX7219_DisplayChar>

		HAL_Delay(1000);
 800107e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001082:	f000 fe83 	bl	8001d8c <HAL_Delay>

		if (HAL_GPIO_ReadPin(BTN2_GPIO_Port, BTN2_Pin) == GPIO_PIN_RESET){
 8001086:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800108a:	480f      	ldr	r0, [pc, #60]	; (80010c8 <chronometre+0x124>)
 800108c:	f001 fe22 	bl	8002cd4 <HAL_GPIO_ReadPin>
 8001090:	4603      	mov	r3, r0
 8001092:	2b00      	cmp	r3, #0
 8001094:	d101      	bne.n	800109a <chronometre+0xf6>
			arreter_chronometre();
 8001096:	f000 f819 	bl	80010cc <arreter_chronometre>
	while ((minutes < 99)&&(stopchrono == 1)) {
 800109a:	68fb      	ldr	r3, [r7, #12]
 800109c:	2b62      	cmp	r3, #98	; 0x62
 800109e:	d803      	bhi.n	80010a8 <chronometre+0x104>
 80010a0:	4b03      	ldr	r3, [pc, #12]	; (80010b0 <chronometre+0x10c>)
 80010a2:	681b      	ldr	r3, [r3, #0]
 80010a4:	2b01      	cmp	r3, #1
 80010a6:	d08f      	beq.n	8000fc8 <chronometre+0x24>
		}
	}
}
 80010a8:	bf00      	nop
 80010aa:	3710      	adds	r7, #16
 80010ac:	46bd      	mov	sp, r7
 80010ae:	bd80      	pop	{r7, pc}
 80010b0:	20000004 	.word	0x20000004
 80010b4:	45e7b273 	.word	0x45e7b273
 80010b8:	51eb851f 	.word	0x51eb851f
 80010bc:	10624dd3 	.word	0x10624dd3
 80010c0:	88888889 	.word	0x88888889
 80010c4:	cccccccd 	.word	0xcccccccd
 80010c8:	40020000 	.word	0x40020000

080010cc <arreter_chronometre>:

void arreter_chronometre() {
 80010cc:	b580      	push	{r7, lr}
 80010ce:	af00      	add	r7, sp, #0
	printf("Arret du chronometre\n");
 80010d0:	4803      	ldr	r0, [pc, #12]	; (80010e0 <arreter_chronometre+0x14>)
 80010d2:	f004 fb31 	bl	8005738 <puts>
	stopchrono = 0;
 80010d6:	4b03      	ldr	r3, [pc, #12]	; (80010e4 <arreter_chronometre+0x18>)
 80010d8:	2200      	movs	r2, #0
 80010da:	601a      	str	r2, [r3, #0]
}
 80010dc:	bf00      	nop
 80010de:	bd80      	pop	{r7, pc}
 80010e0:	080064d0 	.word	0x080064d0
 80010e4:	20000004 	.word	0x20000004

080010e8 <switchmode>:

void switchmode(){
 80010e8:	b580      	push	{r7, lr}
 80010ea:	af00      	add	r7, sp, #0
	switch(mode){
 80010ec:	4b14      	ldr	r3, [pc, #80]	; (8001140 <switchmode+0x58>)
 80010ee:	681b      	ldr	r3, [r3, #0]
 80010f0:	3b01      	subs	r3, #1
 80010f2:	2b03      	cmp	r3, #3
 80010f4:	d822      	bhi.n	800113c <switchmode+0x54>
 80010f6:	a201      	add	r2, pc, #4	; (adr r2, 80010fc <switchmode+0x14>)
 80010f8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80010fc:	0800110d 	.word	0x0800110d
 8001100:	08001119 	.word	0x08001119
 8001104:	08001125 	.word	0x08001125
 8001108:	08001131 	.word	0x08001131
	case 1:
		MAX7219_DisplayChar(4,'1', 0); // Pas de point décimal
 800110c:	2200      	movs	r2, #0
 800110e:	2131      	movs	r1, #49	; 0x31
 8001110:	2004      	movs	r0, #4
 8001112:	f004 f96e 	bl	80053f2 <MAX7219_DisplayChar>
		break;
 8001116:	e011      	b.n	800113c <switchmode+0x54>
	case 2:
		MAX7219_DisplayChar(4,'2', 0);
 8001118:	2200      	movs	r2, #0
 800111a:	2132      	movs	r1, #50	; 0x32
 800111c:	2004      	movs	r0, #4
 800111e:	f004 f968 	bl	80053f2 <MAX7219_DisplayChar>
		break;
 8001122:	e00b      	b.n	800113c <switchmode+0x54>
	case 3:
		MAX7219_DisplayChar(4,'3', 0); // Pas de point décimal
 8001124:	2200      	movs	r2, #0
 8001126:	2133      	movs	r1, #51	; 0x33
 8001128:	2004      	movs	r0, #4
 800112a:	f004 f962 	bl	80053f2 <MAX7219_DisplayChar>
		break;
 800112e:	e005      	b.n	800113c <switchmode+0x54>
	case 4:
		MAX7219_DisplayChar(4,'4', 0);
 8001130:	2200      	movs	r2, #0
 8001132:	2134      	movs	r1, #52	; 0x34
 8001134:	2004      	movs	r0, #4
 8001136:	f004 f95c 	bl	80053f2 <MAX7219_DisplayChar>
		break;
 800113a:	bf00      	nop
	}
}
 800113c:	bf00      	nop
 800113e:	bd80      	pop	{r7, pc}
 8001140:	20000000 	.word	0x20000000

08001144 <adcsecondes>:

void adcsecondes(){
 8001144:	b580      	push	{r7, lr}
 8001146:	b084      	sub	sp, #16
 8001148:	af00      	add	r7, sp, #0
	//Secondes
	HAL_ADC_Start(&hadc);
 800114a:	481a      	ldr	r0, [pc, #104]	; (80011b4 <adcsecondes+0x70>)
 800114c:	f000 ff94 	bl	8002078 <HAL_ADC_Start>
	ADC_ChannelConfTypeDef sConfig = {0};
 8001150:	1d3b      	adds	r3, r7, #4
 8001152:	2200      	movs	r2, #0
 8001154:	601a      	str	r2, [r3, #0]
 8001156:	605a      	str	r2, [r3, #4]
 8001158:	609a      	str	r2, [r3, #8]
	sConfig.Channel = ADC_CHANNEL_0;
 800115a:	2300      	movs	r3, #0
 800115c:	607b      	str	r3, [r7, #4]
	HAL_ADC_ConfigChannel(&hadc, &sConfig);
 800115e:	1d3b      	adds	r3, r7, #4
 8001160:	4619      	mov	r1, r3
 8001162:	4814      	ldr	r0, [pc, #80]	; (80011b4 <adcsecondes+0x70>)
 8001164:	f001 f90e 	bl	8002384 <HAL_ADC_ConfigChannel>
	HAL_ADC_PollForEvent(&hadc, ADC_AWD_EVENT, 1000);
 8001168:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800116c:	2101      	movs	r1, #1
 800116e:	4811      	ldr	r0, [pc, #68]	; (80011b4 <adcsecondes+0x70>)
 8001170:	f001 f89e 	bl	80022b0 <HAL_ADC_PollForEvent>
	HAL_ADC_PollForConversion(&hadc, 1000);
 8001174:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001178:	480e      	ldr	r0, [pc, #56]	; (80011b4 <adcsecondes+0x70>)
 800117a:	f001 f809 	bl	8002190 <HAL_ADC_PollForConversion>
	analogValue = HAL_ADC_GetValue(&hadc);
 800117e:	480d      	ldr	r0, [pc, #52]	; (80011b4 <adcsecondes+0x70>)
 8001180:	f001 f8f3 	bl	800236a <HAL_ADC_GetValue>
 8001184:	4603      	mov	r3, r0
 8001186:	461a      	mov	r2, r3
 8001188:	4b0b      	ldr	r3, [pc, #44]	; (80011b8 <adcsecondes+0x74>)
 800118a:	601a      	str	r2, [r3, #0]
	valeur = analogValue / 68;
 800118c:	4b0a      	ldr	r3, [pc, #40]	; (80011b8 <adcsecondes+0x74>)
 800118e:	681b      	ldr	r3, [r3, #0]
 8001190:	4a0a      	ldr	r2, [pc, #40]	; (80011bc <adcsecondes+0x78>)
 8001192:	fb82 1203 	smull	r1, r2, r2, r3
 8001196:	1152      	asrs	r2, r2, #5
 8001198:	17db      	asrs	r3, r3, #31
 800119a:	1ad3      	subs	r3, r2, r3
 800119c:	4a08      	ldr	r2, [pc, #32]	; (80011c0 <adcsecondes+0x7c>)
 800119e:	6013      	str	r3, [r2, #0]

	HAL_ADC_Stop(&hadc);
 80011a0:	4804      	ldr	r0, [pc, #16]	; (80011b4 <adcsecondes+0x70>)
 80011a2:	f000 ffc9 	bl	8002138 <HAL_ADC_Stop>
	HAL_Delay(50);
 80011a6:	2032      	movs	r0, #50	; 0x32
 80011a8:	f000 fdf0 	bl	8001d8c <HAL_Delay>
}
 80011ac:	bf00      	nop
 80011ae:	3710      	adds	r7, #16
 80011b0:	46bd      	mov	sp, r7
 80011b2:	bd80      	pop	{r7, pc}
 80011b4:	200000b4 	.word	0x200000b4
 80011b8:	200001c4 	.word	0x200001c4
 80011bc:	78787879 	.word	0x78787879
 80011c0:	200001cc 	.word	0x200001cc

080011c4 <adcminutes>:

void adcminutes(int conversion){
 80011c4:	b580      	push	{r7, lr}
 80011c6:	b086      	sub	sp, #24
 80011c8:	af00      	add	r7, sp, #0
 80011ca:	6078      	str	r0, [r7, #4]
	// Minutes
	HAL_ADC_Start(&hadc);
 80011cc:	481c      	ldr	r0, [pc, #112]	; (8001240 <adcminutes+0x7c>)
 80011ce:	f000 ff53 	bl	8002078 <HAL_ADC_Start>
	ADC_ChannelConfTypeDef sConfig = {0};
 80011d2:	f107 030c 	add.w	r3, r7, #12
 80011d6:	2200      	movs	r2, #0
 80011d8:	601a      	str	r2, [r3, #0]
 80011da:	605a      	str	r2, [r3, #4]
 80011dc:	609a      	str	r2, [r3, #8]
	sConfig.Channel = ADC_CHANNEL_1; // Réaffectation du canal ADC
 80011de:	2301      	movs	r3, #1
 80011e0:	60fb      	str	r3, [r7, #12]
	HAL_ADC_ConfigChannel(&hadc, &sConfig);
 80011e2:	f107 030c 	add.w	r3, r7, #12
 80011e6:	4619      	mov	r1, r3
 80011e8:	4815      	ldr	r0, [pc, #84]	; (8001240 <adcminutes+0x7c>)
 80011ea:	f001 f8cb 	bl	8002384 <HAL_ADC_ConfigChannel>
	HAL_ADC_PollForEvent(&hadc, ADC_AWD_EVENT, 1000);
 80011ee:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80011f2:	2101      	movs	r1, #1
 80011f4:	4812      	ldr	r0, [pc, #72]	; (8001240 <adcminutes+0x7c>)
 80011f6:	f001 f85b 	bl	80022b0 <HAL_ADC_PollForEvent>
	HAL_ADC_PollForConversion(&hadc, 1000);
 80011fa:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80011fe:	4810      	ldr	r0, [pc, #64]	; (8001240 <adcminutes+0x7c>)
 8001200:	f000 ffc6 	bl	8002190 <HAL_ADC_PollForConversion>
	analogValueMin = HAL_ADC_GetValue(&hadc);
 8001204:	480e      	ldr	r0, [pc, #56]	; (8001240 <adcminutes+0x7c>)
 8001206:	f001 f8b0 	bl	800236a <HAL_ADC_GetValue>
 800120a:	4603      	mov	r3, r0
 800120c:	461a      	mov	r2, r3
 800120e:	4b0d      	ldr	r3, [pc, #52]	; (8001244 <adcminutes+0x80>)
 8001210:	601a      	str	r2, [r3, #0]
	valeurMin = analogValueMin / conversion;
 8001212:	4b0c      	ldr	r3, [pc, #48]	; (8001244 <adcminutes+0x80>)
 8001214:	681a      	ldr	r2, [r3, #0]
 8001216:	687b      	ldr	r3, [r7, #4]
 8001218:	fb92 f3f3 	sdiv	r3, r2, r3
 800121c:	4a0a      	ldr	r2, [pc, #40]	; (8001248 <adcminutes+0x84>)
 800121e:	6013      	str	r3, [r2, #0]

	HAL_ADC_Stop(&hadc);
 8001220:	4807      	ldr	r0, [pc, #28]	; (8001240 <adcminutes+0x7c>)
 8001222:	f000 ff89 	bl	8002138 <HAL_ADC_Stop>
	//printf("ADC ValueMin= %d\n", analogValueMin);
	printf("Minutes : %d\n",valeurMin);
 8001226:	4b08      	ldr	r3, [pc, #32]	; (8001248 <adcminutes+0x84>)
 8001228:	681b      	ldr	r3, [r3, #0]
 800122a:	4619      	mov	r1, r3
 800122c:	4807      	ldr	r0, [pc, #28]	; (800124c <adcminutes+0x88>)
 800122e:	f004 fa1d 	bl	800566c <iprintf>
	HAL_Delay(50);
 8001232:	2032      	movs	r0, #50	; 0x32
 8001234:	f000 fdaa 	bl	8001d8c <HAL_Delay>
}
 8001238:	bf00      	nop
 800123a:	3718      	adds	r7, #24
 800123c:	46bd      	mov	sp, r7
 800123e:	bd80      	pop	{r7, pc}
 8001240:	200000b4 	.word	0x200000b4
 8001244:	200001c8 	.word	0x200001c8
 8001248:	200001d0 	.word	0x200001d0
 800124c:	080064e8 	.word	0x080064e8

08001250 <adcheures>:

void adcheures(){
 8001250:	b580      	push	{r7, lr}
 8001252:	b084      	sub	sp, #16
 8001254:	af00      	add	r7, sp, #0
	// Heures
	HAL_ADC_Start(&hadc);
 8001256:	481d      	ldr	r0, [pc, #116]	; (80012cc <adcheures+0x7c>)
 8001258:	f000 ff0e 	bl	8002078 <HAL_ADC_Start>
	ADC_ChannelConfTypeDef sConfig = {0};
 800125c:	1d3b      	adds	r3, r7, #4
 800125e:	2200      	movs	r2, #0
 8001260:	601a      	str	r2, [r3, #0]
 8001262:	605a      	str	r2, [r3, #4]
 8001264:	609a      	str	r2, [r3, #8]
	sConfig.Channel = ADC_CHANNEL_1; // Réaffectation du canal ADC
 8001266:	2301      	movs	r3, #1
 8001268:	607b      	str	r3, [r7, #4]
	HAL_ADC_ConfigChannel(&hadc, &sConfig);
 800126a:	1d3b      	adds	r3, r7, #4
 800126c:	4619      	mov	r1, r3
 800126e:	4817      	ldr	r0, [pc, #92]	; (80012cc <adcheures+0x7c>)
 8001270:	f001 f888 	bl	8002384 <HAL_ADC_ConfigChannel>
	HAL_ADC_PollForEvent(&hadc, ADC_AWD_EVENT, 1000);
 8001274:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001278:	2101      	movs	r1, #1
 800127a:	4814      	ldr	r0, [pc, #80]	; (80012cc <adcheures+0x7c>)
 800127c:	f001 f818 	bl	80022b0 <HAL_ADC_PollForEvent>
	HAL_ADC_PollForConversion(&hadc, 1000);
 8001280:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001284:	4811      	ldr	r0, [pc, #68]	; (80012cc <adcheures+0x7c>)
 8001286:	f000 ff83 	bl	8002190 <HAL_ADC_PollForConversion>
	analogValue = HAL_ADC_GetValue(&hadc);
 800128a:	4810      	ldr	r0, [pc, #64]	; (80012cc <adcheures+0x7c>)
 800128c:	f001 f86d 	bl	800236a <HAL_ADC_GetValue>
 8001290:	4603      	mov	r3, r0
 8001292:	461a      	mov	r2, r3
 8001294:	4b0e      	ldr	r3, [pc, #56]	; (80012d0 <adcheures+0x80>)
 8001296:	601a      	str	r2, [r3, #0]
	valeur = analogValue / 170;
 8001298:	4b0d      	ldr	r3, [pc, #52]	; (80012d0 <adcheures+0x80>)
 800129a:	681b      	ldr	r3, [r3, #0]
 800129c:	4a0d      	ldr	r2, [pc, #52]	; (80012d4 <adcheures+0x84>)
 800129e:	fb82 1203 	smull	r1, r2, r2, r3
 80012a2:	1192      	asrs	r2, r2, #6
 80012a4:	17db      	asrs	r3, r3, #31
 80012a6:	1ad3      	subs	r3, r2, r3
 80012a8:	4a0b      	ldr	r2, [pc, #44]	; (80012d8 <adcheures+0x88>)
 80012aa:	6013      	str	r3, [r2, #0]

	printf("Heures : %d\n",valeur);
 80012ac:	4b0a      	ldr	r3, [pc, #40]	; (80012d8 <adcheures+0x88>)
 80012ae:	681b      	ldr	r3, [r3, #0]
 80012b0:	4619      	mov	r1, r3
 80012b2:	480a      	ldr	r0, [pc, #40]	; (80012dc <adcheures+0x8c>)
 80012b4:	f004 f9da 	bl	800566c <iprintf>

	HAL_ADC_Stop(&hadc);
 80012b8:	4804      	ldr	r0, [pc, #16]	; (80012cc <adcheures+0x7c>)
 80012ba:	f000 ff3d 	bl	8002138 <HAL_ADC_Stop>
	HAL_Delay(50);
 80012be:	2032      	movs	r0, #50	; 0x32
 80012c0:	f000 fd64 	bl	8001d8c <HAL_Delay>
}
 80012c4:	bf00      	nop
 80012c6:	3710      	adds	r7, #16
 80012c8:	46bd      	mov	sp, r7
 80012ca:	bd80      	pop	{r7, pc}
 80012cc:	200000b4 	.word	0x200000b4
 80012d0:	200001c4 	.word	0x200001c4
 80012d4:	60606061 	.word	0x60606061
 80012d8:	200001cc 	.word	0x200001cc
 80012dc:	080064f8 	.word	0x080064f8

080012e0 <adcfunction>:

void adcfunction(){
 80012e0:	b580      	push	{r7, lr}
 80012e2:	af00      	add	r7, sp, #0
	if (adccheck == 0){
 80012e4:	4b0a      	ldr	r3, [pc, #40]	; (8001310 <adcfunction+0x30>)
 80012e6:	681b      	ldr	r3, [r3, #0]
 80012e8:	2b00      	cmp	r3, #0
 80012ea:	d102      	bne.n	80012f2 <adcfunction+0x12>
		adcsecondes();
 80012ec:	f7ff ff2a 	bl	8001144 <adcsecondes>
	}
	else if (adccheck == 1){
		HAL_GPIO_WritePin(L0_GPIO_Port, L0_Pin, GPIO_PIN_SET);
		adcminutes(41);
	}
}
 80012f0:	e00b      	b.n	800130a <adcfunction+0x2a>
	else if (adccheck == 1){
 80012f2:	4b07      	ldr	r3, [pc, #28]	; (8001310 <adcfunction+0x30>)
 80012f4:	681b      	ldr	r3, [r3, #0]
 80012f6:	2b01      	cmp	r3, #1
 80012f8:	d107      	bne.n	800130a <adcfunction+0x2a>
		HAL_GPIO_WritePin(L0_GPIO_Port, L0_Pin, GPIO_PIN_SET);
 80012fa:	2201      	movs	r2, #1
 80012fc:	2102      	movs	r1, #2
 80012fe:	4805      	ldr	r0, [pc, #20]	; (8001314 <adcfunction+0x34>)
 8001300:	f001 fcff 	bl	8002d02 <HAL_GPIO_WritePin>
		adcminutes(41);
 8001304:	2029      	movs	r0, #41	; 0x29
 8001306:	f7ff ff5d 	bl	80011c4 <adcminutes>
}
 800130a:	bf00      	nop
 800130c:	bd80      	pop	{r7, pc}
 800130e:	bf00      	nop
 8001310:	200001f0 	.word	0x200001f0
 8001314:	40020400 	.word	0x40020400

08001318 <adchorloge>:

void adchorloge(){
 8001318:	b580      	push	{r7, lr}
 800131a:	af00      	add	r7, sp, #0
	if (adccheck == 0){
 800131c:	4b0a      	ldr	r3, [pc, #40]	; (8001348 <adchorloge+0x30>)
 800131e:	681b      	ldr	r3, [r3, #0]
 8001320:	2b00      	cmp	r3, #0
 8001322:	d103      	bne.n	800132c <adchorloge+0x14>
		adcminutes(68);
 8001324:	2044      	movs	r0, #68	; 0x44
 8001326:	f7ff ff4d 	bl	80011c4 <adcminutes>
	}
	else if (adccheck == 1){
		HAL_GPIO_WritePin(L0_GPIO_Port, L0_Pin, GPIO_PIN_SET);
		adcheures();
	}
}
 800132a:	e00a      	b.n	8001342 <adchorloge+0x2a>
	else if (adccheck == 1){
 800132c:	4b06      	ldr	r3, [pc, #24]	; (8001348 <adchorloge+0x30>)
 800132e:	681b      	ldr	r3, [r3, #0]
 8001330:	2b01      	cmp	r3, #1
 8001332:	d106      	bne.n	8001342 <adchorloge+0x2a>
		HAL_GPIO_WritePin(L0_GPIO_Port, L0_Pin, GPIO_PIN_SET);
 8001334:	2201      	movs	r2, #1
 8001336:	2102      	movs	r1, #2
 8001338:	4804      	ldr	r0, [pc, #16]	; (800134c <adchorloge+0x34>)
 800133a:	f001 fce2 	bl	8002d02 <HAL_GPIO_WritePin>
		adcheures();
 800133e:	f7ff ff87 	bl	8001250 <adcheures>
}
 8001342:	bf00      	nop
 8001344:	bd80      	pop	{r7, pc}
 8001346:	bf00      	nop
 8001348:	200001f0 	.word	0x200001f0
 800134c:	40020400 	.word	0x40020400

08001350 <decrementunites>:

void decrementunites(){
 8001350:	b580      	push	{r7, lr}
 8001352:	af00      	add	r7, sp, #0
	while (unites > 0){
 8001354:	e010      	b.n	8001378 <decrementunites+0x28>
		unites --;
 8001356:	4b0c      	ldr	r3, [pc, #48]	; (8001388 <decrementunites+0x38>)
 8001358:	681b      	ldr	r3, [r3, #0]
 800135a:	3b01      	subs	r3, #1
 800135c:	4a0a      	ldr	r2, [pc, #40]	; (8001388 <decrementunites+0x38>)
 800135e:	6013      	str	r3, [r2, #0]
		MAX7219_DisplayChar(4, unites + '0', 0);
 8001360:	4b09      	ldr	r3, [pc, #36]	; (8001388 <decrementunites+0x38>)
 8001362:	681b      	ldr	r3, [r3, #0]
 8001364:	3330      	adds	r3, #48	; 0x30
 8001366:	2200      	movs	r2, #0
 8001368:	4619      	mov	r1, r3
 800136a:	2004      	movs	r0, #4
 800136c:	f004 f841 	bl	80053f2 <MAX7219_DisplayChar>
		HAL_Delay(1000);
 8001370:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001374:	f000 fd0a 	bl	8001d8c <HAL_Delay>
	while (unites > 0){
 8001378:	4b03      	ldr	r3, [pc, #12]	; (8001388 <decrementunites+0x38>)
 800137a:	681b      	ldr	r3, [r3, #0]
 800137c:	2b00      	cmp	r3, #0
 800137e:	dcea      	bgt.n	8001356 <decrementunites+0x6>
	}
}
 8001380:	bf00      	nop
 8001382:	bf00      	nop
 8001384:	bd80      	pop	{r7, pc}
 8001386:	bf00      	nop
 8001388:	200001d8 	.word	0x200001d8

0800138c <decrementdizaines>:

void decrementdizaines(){
 800138c:	b580      	push	{r7, lr}
 800138e:	af00      	add	r7, sp, #0
	while (dizaines > 0){
 8001390:	e01f      	b.n	80013d2 <decrementdizaines+0x46>
		decrementunites();
 8001392:	f7ff ffdd 	bl	8001350 <decrementunites>
		dizaines --;
 8001396:	4b12      	ldr	r3, [pc, #72]	; (80013e0 <decrementdizaines+0x54>)
 8001398:	681b      	ldr	r3, [r3, #0]
 800139a:	3b01      	subs	r3, #1
 800139c:	4a10      	ldr	r2, [pc, #64]	; (80013e0 <decrementdizaines+0x54>)
 800139e:	6013      	str	r3, [r2, #0]
		unites = 9;
 80013a0:	4b10      	ldr	r3, [pc, #64]	; (80013e4 <decrementdizaines+0x58>)
 80013a2:	2209      	movs	r2, #9
 80013a4:	601a      	str	r2, [r3, #0]
		MAX7219_DisplayChar(3, dizaines + '0', 0);
 80013a6:	4b0e      	ldr	r3, [pc, #56]	; (80013e0 <decrementdizaines+0x54>)
 80013a8:	681b      	ldr	r3, [r3, #0]
 80013aa:	3330      	adds	r3, #48	; 0x30
 80013ac:	2200      	movs	r2, #0
 80013ae:	4619      	mov	r1, r3
 80013b0:	2003      	movs	r0, #3
 80013b2:	f004 f81e 	bl	80053f2 <MAX7219_DisplayChar>
		MAX7219_DisplayChar(4, unites + '0', 0);
 80013b6:	4b0b      	ldr	r3, [pc, #44]	; (80013e4 <decrementdizaines+0x58>)
 80013b8:	681b      	ldr	r3, [r3, #0]
 80013ba:	3330      	adds	r3, #48	; 0x30
 80013bc:	2200      	movs	r2, #0
 80013be:	4619      	mov	r1, r3
 80013c0:	2004      	movs	r0, #4
 80013c2:	f004 f816 	bl	80053f2 <MAX7219_DisplayChar>
		HAL_Delay(1000);
 80013c6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013ca:	f000 fcdf 	bl	8001d8c <HAL_Delay>
		decrementunites();
 80013ce:	f7ff ffbf 	bl	8001350 <decrementunites>
	while (dizaines > 0){
 80013d2:	4b03      	ldr	r3, [pc, #12]	; (80013e0 <decrementdizaines+0x54>)
 80013d4:	681b      	ldr	r3, [r3, #0]
 80013d6:	2b00      	cmp	r3, #0
 80013d8:	dcdb      	bgt.n	8001392 <decrementdizaines+0x6>
	}
}
 80013da:	bf00      	nop
 80013dc:	bf00      	nop
 80013de:	bd80      	pop	{r7, pc}
 80013e0:	200001d4 	.word	0x200001d4
 80013e4:	200001d8 	.word	0x200001d8

080013e8 <decrementminutes>:

void decrementminutes(){
 80013e8:	b580      	push	{r7, lr}
 80013ea:	af00      	add	r7, sp, #0
	while(minutes > 0){
 80013ec:	e01f      	b.n	800142e <decrementminutes+0x46>
		decrementunites();
 80013ee:	f7ff ffaf 	bl	8001350 <decrementunites>
		decrementdizaines();
 80013f2:	f7ff ffcb 	bl	800138c <decrementdizaines>
		minutes --;
 80013f6:	4b11      	ldr	r3, [pc, #68]	; (800143c <decrementminutes+0x54>)
 80013f8:	681b      	ldr	r3, [r3, #0]
 80013fa:	3b01      	subs	r3, #1
 80013fc:	4a0f      	ldr	r2, [pc, #60]	; (800143c <decrementminutes+0x54>)
 80013fe:	6013      	str	r3, [r2, #0]
		dizaines = 6;
 8001400:	4b0f      	ldr	r3, [pc, #60]	; (8001440 <decrementminutes+0x58>)
 8001402:	2206      	movs	r2, #6
 8001404:	601a      	str	r2, [r3, #0]
		MAX7219_DisplayChar(2, minutes + '0', 1);
 8001406:	4b0d      	ldr	r3, [pc, #52]	; (800143c <decrementminutes+0x54>)
 8001408:	681b      	ldr	r3, [r3, #0]
 800140a:	3330      	adds	r3, #48	; 0x30
 800140c:	2201      	movs	r2, #1
 800140e:	4619      	mov	r1, r3
 8001410:	2002      	movs	r0, #2
 8001412:	f003 ffee 	bl	80053f2 <MAX7219_DisplayChar>
		MAX7219_DisplayChar(3, dizaines + '0', 0);
 8001416:	4b0a      	ldr	r3, [pc, #40]	; (8001440 <decrementminutes+0x58>)
 8001418:	681b      	ldr	r3, [r3, #0]
 800141a:	3330      	adds	r3, #48	; 0x30
 800141c:	2200      	movs	r2, #0
 800141e:	4619      	mov	r1, r3
 8001420:	2003      	movs	r0, #3
 8001422:	f003 ffe6 	bl	80053f2 <MAX7219_DisplayChar>
		decrementunites();
 8001426:	f7ff ff93 	bl	8001350 <decrementunites>
		decrementdizaines();
 800142a:	f7ff ffaf 	bl	800138c <decrementdizaines>
	while(minutes > 0){
 800142e:	4b03      	ldr	r3, [pc, #12]	; (800143c <decrementminutes+0x54>)
 8001430:	681b      	ldr	r3, [r3, #0]
 8001432:	2b00      	cmp	r3, #0
 8001434:	dcdb      	bgt.n	80013ee <decrementminutes+0x6>
	}
}
 8001436:	bf00      	nop
 8001438:	bf00      	nop
 800143a:	bd80      	pop	{r7, pc}
 800143c:	200001e0 	.word	0x200001e0
 8001440:	200001d4 	.word	0x200001d4

08001444 <decrementdizainesminutes>:

void decrementdizainesminutes(){
 8001444:	b580      	push	{r7, lr}
 8001446:	af00      	add	r7, sp, #0
	while(dizainesminutes > 0){
 8001448:	e023      	b.n	8001492 <decrementdizainesminutes+0x4e>
		decrementunites();
 800144a:	f7ff ff81 	bl	8001350 <decrementunites>
		decrementdizaines();
 800144e:	f7ff ff9d 	bl	800138c <decrementdizaines>
		decrementminutes();
 8001452:	f7ff ffc9 	bl	80013e8 <decrementminutes>
		dizainesminutes --;
 8001456:	4b12      	ldr	r3, [pc, #72]	; (80014a0 <decrementdizainesminutes+0x5c>)
 8001458:	681b      	ldr	r3, [r3, #0]
 800145a:	3b01      	subs	r3, #1
 800145c:	4a10      	ldr	r2, [pc, #64]	; (80014a0 <decrementdizainesminutes+0x5c>)
 800145e:	6013      	str	r3, [r2, #0]
		minutes = 10;
 8001460:	4b10      	ldr	r3, [pc, #64]	; (80014a4 <decrementdizainesminutes+0x60>)
 8001462:	220a      	movs	r2, #10
 8001464:	601a      	str	r2, [r3, #0]
		MAX7219_DisplayChar(1, dizainesminutes + '0', 0);
 8001466:	4b0e      	ldr	r3, [pc, #56]	; (80014a0 <decrementdizainesminutes+0x5c>)
 8001468:	681b      	ldr	r3, [r3, #0]
 800146a:	3330      	adds	r3, #48	; 0x30
 800146c:	2200      	movs	r2, #0
 800146e:	4619      	mov	r1, r3
 8001470:	2001      	movs	r0, #1
 8001472:	f003 ffbe 	bl	80053f2 <MAX7219_DisplayChar>
		MAX7219_DisplayChar(2, minutes + '0', 1);
 8001476:	4b0b      	ldr	r3, [pc, #44]	; (80014a4 <decrementdizainesminutes+0x60>)
 8001478:	681b      	ldr	r3, [r3, #0]
 800147a:	3330      	adds	r3, #48	; 0x30
 800147c:	2201      	movs	r2, #1
 800147e:	4619      	mov	r1, r3
 8001480:	2002      	movs	r0, #2
 8001482:	f003 ffb6 	bl	80053f2 <MAX7219_DisplayChar>
		decrementunites();
 8001486:	f7ff ff63 	bl	8001350 <decrementunites>
		decrementdizaines();
 800148a:	f7ff ff7f 	bl	800138c <decrementdizaines>
		decrementminutes();
 800148e:	f7ff ffab 	bl	80013e8 <decrementminutes>
	while(dizainesminutes > 0){
 8001492:	4b03      	ldr	r3, [pc, #12]	; (80014a0 <decrementdizainesminutes+0x5c>)
 8001494:	681b      	ldr	r3, [r3, #0]
 8001496:	2b00      	cmp	r3, #0
 8001498:	dcd7      	bgt.n	800144a <decrementdizainesminutes+0x6>
	}
}
 800149a:	bf00      	nop
 800149c:	bf00      	nop
 800149e:	bd80      	pop	{r7, pc}
 80014a0:	200001dc 	.word	0x200001dc
 80014a4:	200001e0 	.word	0x200001e0

080014a8 <BUZZ>:

void BUZZ(int i){
 80014a8:	b580      	push	{r7, lr}
 80014aa:	b084      	sub	sp, #16
 80014ac:	af00      	add	r7, sp, #0
 80014ae:	6078      	str	r0, [r7, #4]
	HAL_TIM_Base_Start(&htim3);
 80014b0:	480e      	ldr	r0, [pc, #56]	; (80014ec <BUZZ+0x44>)
 80014b2:	f003 f8c3 	bl	800463c <HAL_TIM_Base_Start>
	for (int j=0; j<i;j++){
 80014b6:	2300      	movs	r3, #0
 80014b8:	60fb      	str	r3, [r7, #12]
 80014ba:	e00e      	b.n	80014da <BUZZ+0x32>
		HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_2);
 80014bc:	2104      	movs	r1, #4
 80014be:	480b      	ldr	r0, [pc, #44]	; (80014ec <BUZZ+0x44>)
 80014c0:	f003 f94e 	bl	8004760 <HAL_TIM_PWM_Start>
		HAL_Delay(2000);
 80014c4:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 80014c8:	f000 fc60 	bl	8001d8c <HAL_Delay>
		HAL_TIM_PWM_Stop(&htim3,TIM_CHANNEL_2);
 80014cc:	2104      	movs	r1, #4
 80014ce:	4807      	ldr	r0, [pc, #28]	; (80014ec <BUZZ+0x44>)
 80014d0:	f003 f9dc 	bl	800488c <HAL_TIM_PWM_Stop>
	for (int j=0; j<i;j++){
 80014d4:	68fb      	ldr	r3, [r7, #12]
 80014d6:	3301      	adds	r3, #1
 80014d8:	60fb      	str	r3, [r7, #12]
 80014da:	68fa      	ldr	r2, [r7, #12]
 80014dc:	687b      	ldr	r3, [r7, #4]
 80014de:	429a      	cmp	r2, r3
 80014e0:	dbec      	blt.n	80014bc <BUZZ+0x14>
	}
}
 80014e2:	bf00      	nop
 80014e4:	bf00      	nop
 80014e6:	3710      	adds	r7, #16
 80014e8:	46bd      	mov	sp, r7
 80014ea:	bd80      	pop	{r7, pc}
 80014ec:	20000180 	.word	0x20000180

080014f0 <MOT>:

void MOT(){
 80014f0:	b580      	push	{r7, lr}
 80014f2:	af00      	add	r7, sp, #0
	HAL_TIM_Base_Start(&htim3);
 80014f4:	4819      	ldr	r0, [pc, #100]	; (800155c <MOT+0x6c>)
 80014f6:	f003 f8a1 	bl	800463c <HAL_TIM_Base_Start>
	HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_1);
 80014fa:	2100      	movs	r1, #0
 80014fc:	4817      	ldr	r0, [pc, #92]	; (800155c <MOT+0x6c>)
 80014fe:	f003 f92f 	bl	8004760 <HAL_TIM_PWM_Start>
	while (moteur == 0){
 8001502:	e021      	b.n	8001548 <MOT+0x58>
		if (htim3.Instance->CCR1 < 250){
 8001504:	4b15      	ldr	r3, [pc, #84]	; (800155c <MOT+0x6c>)
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800150a:	2bf9      	cmp	r3, #249	; 0xf9
 800150c:	d80a      	bhi.n	8001524 <MOT+0x34>
			htim3.Instance->CCR1 += 50;
 800150e:	4b13      	ldr	r3, [pc, #76]	; (800155c <MOT+0x6c>)
 8001510:	681b      	ldr	r3, [r3, #0]
 8001512:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001514:	4b11      	ldr	r3, [pc, #68]	; (800155c <MOT+0x6c>)
 8001516:	681b      	ldr	r3, [r3, #0]
 8001518:	3232      	adds	r2, #50	; 0x32
 800151a:	635a      	str	r2, [r3, #52]	; 0x34
			HAL_Delay(200);
 800151c:	20c8      	movs	r0, #200	; 0xc8
 800151e:	f000 fc35 	bl	8001d8c <HAL_Delay>
 8001522:	e006      	b.n	8001532 <MOT+0x42>
		}
		else{
			htim3.Instance->CCR1 = 0;
 8001524:	4b0d      	ldr	r3, [pc, #52]	; (800155c <MOT+0x6c>)
 8001526:	681b      	ldr	r3, [r3, #0]
 8001528:	2200      	movs	r2, #0
 800152a:	635a      	str	r2, [r3, #52]	; 0x34
			HAL_Delay(100);
 800152c:	2064      	movs	r0, #100	; 0x64
 800152e:	f000 fc2d 	bl	8001d8c <HAL_Delay>
		}
		if (HAL_GPIO_ReadPin(BTN2_GPIO_Port, BTN2_Pin) == GPIO_PIN_RESET){
 8001532:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001536:	480a      	ldr	r0, [pc, #40]	; (8001560 <MOT+0x70>)
 8001538:	f001 fbcc 	bl	8002cd4 <HAL_GPIO_ReadPin>
 800153c:	4603      	mov	r3, r0
 800153e:	2b00      	cmp	r3, #0
 8001540:	d102      	bne.n	8001548 <MOT+0x58>
			moteur = 1;
 8001542:	4b08      	ldr	r3, [pc, #32]	; (8001564 <MOT+0x74>)
 8001544:	2201      	movs	r2, #1
 8001546:	601a      	str	r2, [r3, #0]
	while (moteur == 0){
 8001548:	4b06      	ldr	r3, [pc, #24]	; (8001564 <MOT+0x74>)
 800154a:	681b      	ldr	r3, [r3, #0]
 800154c:	2b00      	cmp	r3, #0
 800154e:	d0d9      	beq.n	8001504 <MOT+0x14>
		}
	}
	HAL_TIM_PWM_Stop(&htim3,TIM_CHANNEL_1);
 8001550:	2100      	movs	r1, #0
 8001552:	4802      	ldr	r0, [pc, #8]	; (800155c <MOT+0x6c>)
 8001554:	f003 f99a 	bl	800488c <HAL_TIM_PWM_Stop>
}
 8001558:	bf00      	nop
 800155a:	bd80      	pop	{r7, pc}
 800155c:	20000180 	.word	0x20000180
 8001560:	40020000 	.word	0x40020000
 8001564:	200001f8 	.word	0x200001f8

08001568 <minuteur>:

void minuteur(){
 8001568:	b580      	push	{r7, lr}
 800156a:	af00      	add	r7, sp, #0
	while ((dizainesminutes != 0) || (minutes != 0) || (dizaines != 0) || (unites !=0 )){
 800156c:	e01c      	b.n	80015a8 <minuteur+0x40>
		HAL_GPIO_WritePin(L1_GPIO_Port, L1_Pin, GPIO_PIN_SET);
 800156e:	2201      	movs	r2, #1
 8001570:	2104      	movs	r1, #4
 8001572:	4827      	ldr	r0, [pc, #156]	; (8001610 <minuteur+0xa8>)
 8001574:	f001 fbc5 	bl	8002d02 <HAL_GPIO_WritePin>
		if (dizainesminutes != 0) {decrementdizainesminutes();}
 8001578:	4b26      	ldr	r3, [pc, #152]	; (8001614 <minuteur+0xac>)
 800157a:	681b      	ldr	r3, [r3, #0]
 800157c:	2b00      	cmp	r3, #0
 800157e:	d001      	beq.n	8001584 <minuteur+0x1c>
 8001580:	f7ff ff60 	bl	8001444 <decrementdizainesminutes>
		if (minutes !=0) {decrementminutes();}
 8001584:	4b24      	ldr	r3, [pc, #144]	; (8001618 <minuteur+0xb0>)
 8001586:	681b      	ldr	r3, [r3, #0]
 8001588:	2b00      	cmp	r3, #0
 800158a:	d001      	beq.n	8001590 <minuteur+0x28>
 800158c:	f7ff ff2c 	bl	80013e8 <decrementminutes>
		if (dizaines !=0) {decrementdizaines();}
 8001590:	4b22      	ldr	r3, [pc, #136]	; (800161c <minuteur+0xb4>)
 8001592:	681b      	ldr	r3, [r3, #0]
 8001594:	2b00      	cmp	r3, #0
 8001596:	d001      	beq.n	800159c <minuteur+0x34>
 8001598:	f7ff fef8 	bl	800138c <decrementdizaines>
		if (unites !=0) {decrementunites();}
 800159c:	4b20      	ldr	r3, [pc, #128]	; (8001620 <minuteur+0xb8>)
 800159e:	681b      	ldr	r3, [r3, #0]
 80015a0:	2b00      	cmp	r3, #0
 80015a2:	d001      	beq.n	80015a8 <minuteur+0x40>
 80015a4:	f7ff fed4 	bl	8001350 <decrementunites>
	while ((dizainesminutes != 0) || (minutes != 0) || (dizaines != 0) || (unites !=0 )){
 80015a8:	4b1a      	ldr	r3, [pc, #104]	; (8001614 <minuteur+0xac>)
 80015aa:	681b      	ldr	r3, [r3, #0]
 80015ac:	2b00      	cmp	r3, #0
 80015ae:	d1de      	bne.n	800156e <minuteur+0x6>
 80015b0:	4b19      	ldr	r3, [pc, #100]	; (8001618 <minuteur+0xb0>)
 80015b2:	681b      	ldr	r3, [r3, #0]
 80015b4:	2b00      	cmp	r3, #0
 80015b6:	d1da      	bne.n	800156e <minuteur+0x6>
 80015b8:	4b18      	ldr	r3, [pc, #96]	; (800161c <minuteur+0xb4>)
 80015ba:	681b      	ldr	r3, [r3, #0]
 80015bc:	2b00      	cmp	r3, #0
 80015be:	d1d6      	bne.n	800156e <minuteur+0x6>
 80015c0:	4b17      	ldr	r3, [pc, #92]	; (8001620 <minuteur+0xb8>)
 80015c2:	681b      	ldr	r3, [r3, #0]
 80015c4:	2b00      	cmp	r3, #0
 80015c6:	d1d2      	bne.n	800156e <minuteur+0x6>
	}
	BUZZ(5);
 80015c8:	2005      	movs	r0, #5
 80015ca:	f7ff ff6d 	bl	80014a8 <BUZZ>

	unites = 0;
 80015ce:	4b14      	ldr	r3, [pc, #80]	; (8001620 <minuteur+0xb8>)
 80015d0:	2200      	movs	r2, #0
 80015d2:	601a      	str	r2, [r3, #0]
	dizaines = 0;
 80015d4:	4b11      	ldr	r3, [pc, #68]	; (800161c <minuteur+0xb4>)
 80015d6:	2200      	movs	r2, #0
 80015d8:	601a      	str	r2, [r3, #0]
	minutes = 0;
 80015da:	4b0f      	ldr	r3, [pc, #60]	; (8001618 <minuteur+0xb0>)
 80015dc:	2200      	movs	r2, #0
 80015de:	601a      	str	r2, [r3, #0]
	dizainesminutes = 0;
 80015e0:	4b0c      	ldr	r3, [pc, #48]	; (8001614 <minuteur+0xac>)
 80015e2:	2200      	movs	r2, #0
 80015e4:	601a      	str	r2, [r3, #0]

	HAL_GPIO_WritePin(L0_GPIO_Port, L0_Pin, GPIO_PIN_RESET);
 80015e6:	2200      	movs	r2, #0
 80015e8:	2102      	movs	r1, #2
 80015ea:	4809      	ldr	r0, [pc, #36]	; (8001610 <minuteur+0xa8>)
 80015ec:	f001 fb89 	bl	8002d02 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(L1_GPIO_Port, L1_Pin, GPIO_PIN_RESET);
 80015f0:	2200      	movs	r2, #0
 80015f2:	2104      	movs	r1, #4
 80015f4:	4806      	ldr	r0, [pc, #24]	; (8001610 <minuteur+0xa8>)
 80015f6:	f001 fb84 	bl	8002d02 <HAL_GPIO_WritePin>

	adccheck = 0;
 80015fa:	4b0a      	ldr	r3, [pc, #40]	; (8001624 <minuteur+0xbc>)
 80015fc:	2200      	movs	r2, #0
 80015fe:	601a      	str	r2, [r3, #0]
	valide = 0;
 8001600:	4b09      	ldr	r3, [pc, #36]	; (8001628 <minuteur+0xc0>)
 8001602:	2200      	movs	r2, #0
 8001604:	601a      	str	r2, [r3, #0]
	affiche_num();
 8001606:	f7ff fa21 	bl	8000a4c <affiche_num>
}
 800160a:	bf00      	nop
 800160c:	bd80      	pop	{r7, pc}
 800160e:	bf00      	nop
 8001610:	40020400 	.word	0x40020400
 8001614:	200001dc 	.word	0x200001dc
 8001618:	200001e0 	.word	0x200001e0
 800161c:	200001d4 	.word	0x200001d4
 8001620:	200001d8 	.word	0x200001d8
 8001624:	200001f0 	.word	0x200001f0
 8001628:	200001ec 	.word	0x200001ec

0800162c <horloge>:


void horloge(){
 800162c:	b580      	push	{r7, lr}
 800162e:	b086      	sub	sp, #24
 8001630:	af00      	add	r7, sp, #0
	RTC_TimeTypeDef sTime;
	RTC_DateTypeDef sDate;

	HAL_RTC_GetDate(&hrtc, &sDate, RTC_FORMAT_BIN);
 8001632:	463b      	mov	r3, r7
 8001634:	2200      	movs	r2, #0
 8001636:	4619      	mov	r1, r3
 8001638:	4829      	ldr	r0, [pc, #164]	; (80016e0 <horloge+0xb4>)
 800163a:	f002 fc1e 	bl	8003e7a <HAL_RTC_GetDate>
	HAL_RTC_GetTime(&hrtc, &sTime, RTC_FORMAT_BIN);
 800163e:	1d3b      	adds	r3, r7, #4
 8001640:	2200      	movs	r2, #0
 8001642:	4619      	mov	r1, r3
 8001644:	4826      	ldr	r0, [pc, #152]	; (80016e0 <horloge+0xb4>)
 8001646:	f002 fb36 	bl	8003cb6 <HAL_RTC_GetTime>

	MAX7219_Clear();
 800164a:	f003 febc 	bl	80053c6 <MAX7219_Clear>
	MAX7219_Init();
 800164e:	f003 fe83 	bl	8005358 <MAX7219_Init>
	MAX7219_DisplayChar(1, sTime.Hours / 10 + '0', 0);
 8001652:	793b      	ldrb	r3, [r7, #4]
 8001654:	4a23      	ldr	r2, [pc, #140]	; (80016e4 <horloge+0xb8>)
 8001656:	fba2 2303 	umull	r2, r3, r2, r3
 800165a:	08db      	lsrs	r3, r3, #3
 800165c:	b2db      	uxtb	r3, r3
 800165e:	3330      	adds	r3, #48	; 0x30
 8001660:	2200      	movs	r2, #0
 8001662:	4619      	mov	r1, r3
 8001664:	2001      	movs	r0, #1
 8001666:	f003 fec4 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(2, sTime.Hours % 10 + '0', 1);
 800166a:	793a      	ldrb	r2, [r7, #4]
 800166c:	4b1d      	ldr	r3, [pc, #116]	; (80016e4 <horloge+0xb8>)
 800166e:	fba3 1302 	umull	r1, r3, r3, r2
 8001672:	08d9      	lsrs	r1, r3, #3
 8001674:	460b      	mov	r3, r1
 8001676:	009b      	lsls	r3, r3, #2
 8001678:	440b      	add	r3, r1
 800167a:	005b      	lsls	r3, r3, #1
 800167c:	1ad3      	subs	r3, r2, r3
 800167e:	b2db      	uxtb	r3, r3
 8001680:	3330      	adds	r3, #48	; 0x30
 8001682:	2201      	movs	r2, #1
 8001684:	4619      	mov	r1, r3
 8001686:	2002      	movs	r0, #2
 8001688:	f003 feb3 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(3, sTime.Minutes / 10 + '0', 0);
 800168c:	797b      	ldrb	r3, [r7, #5]
 800168e:	4a15      	ldr	r2, [pc, #84]	; (80016e4 <horloge+0xb8>)
 8001690:	fba2 2303 	umull	r2, r3, r2, r3
 8001694:	08db      	lsrs	r3, r3, #3
 8001696:	b2db      	uxtb	r3, r3
 8001698:	3330      	adds	r3, #48	; 0x30
 800169a:	2200      	movs	r2, #0
 800169c:	4619      	mov	r1, r3
 800169e:	2003      	movs	r0, #3
 80016a0:	f003 fea7 	bl	80053f2 <MAX7219_DisplayChar>
	MAX7219_DisplayChar(4, sTime.Minutes % 10 + '0', 0);
 80016a4:	797a      	ldrb	r2, [r7, #5]
 80016a6:	4b0f      	ldr	r3, [pc, #60]	; (80016e4 <horloge+0xb8>)
 80016a8:	fba3 1302 	umull	r1, r3, r3, r2
 80016ac:	08d9      	lsrs	r1, r3, #3
 80016ae:	460b      	mov	r3, r1
 80016b0:	009b      	lsls	r3, r3, #2
 80016b2:	440b      	add	r3, r1
 80016b4:	005b      	lsls	r3, r3, #1
 80016b6:	1ad3      	subs	r3, r2, r3
 80016b8:	b2db      	uxtb	r3, r3
 80016ba:	3330      	adds	r3, #48	; 0x30
 80016bc:	2200      	movs	r2, #0
 80016be:	4619      	mov	r1, r3
 80016c0:	2004      	movs	r0, #4
 80016c2:	f003 fe96 	bl	80053f2 <MAX7219_DisplayChar>
	printf("%02d:%02d:%02d\r\n", sTime.Hours, sTime.Minutes, sTime.Seconds);
 80016c6:	793b      	ldrb	r3, [r7, #4]
 80016c8:	4619      	mov	r1, r3
 80016ca:	797b      	ldrb	r3, [r7, #5]
 80016cc:	461a      	mov	r2, r3
 80016ce:	79bb      	ldrb	r3, [r7, #6]
 80016d0:	4805      	ldr	r0, [pc, #20]	; (80016e8 <horloge+0xbc>)
 80016d2:	f003 ffcb 	bl	800566c <iprintf>

}
 80016d6:	bf00      	nop
 80016d8:	3718      	adds	r7, #24
 80016da:	46bd      	mov	sp, r7
 80016dc:	bd80      	pop	{r7, pc}
 80016de:	bf00      	nop
 80016e0:	20000108 	.word	0x20000108
 80016e4:	cccccccd 	.word	0xcccccccd
 80016e8:	08006508 	.word	0x08006508

080016ec <checkhorloge>:

void inithorloge(){
	horloge();
}

void checkhorloge(){
 80016ec:	b580      	push	{r7, lr}
 80016ee:	b086      	sub	sp, #24
 80016f0:	af00      	add	r7, sp, #0
	RTC_TimeTypeDef sTime;
	RTC_DateTypeDef sDate;
	HAL_RTC_GetDate(&hrtc, &sDate, RTC_FORMAT_BIN);
 80016f2:	463b      	mov	r3, r7
 80016f4:	2200      	movs	r2, #0
 80016f6:	4619      	mov	r1, r3
 80016f8:	482e      	ldr	r0, [pc, #184]	; (80017b4 <checkhorloge+0xc8>)
 80016fa:	f002 fbbe 	bl	8003e7a <HAL_RTC_GetDate>
	HAL_RTC_GetTime(&hrtc, &sTime, RTC_FORMAT_BIN);
 80016fe:	1d3b      	adds	r3, r7, #4
 8001700:	2200      	movs	r2, #0
 8001702:	4619      	mov	r1, r3
 8001704:	482b      	ldr	r0, [pc, #172]	; (80017b4 <checkhorloge+0xc8>)
 8001706:	f002 fad6 	bl	8003cb6 <HAL_RTC_GetTime>

	if (((valeur >= sTime.Hours) &&(valeurMin >= sTime.Minutes)) || (valeur >= sTime.Hours)){
 800170a:	793b      	ldrb	r3, [r7, #4]
 800170c:	461a      	mov	r2, r3
 800170e:	4b2a      	ldr	r3, [pc, #168]	; (80017b8 <checkhorloge+0xcc>)
 8001710:	681b      	ldr	r3, [r3, #0]
 8001712:	429a      	cmp	r2, r3
 8001714:	dc05      	bgt.n	8001722 <checkhorloge+0x36>
 8001716:	797b      	ldrb	r3, [r7, #5]
 8001718:	461a      	mov	r2, r3
 800171a:	4b28      	ldr	r3, [pc, #160]	; (80017bc <checkhorloge+0xd0>)
 800171c:	681b      	ldr	r3, [r3, #0]
 800171e:	429a      	cmp	r2, r3
 8001720:	dd05      	ble.n	800172e <checkhorloge+0x42>
 8001722:	793b      	ldrb	r3, [r7, #4]
 8001724:	461a      	mov	r2, r3
 8001726:	4b24      	ldr	r3, [pc, #144]	; (80017b8 <checkhorloge+0xcc>)
 8001728:	681b      	ldr	r3, [r3, #0]
 800172a:	429a      	cmp	r2, r3
 800172c:	dc1a      	bgt.n	8001764 <checkhorloge+0x78>
		printf("Temps actuel : %d Heures, %d Minutes\n",sTime.Hours, sTime.Minutes);
 800172e:	793b      	ldrb	r3, [r7, #4]
 8001730:	4619      	mov	r1, r3
 8001732:	797b      	ldrb	r3, [r7, #5]
 8001734:	461a      	mov	r2, r3
 8001736:	4822      	ldr	r0, [pc, #136]	; (80017c0 <checkhorloge+0xd4>)
 8001738:	f003 ff98 	bl	800566c <iprintf>
		printf("Heure de l'alarme : %d Heures, %d Minutes\n",valeur, valeurMin);
 800173c:	4b1e      	ldr	r3, [pc, #120]	; (80017b8 <checkhorloge+0xcc>)
 800173e:	681b      	ldr	r3, [r3, #0]
 8001740:	4a1e      	ldr	r2, [pc, #120]	; (80017bc <checkhorloge+0xd0>)
 8001742:	6812      	ldr	r2, [r2, #0]
 8001744:	4619      	mov	r1, r3
 8001746:	481f      	ldr	r0, [pc, #124]	; (80017c4 <checkhorloge+0xd8>)
 8001748:	f003 ff90 	bl	800566c <iprintf>
		HAL_RTC_GetDate(&hrtc, &sDate, RTC_FORMAT_BIN);
 800174c:	463b      	mov	r3, r7
 800174e:	2200      	movs	r2, #0
 8001750:	4619      	mov	r1, r3
 8001752:	4818      	ldr	r0, [pc, #96]	; (80017b4 <checkhorloge+0xc8>)
 8001754:	f002 fb91 	bl	8003e7a <HAL_RTC_GetDate>
		HAL_RTC_GetTime(&hrtc, &sTime, RTC_FORMAT_BIN);
 8001758:	1d3b      	adds	r3, r7, #4
 800175a:	2200      	movs	r2, #0
 800175c:	4619      	mov	r1, r3
 800175e:	4815      	ldr	r0, [pc, #84]	; (80017b4 <checkhorloge+0xc8>)
 8001760:	f002 faa9 	bl	8003cb6 <HAL_RTC_GetTime>
	}

	if ((valeurMin <= sTime.Minutes) && (valeur <= sTime.Hours)){
 8001764:	797b      	ldrb	r3, [r7, #5]
 8001766:	461a      	mov	r2, r3
 8001768:	4b14      	ldr	r3, [pc, #80]	; (80017bc <checkhorloge+0xd0>)
 800176a:	681b      	ldr	r3, [r3, #0]
 800176c:	429a      	cmp	r2, r3
 800176e:	db1d      	blt.n	80017ac <checkhorloge+0xc0>
 8001770:	793b      	ldrb	r3, [r7, #4]
 8001772:	461a      	mov	r2, r3
 8001774:	4b10      	ldr	r3, [pc, #64]	; (80017b8 <checkhorloge+0xcc>)
 8001776:	681b      	ldr	r3, [r3, #0]
 8001778:	429a      	cmp	r2, r3
 800177a:	db17      	blt.n	80017ac <checkhorloge+0xc0>

		printf("ALARME\n");
 800177c:	4812      	ldr	r0, [pc, #72]	; (80017c8 <checkhorloge+0xdc>)
 800177e:	f003 ffdb 	bl	8005738 <puts>
		MOT();
 8001782:	f7ff feb5 	bl	80014f0 <MOT>
		horlogevar = 0;
 8001786:	4b11      	ldr	r3, [pc, #68]	; (80017cc <checkhorloge+0xe0>)
 8001788:	2200      	movs	r2, #0
 800178a:	601a      	str	r2, [r3, #0]
		valide = 0;
 800178c:	4b10      	ldr	r3, [pc, #64]	; (80017d0 <checkhorloge+0xe4>)
 800178e:	2200      	movs	r2, #0
 8001790:	601a      	str	r2, [r3, #0]
		adccheck = 0;
 8001792:	4b10      	ldr	r3, [pc, #64]	; (80017d4 <checkhorloge+0xe8>)
 8001794:	2200      	movs	r2, #0
 8001796:	601a      	str	r2, [r3, #0]
		moteur = 0;
 8001798:	4b0f      	ldr	r3, [pc, #60]	; (80017d8 <checkhorloge+0xec>)
 800179a:	2200      	movs	r2, #0
 800179c:	601a      	str	r2, [r3, #0]
		affiche_clear();
 800179e:	f7ff fa25 	bl	8000bec <affiche_clear>
		HAL_GPIO_WritePin(L0_GPIO_Port, L0_Pin, GPIO_PIN_RESET);
 80017a2:	2200      	movs	r2, #0
 80017a4:	2102      	movs	r1, #2
 80017a6:	480d      	ldr	r0, [pc, #52]	; (80017dc <checkhorloge+0xf0>)
 80017a8:	f001 faab 	bl	8002d02 <HAL_GPIO_WritePin>
	}
}
 80017ac:	bf00      	nop
 80017ae:	3718      	adds	r7, #24
 80017b0:	46bd      	mov	sp, r7
 80017b2:	bd80      	pop	{r7, pc}
 80017b4:	20000108 	.word	0x20000108
 80017b8:	200001cc 	.word	0x200001cc
 80017bc:	200001d0 	.word	0x200001d0
 80017c0:	0800651c 	.word	0x0800651c
 80017c4:	08006544 	.word	0x08006544
 80017c8:	08006570 	.word	0x08006570
 80017cc:	200001f4 	.word	0x200001f4
 80017d0:	200001ec 	.word	0x200001ec
 80017d4:	200001f0 	.word	0x200001f0
 80017d8:	200001f8 	.word	0x200001f8
 80017dc:	40020400 	.word	0x40020400

080017e0 <HAL_GPIO_EXTI_Callback>:


void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 80017e0:	b580      	push	{r7, lr}
 80017e2:	b082      	sub	sp, #8
 80017e4:	af00      	add	r7, sp, #0
 80017e6:	4603      	mov	r3, r0
 80017e8:	80fb      	strh	r3, [r7, #6]

	switch (GPIO_Pin){
 80017ea:	88fb      	ldrh	r3, [r7, #6]
 80017ec:	2b20      	cmp	r3, #32
 80017ee:	d01e      	beq.n	800182e <HAL_GPIO_EXTI_Callback+0x4e>
 80017f0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80017f4:	d11e      	bne.n	8001834 <HAL_GPIO_EXTI_Callback+0x54>
	case BTNCarte_Pin :
		if (mode < 4){
 80017f6:	4b12      	ldr	r3, [pc, #72]	; (8001840 <HAL_GPIO_EXTI_Callback+0x60>)
 80017f8:	681b      	ldr	r3, [r3, #0]
 80017fa:	2b03      	cmp	r3, #3
 80017fc:	dc0b      	bgt.n	8001816 <HAL_GPIO_EXTI_Callback+0x36>
			mode ++;
 80017fe:	4b10      	ldr	r3, [pc, #64]	; (8001840 <HAL_GPIO_EXTI_Callback+0x60>)
 8001800:	681b      	ldr	r3, [r3, #0]
 8001802:	3301      	adds	r3, #1
 8001804:	4a0e      	ldr	r2, [pc, #56]	; (8001840 <HAL_GPIO_EXTI_Callback+0x60>)
 8001806:	6013      	str	r3, [r2, #0]
			printf("Mode : %d\n", mode);
 8001808:	4b0d      	ldr	r3, [pc, #52]	; (8001840 <HAL_GPIO_EXTI_Callback+0x60>)
 800180a:	681b      	ldr	r3, [r3, #0]
 800180c:	4619      	mov	r1, r3
 800180e:	480d      	ldr	r0, [pc, #52]	; (8001844 <HAL_GPIO_EXTI_Callback+0x64>)
 8001810:	f003 ff2c 	bl	800566c <iprintf>
 8001814:	e008      	b.n	8001828 <HAL_GPIO_EXTI_Callback+0x48>
		}
		else{
			mode = 1;
 8001816:	4b0a      	ldr	r3, [pc, #40]	; (8001840 <HAL_GPIO_EXTI_Callback+0x60>)
 8001818:	2201      	movs	r2, #1
 800181a:	601a      	str	r2, [r3, #0]
			printf("Mode : %d\n", mode);
 800181c:	4b08      	ldr	r3, [pc, #32]	; (8001840 <HAL_GPIO_EXTI_Callback+0x60>)
 800181e:	681b      	ldr	r3, [r3, #0]
 8001820:	4619      	mov	r1, r3
 8001822:	4808      	ldr	r0, [pc, #32]	; (8001844 <HAL_GPIO_EXTI_Callback+0x64>)
 8001824:	f003 ff22 	bl	800566c <iprintf>
		}
		affichemod();
 8001828:	f7ff f8f6 	bl	8000a18 <affichemod>
		break;
 800182c:	e003      	b.n	8001836 <HAL_GPIO_EXTI_Callback+0x56>

	case BTN4_Pin:
		reveil();
 800182e:	f7ff fae1 	bl	8000df4 <reveil>
		break;
 8001832:	e000      	b.n	8001836 <HAL_GPIO_EXTI_Callback+0x56>
	default :
		break;
 8001834:	bf00      	nop
	}
}
 8001836:	bf00      	nop
 8001838:	3708      	adds	r7, #8
 800183a:	46bd      	mov	sp, r7
 800183c:	bd80      	pop	{r7, pc}
 800183e:	bf00      	nop
 8001840:	20000000 	.word	0x20000000
 8001844:	08006578 	.word	0x08006578

08001848 <Error_Handler>:
/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void)
{
 8001848:	b480      	push	{r7}
 800184a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800184c:	b672      	cpsid	i
}
 800184e:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 8001850:	e7fe      	b.n	8001850 <Error_Handler+0x8>
	...

08001854 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001854:	b480      	push	{r7}
 8001856:	b085      	sub	sp, #20
 8001858:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_COMP_CLK_ENABLE();
 800185a:	4b14      	ldr	r3, [pc, #80]	; (80018ac <HAL_MspInit+0x58>)
 800185c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800185e:	4a13      	ldr	r2, [pc, #76]	; (80018ac <HAL_MspInit+0x58>)
 8001860:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8001864:	6253      	str	r3, [r2, #36]	; 0x24
 8001866:	4b11      	ldr	r3, [pc, #68]	; (80018ac <HAL_MspInit+0x58>)
 8001868:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800186a:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800186e:	60fb      	str	r3, [r7, #12]
 8001870:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001872:	4b0e      	ldr	r3, [pc, #56]	; (80018ac <HAL_MspInit+0x58>)
 8001874:	6a1b      	ldr	r3, [r3, #32]
 8001876:	4a0d      	ldr	r2, [pc, #52]	; (80018ac <HAL_MspInit+0x58>)
 8001878:	f043 0301 	orr.w	r3, r3, #1
 800187c:	6213      	str	r3, [r2, #32]
 800187e:	4b0b      	ldr	r3, [pc, #44]	; (80018ac <HAL_MspInit+0x58>)
 8001880:	6a1b      	ldr	r3, [r3, #32]
 8001882:	f003 0301 	and.w	r3, r3, #1
 8001886:	60bb      	str	r3, [r7, #8]
 8001888:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 800188a:	4b08      	ldr	r3, [pc, #32]	; (80018ac <HAL_MspInit+0x58>)
 800188c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800188e:	4a07      	ldr	r2, [pc, #28]	; (80018ac <HAL_MspInit+0x58>)
 8001890:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001894:	6253      	str	r3, [r2, #36]	; 0x24
 8001896:	4b05      	ldr	r3, [pc, #20]	; (80018ac <HAL_MspInit+0x58>)
 8001898:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800189a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800189e:	607b      	str	r3, [r7, #4]
 80018a0:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80018a2:	bf00      	nop
 80018a4:	3714      	adds	r7, #20
 80018a6:	46bd      	mov	sp, r7
 80018a8:	bc80      	pop	{r7}
 80018aa:	4770      	bx	lr
 80018ac:	40023800 	.word	0x40023800

080018b0 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80018b0:	b580      	push	{r7, lr}
 80018b2:	b08a      	sub	sp, #40	; 0x28
 80018b4:	af00      	add	r7, sp, #0
 80018b6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018b8:	f107 0314 	add.w	r3, r7, #20
 80018bc:	2200      	movs	r2, #0
 80018be:	601a      	str	r2, [r3, #0]
 80018c0:	605a      	str	r2, [r3, #4]
 80018c2:	609a      	str	r2, [r3, #8]
 80018c4:	60da      	str	r2, [r3, #12]
 80018c6:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 80018c8:	687b      	ldr	r3, [r7, #4]
 80018ca:	681b      	ldr	r3, [r3, #0]
 80018cc:	4a15      	ldr	r2, [pc, #84]	; (8001924 <HAL_ADC_MspInit+0x74>)
 80018ce:	4293      	cmp	r3, r2
 80018d0:	d123      	bne.n	800191a <HAL_ADC_MspInit+0x6a>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80018d2:	4b15      	ldr	r3, [pc, #84]	; (8001928 <HAL_ADC_MspInit+0x78>)
 80018d4:	6a1b      	ldr	r3, [r3, #32]
 80018d6:	4a14      	ldr	r2, [pc, #80]	; (8001928 <HAL_ADC_MspInit+0x78>)
 80018d8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80018dc:	6213      	str	r3, [r2, #32]
 80018de:	4b12      	ldr	r3, [pc, #72]	; (8001928 <HAL_ADC_MspInit+0x78>)
 80018e0:	6a1b      	ldr	r3, [r3, #32]
 80018e2:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80018e6:	613b      	str	r3, [r7, #16]
 80018e8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80018ea:	4b0f      	ldr	r3, [pc, #60]	; (8001928 <HAL_ADC_MspInit+0x78>)
 80018ec:	69db      	ldr	r3, [r3, #28]
 80018ee:	4a0e      	ldr	r2, [pc, #56]	; (8001928 <HAL_ADC_MspInit+0x78>)
 80018f0:	f043 0301 	orr.w	r3, r3, #1
 80018f4:	61d3      	str	r3, [r2, #28]
 80018f6:	4b0c      	ldr	r3, [pc, #48]	; (8001928 <HAL_ADC_MspInit+0x78>)
 80018f8:	69db      	ldr	r3, [r3, #28]
 80018fa:	f003 0301 	and.w	r3, r3, #1
 80018fe:	60fb      	str	r3, [r7, #12]
 8001900:	68fb      	ldr	r3, [r7, #12]
    /**ADC GPIO Configuration
    PA0-WKUP1     ------> ADC_IN0
    PA1     ------> ADC_IN1
    */
    GPIO_InitStruct.Pin = RV1_Pin|RV2_Pin;
 8001902:	2303      	movs	r3, #3
 8001904:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001906:	2303      	movs	r3, #3
 8001908:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800190a:	2300      	movs	r3, #0
 800190c:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800190e:	f107 0314 	add.w	r3, r7, #20
 8001912:	4619      	mov	r1, r3
 8001914:	4805      	ldr	r0, [pc, #20]	; (800192c <HAL_ADC_MspInit+0x7c>)
 8001916:	f001 f84d 	bl	80029b4 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 800191a:	bf00      	nop
 800191c:	3728      	adds	r7, #40	; 0x28
 800191e:	46bd      	mov	sp, r7
 8001920:	bd80      	pop	{r7, pc}
 8001922:	bf00      	nop
 8001924:	40012400 	.word	0x40012400
 8001928:	40023800 	.word	0x40023800
 800192c:	40020000 	.word	0x40020000

08001930 <HAL_RTC_MspInit>:
* This function configures the hardware resources used in this example
* @param hrtc: RTC handle pointer
* @retval None
*/
void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
{
 8001930:	b480      	push	{r7}
 8001932:	b083      	sub	sp, #12
 8001934:	af00      	add	r7, sp, #0
 8001936:	6078      	str	r0, [r7, #4]
  if(hrtc->Instance==RTC)
 8001938:	687b      	ldr	r3, [r7, #4]
 800193a:	681b      	ldr	r3, [r3, #0]
 800193c:	4a05      	ldr	r2, [pc, #20]	; (8001954 <HAL_RTC_MspInit+0x24>)
 800193e:	4293      	cmp	r3, r2
 8001940:	d102      	bne.n	8001948 <HAL_RTC_MspInit+0x18>
  {
  /* USER CODE BEGIN RTC_MspInit 0 */

  /* USER CODE END RTC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_RTC_ENABLE();
 8001942:	4b05      	ldr	r3, [pc, #20]	; (8001958 <HAL_RTC_MspInit+0x28>)
 8001944:	2201      	movs	r2, #1
 8001946:	601a      	str	r2, [r3, #0]
  /* USER CODE BEGIN RTC_MspInit 1 */

  /* USER CODE END RTC_MspInit 1 */
  }

}
 8001948:	bf00      	nop
 800194a:	370c      	adds	r7, #12
 800194c:	46bd      	mov	sp, r7
 800194e:	bc80      	pop	{r7}
 8001950:	4770      	bx	lr
 8001952:	bf00      	nop
 8001954:	40002800 	.word	0x40002800
 8001958:	424706d8 	.word	0x424706d8

0800195c <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 800195c:	b580      	push	{r7, lr}
 800195e:	b08a      	sub	sp, #40	; 0x28
 8001960:	af00      	add	r7, sp, #0
 8001962:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001964:	f107 0314 	add.w	r3, r7, #20
 8001968:	2200      	movs	r2, #0
 800196a:	601a      	str	r2, [r3, #0]
 800196c:	605a      	str	r2, [r3, #4]
 800196e:	609a      	str	r2, [r3, #8]
 8001970:	60da      	str	r2, [r3, #12]
 8001972:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 8001974:	687b      	ldr	r3, [r7, #4]
 8001976:	681b      	ldr	r3, [r3, #0]
 8001978:	4a17      	ldr	r2, [pc, #92]	; (80019d8 <HAL_SPI_MspInit+0x7c>)
 800197a:	4293      	cmp	r3, r2
 800197c:	d127      	bne.n	80019ce <HAL_SPI_MspInit+0x72>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 800197e:	4b17      	ldr	r3, [pc, #92]	; (80019dc <HAL_SPI_MspInit+0x80>)
 8001980:	6a1b      	ldr	r3, [r3, #32]
 8001982:	4a16      	ldr	r2, [pc, #88]	; (80019dc <HAL_SPI_MspInit+0x80>)
 8001984:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001988:	6213      	str	r3, [r2, #32]
 800198a:	4b14      	ldr	r3, [pc, #80]	; (80019dc <HAL_SPI_MspInit+0x80>)
 800198c:	6a1b      	ldr	r3, [r3, #32]
 800198e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001992:	613b      	str	r3, [r7, #16]
 8001994:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001996:	4b11      	ldr	r3, [pc, #68]	; (80019dc <HAL_SPI_MspInit+0x80>)
 8001998:	69db      	ldr	r3, [r3, #28]
 800199a:	4a10      	ldr	r2, [pc, #64]	; (80019dc <HAL_SPI_MspInit+0x80>)
 800199c:	f043 0301 	orr.w	r3, r3, #1
 80019a0:	61d3      	str	r3, [r2, #28]
 80019a2:	4b0e      	ldr	r3, [pc, #56]	; (80019dc <HAL_SPI_MspInit+0x80>)
 80019a4:	69db      	ldr	r3, [r3, #28]
 80019a6:	f003 0301 	and.w	r3, r3, #1
 80019aa:	60fb      	str	r3, [r7, #12]
 80019ac:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = SPI_SCK_Pin|SPI_MISO_Pin|SPI_MOSI_Pin;
 80019ae:	23e0      	movs	r3, #224	; 0xe0
 80019b0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019b2:	2302      	movs	r3, #2
 80019b4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019b6:	2300      	movs	r3, #0
 80019b8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019ba:	2303      	movs	r3, #3
 80019bc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80019be:	2305      	movs	r3, #5
 80019c0:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019c2:	f107 0314 	add.w	r3, r7, #20
 80019c6:	4619      	mov	r1, r3
 80019c8:	4805      	ldr	r0, [pc, #20]	; (80019e0 <HAL_SPI_MspInit+0x84>)
 80019ca:	f000 fff3 	bl	80029b4 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 80019ce:	bf00      	nop
 80019d0:	3728      	adds	r7, #40	; 0x28
 80019d2:	46bd      	mov	sp, r7
 80019d4:	bd80      	pop	{r7, pc}
 80019d6:	bf00      	nop
 80019d8:	40013000 	.word	0x40013000
 80019dc:	40023800 	.word	0x40023800
 80019e0:	40020000 	.word	0x40020000

080019e4 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80019e4:	b580      	push	{r7, lr}
 80019e6:	b084      	sub	sp, #16
 80019e8:	af00      	add	r7, sp, #0
 80019ea:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM3)
 80019ec:	687b      	ldr	r3, [r7, #4]
 80019ee:	681b      	ldr	r3, [r3, #0]
 80019f0:	4a0d      	ldr	r2, [pc, #52]	; (8001a28 <HAL_TIM_Base_MspInit+0x44>)
 80019f2:	4293      	cmp	r3, r2
 80019f4:	d113      	bne.n	8001a1e <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 80019f6:	4b0d      	ldr	r3, [pc, #52]	; (8001a2c <HAL_TIM_Base_MspInit+0x48>)
 80019f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80019fa:	4a0c      	ldr	r2, [pc, #48]	; (8001a2c <HAL_TIM_Base_MspInit+0x48>)
 80019fc:	f043 0302 	orr.w	r3, r3, #2
 8001a00:	6253      	str	r3, [r2, #36]	; 0x24
 8001a02:	4b0a      	ldr	r3, [pc, #40]	; (8001a2c <HAL_TIM_Base_MspInit+0x48>)
 8001a04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a06:	f003 0302 	and.w	r3, r3, #2
 8001a0a:	60fb      	str	r3, [r7, #12]
 8001a0c:	68fb      	ldr	r3, [r7, #12]
    /* TIM3 interrupt Init */
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001a0e:	2200      	movs	r2, #0
 8001a10:	2100      	movs	r1, #0
 8001a12:	201d      	movs	r0, #29
 8001a14:	f000 ff97 	bl	8002946 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001a18:	201d      	movs	r0, #29
 8001a1a:	f000 ffb0 	bl	800297e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001a1e:	bf00      	nop
 8001a20:	3710      	adds	r7, #16
 8001a22:	46bd      	mov	sp, r7
 8001a24:	bd80      	pop	{r7, pc}
 8001a26:	bf00      	nop
 8001a28:	40000400 	.word	0x40000400
 8001a2c:	40023800 	.word	0x40023800

08001a30 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001a30:	b580      	push	{r7, lr}
 8001a32:	b08a      	sub	sp, #40	; 0x28
 8001a34:	af00      	add	r7, sp, #0
 8001a36:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a38:	f107 0314 	add.w	r3, r7, #20
 8001a3c:	2200      	movs	r2, #0
 8001a3e:	601a      	str	r2, [r3, #0]
 8001a40:	605a      	str	r2, [r3, #4]
 8001a42:	609a      	str	r2, [r3, #8]
 8001a44:	60da      	str	r2, [r3, #12]
 8001a46:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM3)
 8001a48:	687b      	ldr	r3, [r7, #4]
 8001a4a:	681b      	ldr	r3, [r3, #0]
 8001a4c:	4a1f      	ldr	r2, [pc, #124]	; (8001acc <HAL_TIM_MspPostInit+0x9c>)
 8001a4e:	4293      	cmp	r3, r2
 8001a50:	d137      	bne.n	8001ac2 <HAL_TIM_MspPostInit+0x92>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a52:	4b1f      	ldr	r3, [pc, #124]	; (8001ad0 <HAL_TIM_MspPostInit+0xa0>)
 8001a54:	69db      	ldr	r3, [r3, #28]
 8001a56:	4a1e      	ldr	r2, [pc, #120]	; (8001ad0 <HAL_TIM_MspPostInit+0xa0>)
 8001a58:	f043 0304 	orr.w	r3, r3, #4
 8001a5c:	61d3      	str	r3, [r2, #28]
 8001a5e:	4b1c      	ldr	r3, [pc, #112]	; (8001ad0 <HAL_TIM_MspPostInit+0xa0>)
 8001a60:	69db      	ldr	r3, [r3, #28]
 8001a62:	f003 0304 	and.w	r3, r3, #4
 8001a66:	613b      	str	r3, [r7, #16]
 8001a68:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a6a:	4b19      	ldr	r3, [pc, #100]	; (8001ad0 <HAL_TIM_MspPostInit+0xa0>)
 8001a6c:	69db      	ldr	r3, [r3, #28]
 8001a6e:	4a18      	ldr	r2, [pc, #96]	; (8001ad0 <HAL_TIM_MspPostInit+0xa0>)
 8001a70:	f043 0302 	orr.w	r3, r3, #2
 8001a74:	61d3      	str	r3, [r2, #28]
 8001a76:	4b16      	ldr	r3, [pc, #88]	; (8001ad0 <HAL_TIM_MspPostInit+0xa0>)
 8001a78:	69db      	ldr	r3, [r3, #28]
 8001a7a:	f003 0302 	and.w	r3, r3, #2
 8001a7e:	60fb      	str	r3, [r7, #12]
 8001a80:	68fb      	ldr	r3, [r7, #12]
    /**TIM3 GPIO Configuration
    PC7     ------> TIM3_CH2
    PB4     ------> TIM3_CH1
    */
    GPIO_InitStruct.Pin = BUZZ_Pin;
 8001a82:	2380      	movs	r3, #128	; 0x80
 8001a84:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a86:	2302      	movs	r3, #2
 8001a88:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a8a:	2300      	movs	r3, #0
 8001a8c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a8e:	2300      	movs	r3, #0
 8001a90:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8001a92:	2302      	movs	r3, #2
 8001a94:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(BUZZ_GPIO_Port, &GPIO_InitStruct);
 8001a96:	f107 0314 	add.w	r3, r7, #20
 8001a9a:	4619      	mov	r1, r3
 8001a9c:	480d      	ldr	r0, [pc, #52]	; (8001ad4 <HAL_TIM_MspPostInit+0xa4>)
 8001a9e:	f000 ff89 	bl	80029b4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = MOT_Pin;
 8001aa2:	2310      	movs	r3, #16
 8001aa4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aa6:	2302      	movs	r3, #2
 8001aa8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001aaa:	2300      	movs	r3, #0
 8001aac:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001aae:	2300      	movs	r3, #0
 8001ab0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8001ab2:	2302      	movs	r3, #2
 8001ab4:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(MOT_GPIO_Port, &GPIO_InitStruct);
 8001ab6:	f107 0314 	add.w	r3, r7, #20
 8001aba:	4619      	mov	r1, r3
 8001abc:	4806      	ldr	r0, [pc, #24]	; (8001ad8 <HAL_TIM_MspPostInit+0xa8>)
 8001abe:	f000 ff79 	bl	80029b4 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 8001ac2:	bf00      	nop
 8001ac4:	3728      	adds	r7, #40	; 0x28
 8001ac6:	46bd      	mov	sp, r7
 8001ac8:	bd80      	pop	{r7, pc}
 8001aca:	bf00      	nop
 8001acc:	40000400 	.word	0x40000400
 8001ad0:	40023800 	.word	0x40023800
 8001ad4:	40020800 	.word	0x40020800
 8001ad8:	40020400 	.word	0x40020400

08001adc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001adc:	b480      	push	{r7}
 8001ade:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001ae0:	e7fe      	b.n	8001ae0 <NMI_Handler+0x4>

08001ae2 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001ae2:	b480      	push	{r7}
 8001ae4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001ae6:	e7fe      	b.n	8001ae6 <HardFault_Handler+0x4>

08001ae8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001ae8:	b480      	push	{r7}
 8001aea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001aec:	e7fe      	b.n	8001aec <MemManage_Handler+0x4>

08001aee <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001aee:	b480      	push	{r7}
 8001af0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001af2:	e7fe      	b.n	8001af2 <BusFault_Handler+0x4>

08001af4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001af4:	b480      	push	{r7}
 8001af6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001af8:	e7fe      	b.n	8001af8 <UsageFault_Handler+0x4>

08001afa <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001afa:	b480      	push	{r7}
 8001afc:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8001afe:	bf00      	nop
 8001b00:	46bd      	mov	sp, r7
 8001b02:	bc80      	pop	{r7}
 8001b04:	4770      	bx	lr

08001b06 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001b06:	b480      	push	{r7}
 8001b08:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001b0a:	bf00      	nop
 8001b0c:	46bd      	mov	sp, r7
 8001b0e:	bc80      	pop	{r7}
 8001b10:	4770      	bx	lr

08001b12 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001b12:	b480      	push	{r7}
 8001b14:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001b16:	bf00      	nop
 8001b18:	46bd      	mov	sp, r7
 8001b1a:	bc80      	pop	{r7}
 8001b1c:	4770      	bx	lr

08001b1e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001b1e:	b580      	push	{r7, lr}
 8001b20:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001b22:	f000 f917 	bl	8001d54 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001b26:	bf00      	nop
 8001b28:	bd80      	pop	{r7, pc}
	...

08001b2c <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001b2c:	b580      	push	{r7, lr}
 8001b2e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001b30:	4802      	ldr	r0, [pc, #8]	; (8001b3c <TIM3_IRQHandler+0x10>)
 8001b32:	f002 fee8 	bl	8004906 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8001b36:	bf00      	nop
 8001b38:	bd80      	pop	{r7, pc}
 8001b3a:	bf00      	nop
 8001b3c:	20000180 	.word	0x20000180

08001b40 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8001b40:	b580      	push	{r7, lr}
 8001b42:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(BTNCarte_Pin);
 8001b44:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8001b48:	f001 f8f4 	bl	8002d34 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8001b4c:	bf00      	nop
 8001b4e:	bd80      	pop	{r7, pc}

08001b50 <_read>:
 8001b50:	b580      	push	{r7, lr}
 8001b52:	b086      	sub	sp, #24
 8001b54:	af00      	add	r7, sp, #0
 8001b56:	60f8      	str	r0, [r7, #12]
 8001b58:	60b9      	str	r1, [r7, #8]
 8001b5a:	607a      	str	r2, [r7, #4]
 8001b5c:	2300      	movs	r3, #0
 8001b5e:	617b      	str	r3, [r7, #20]
 8001b60:	e00a      	b.n	8001b78 <_read+0x28>
 8001b62:	f3af 8000 	nop.w
 8001b66:	4601      	mov	r1, r0
 8001b68:	68bb      	ldr	r3, [r7, #8]
 8001b6a:	1c5a      	adds	r2, r3, #1
 8001b6c:	60ba      	str	r2, [r7, #8]
 8001b6e:	b2ca      	uxtb	r2, r1
 8001b70:	701a      	strb	r2, [r3, #0]
 8001b72:	697b      	ldr	r3, [r7, #20]
 8001b74:	3301      	adds	r3, #1
 8001b76:	617b      	str	r3, [r7, #20]
 8001b78:	697a      	ldr	r2, [r7, #20]
 8001b7a:	687b      	ldr	r3, [r7, #4]
 8001b7c:	429a      	cmp	r2, r3
 8001b7e:	dbf0      	blt.n	8001b62 <_read+0x12>
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	4618      	mov	r0, r3
 8001b84:	3718      	adds	r7, #24
 8001b86:	46bd      	mov	sp, r7
 8001b88:	bd80      	pop	{r7, pc}

08001b8a <_close>:
 8001b8a:	b480      	push	{r7}
 8001b8c:	b083      	sub	sp, #12
 8001b8e:	af00      	add	r7, sp, #0
 8001b90:	6078      	str	r0, [r7, #4]
 8001b92:	f04f 33ff 	mov.w	r3, #4294967295
 8001b96:	4618      	mov	r0, r3
 8001b98:	370c      	adds	r7, #12
 8001b9a:	46bd      	mov	sp, r7
 8001b9c:	bc80      	pop	{r7}
 8001b9e:	4770      	bx	lr

08001ba0 <_fstat>:
 8001ba0:	b480      	push	{r7}
 8001ba2:	b083      	sub	sp, #12
 8001ba4:	af00      	add	r7, sp, #0
 8001ba6:	6078      	str	r0, [r7, #4]
 8001ba8:	6039      	str	r1, [r7, #0]
 8001baa:	683b      	ldr	r3, [r7, #0]
 8001bac:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001bb0:	605a      	str	r2, [r3, #4]
 8001bb2:	2300      	movs	r3, #0
 8001bb4:	4618      	mov	r0, r3
 8001bb6:	370c      	adds	r7, #12
 8001bb8:	46bd      	mov	sp, r7
 8001bba:	bc80      	pop	{r7}
 8001bbc:	4770      	bx	lr

08001bbe <_isatty>:
 8001bbe:	b480      	push	{r7}
 8001bc0:	b083      	sub	sp, #12
 8001bc2:	af00      	add	r7, sp, #0
 8001bc4:	6078      	str	r0, [r7, #4]
 8001bc6:	2301      	movs	r3, #1
 8001bc8:	4618      	mov	r0, r3
 8001bca:	370c      	adds	r7, #12
 8001bcc:	46bd      	mov	sp, r7
 8001bce:	bc80      	pop	{r7}
 8001bd0:	4770      	bx	lr

08001bd2 <_lseek>:
 8001bd2:	b480      	push	{r7}
 8001bd4:	b085      	sub	sp, #20
 8001bd6:	af00      	add	r7, sp, #0
 8001bd8:	60f8      	str	r0, [r7, #12]
 8001bda:	60b9      	str	r1, [r7, #8]
 8001bdc:	607a      	str	r2, [r7, #4]
 8001bde:	2300      	movs	r3, #0
 8001be0:	4618      	mov	r0, r3
 8001be2:	3714      	adds	r7, #20
 8001be4:	46bd      	mov	sp, r7
 8001be6:	bc80      	pop	{r7}
 8001be8:	4770      	bx	lr
	...

08001bec <_sbrk>:
 8001bec:	b580      	push	{r7, lr}
 8001bee:	b086      	sub	sp, #24
 8001bf0:	af00      	add	r7, sp, #0
 8001bf2:	6078      	str	r0, [r7, #4]
 8001bf4:	4a14      	ldr	r2, [pc, #80]	; (8001c48 <_sbrk+0x5c>)
 8001bf6:	4b15      	ldr	r3, [pc, #84]	; (8001c4c <_sbrk+0x60>)
 8001bf8:	1ad3      	subs	r3, r2, r3
 8001bfa:	617b      	str	r3, [r7, #20]
 8001bfc:	697b      	ldr	r3, [r7, #20]
 8001bfe:	613b      	str	r3, [r7, #16]
 8001c00:	4b13      	ldr	r3, [pc, #76]	; (8001c50 <_sbrk+0x64>)
 8001c02:	681b      	ldr	r3, [r3, #0]
 8001c04:	2b00      	cmp	r3, #0
 8001c06:	d102      	bne.n	8001c0e <_sbrk+0x22>
 8001c08:	4b11      	ldr	r3, [pc, #68]	; (8001c50 <_sbrk+0x64>)
 8001c0a:	4a12      	ldr	r2, [pc, #72]	; (8001c54 <_sbrk+0x68>)
 8001c0c:	601a      	str	r2, [r3, #0]
 8001c0e:	4b10      	ldr	r3, [pc, #64]	; (8001c50 <_sbrk+0x64>)
 8001c10:	681a      	ldr	r2, [r3, #0]
 8001c12:	687b      	ldr	r3, [r7, #4]
 8001c14:	4413      	add	r3, r2
 8001c16:	693a      	ldr	r2, [r7, #16]
 8001c18:	429a      	cmp	r2, r3
 8001c1a:	d207      	bcs.n	8001c2c <_sbrk+0x40>
 8001c1c:	f003 feba 	bl	8005994 <__errno>
 8001c20:	4603      	mov	r3, r0
 8001c22:	220c      	movs	r2, #12
 8001c24:	601a      	str	r2, [r3, #0]
 8001c26:	f04f 33ff 	mov.w	r3, #4294967295
 8001c2a:	e009      	b.n	8001c40 <_sbrk+0x54>
 8001c2c:	4b08      	ldr	r3, [pc, #32]	; (8001c50 <_sbrk+0x64>)
 8001c2e:	681b      	ldr	r3, [r3, #0]
 8001c30:	60fb      	str	r3, [r7, #12]
 8001c32:	4b07      	ldr	r3, [pc, #28]	; (8001c50 <_sbrk+0x64>)
 8001c34:	681a      	ldr	r2, [r3, #0]
 8001c36:	687b      	ldr	r3, [r7, #4]
 8001c38:	4413      	add	r3, r2
 8001c3a:	4a05      	ldr	r2, [pc, #20]	; (8001c50 <_sbrk+0x64>)
 8001c3c:	6013      	str	r3, [r2, #0]
 8001c3e:	68fb      	ldr	r3, [r7, #12]
 8001c40:	4618      	mov	r0, r3
 8001c42:	3718      	adds	r7, #24
 8001c44:	46bd      	mov	sp, r7
 8001c46:	bd80      	pop	{r7, pc}
 8001c48:	20014000 	.word	0x20014000
 8001c4c:	00000400 	.word	0x00000400
 8001c50:	200001fc 	.word	0x200001fc
 8001c54:	20000350 	.word	0x20000350

08001c58 <SystemInit>:
 8001c58:	b480      	push	{r7}
 8001c5a:	af00      	add	r7, sp, #0
 8001c5c:	bf00      	nop
 8001c5e:	46bd      	mov	sp, r7
 8001c60:	bc80      	pop	{r7}
 8001c62:	4770      	bx	lr

08001c64 <Reset_Handler>:
 8001c64:	f7ff fff8 	bl	8001c58 <SystemInit>
 8001c68:	480b      	ldr	r0, [pc, #44]	; (8001c98 <LoopFillZerobss+0xe>)
 8001c6a:	490c      	ldr	r1, [pc, #48]	; (8001c9c <LoopFillZerobss+0x12>)
 8001c6c:	4a0c      	ldr	r2, [pc, #48]	; (8001ca0 <LoopFillZerobss+0x16>)
 8001c6e:	2300      	movs	r3, #0
 8001c70:	e002      	b.n	8001c78 <LoopCopyDataInit>

08001c72 <CopyDataInit>:
 8001c72:	58d4      	ldr	r4, [r2, r3]
 8001c74:	50c4      	str	r4, [r0, r3]
 8001c76:	3304      	adds	r3, #4

08001c78 <LoopCopyDataInit>:
 8001c78:	18c4      	adds	r4, r0, r3
 8001c7a:	428c      	cmp	r4, r1
 8001c7c:	d3f9      	bcc.n	8001c72 <CopyDataInit>
 8001c7e:	4a09      	ldr	r2, [pc, #36]	; (8001ca4 <LoopFillZerobss+0x1a>)
 8001c80:	4c09      	ldr	r4, [pc, #36]	; (8001ca8 <LoopFillZerobss+0x1e>)
 8001c82:	2300      	movs	r3, #0
 8001c84:	e001      	b.n	8001c8a <LoopFillZerobss>

08001c86 <FillZerobss>:
 8001c86:	6013      	str	r3, [r2, #0]
 8001c88:	3204      	adds	r2, #4

08001c8a <LoopFillZerobss>:
 8001c8a:	42a2      	cmp	r2, r4
 8001c8c:	d3fb      	bcc.n	8001c86 <FillZerobss>
 8001c8e:	f003 fe87 	bl	80059a0 <__libc_init_array>
 8001c92:	f7fe fc21 	bl	80004d8 <main>
 8001c96:	4770      	bx	lr
 8001c98:	20000000 	.word	0x20000000
 8001c9c:	20000098 	.word	0x20000098
 8001ca0:	08006620 	.word	0x08006620
 8001ca4:	20000098 	.word	0x20000098
 8001ca8:	20000350 	.word	0x20000350

08001cac <ADC1_IRQHandler>:
 8001cac:	e7fe      	b.n	8001cac <ADC1_IRQHandler>

08001cae <HAL_Init>:
 8001cae:	b580      	push	{r7, lr}
 8001cb0:	b082      	sub	sp, #8
 8001cb2:	af00      	add	r7, sp, #0
 8001cb4:	2300      	movs	r3, #0
 8001cb6:	71fb      	strb	r3, [r7, #7]
 8001cb8:	2003      	movs	r0, #3
 8001cba:	f000 fe39 	bl	8002930 <HAL_NVIC_SetPriorityGrouping>
 8001cbe:	200f      	movs	r0, #15
 8001cc0:	f000 f80e 	bl	8001ce0 <HAL_InitTick>
 8001cc4:	4603      	mov	r3, r0
 8001cc6:	2b00      	cmp	r3, #0
 8001cc8:	d002      	beq.n	8001cd0 <HAL_Init+0x22>
 8001cca:	2301      	movs	r3, #1
 8001ccc:	71fb      	strb	r3, [r7, #7]
 8001cce:	e001      	b.n	8001cd4 <HAL_Init+0x26>
 8001cd0:	f7ff fdc0 	bl	8001854 <HAL_MspInit>
 8001cd4:	79fb      	ldrb	r3, [r7, #7]
 8001cd6:	4618      	mov	r0, r3
 8001cd8:	3708      	adds	r7, #8
 8001cda:	46bd      	mov	sp, r7
 8001cdc:	bd80      	pop	{r7, pc}
	...

08001ce0 <HAL_InitTick>:
 8001ce0:	b580      	push	{r7, lr}
 8001ce2:	b084      	sub	sp, #16
 8001ce4:	af00      	add	r7, sp, #0
 8001ce6:	6078      	str	r0, [r7, #4]
 8001ce8:	2300      	movs	r3, #0
 8001cea:	73fb      	strb	r3, [r7, #15]
 8001cec:	4b16      	ldr	r3, [pc, #88]	; (8001d48 <HAL_InitTick+0x68>)
 8001cee:	681b      	ldr	r3, [r3, #0]
 8001cf0:	2b00      	cmp	r3, #0
 8001cf2:	d022      	beq.n	8001d3a <HAL_InitTick+0x5a>
 8001cf4:	4b15      	ldr	r3, [pc, #84]	; (8001d4c <HAL_InitTick+0x6c>)
 8001cf6:	681a      	ldr	r2, [r3, #0]
 8001cf8:	4b13      	ldr	r3, [pc, #76]	; (8001d48 <HAL_InitTick+0x68>)
 8001cfa:	681b      	ldr	r3, [r3, #0]
 8001cfc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001d00:	fbb1 f3f3 	udiv	r3, r1, r3
 8001d04:	fbb2 f3f3 	udiv	r3, r2, r3
 8001d08:	4618      	mov	r0, r3
 8001d0a:	f000 fe46 	bl	800299a <HAL_SYSTICK_Config>
 8001d0e:	4603      	mov	r3, r0
 8001d10:	2b00      	cmp	r3, #0
 8001d12:	d10f      	bne.n	8001d34 <HAL_InitTick+0x54>
 8001d14:	687b      	ldr	r3, [r7, #4]
 8001d16:	2b0f      	cmp	r3, #15
 8001d18:	d809      	bhi.n	8001d2e <HAL_InitTick+0x4e>
 8001d1a:	2200      	movs	r2, #0
 8001d1c:	6879      	ldr	r1, [r7, #4]
 8001d1e:	f04f 30ff 	mov.w	r0, #4294967295
 8001d22:	f000 fe10 	bl	8002946 <HAL_NVIC_SetPriority>
 8001d26:	4a0a      	ldr	r2, [pc, #40]	; (8001d50 <HAL_InitTick+0x70>)
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	6013      	str	r3, [r2, #0]
 8001d2c:	e007      	b.n	8001d3e <HAL_InitTick+0x5e>
 8001d2e:	2301      	movs	r3, #1
 8001d30:	73fb      	strb	r3, [r7, #15]
 8001d32:	e004      	b.n	8001d3e <HAL_InitTick+0x5e>
 8001d34:	2301      	movs	r3, #1
 8001d36:	73fb      	strb	r3, [r7, #15]
 8001d38:	e001      	b.n	8001d3e <HAL_InitTick+0x5e>
 8001d3a:	2301      	movs	r3, #1
 8001d3c:	73fb      	strb	r3, [r7, #15]
 8001d3e:	7bfb      	ldrb	r3, [r7, #15]
 8001d40:	4618      	mov	r0, r3
 8001d42:	3710      	adds	r7, #16
 8001d44:	46bd      	mov	sp, r7
 8001d46:	bd80      	pop	{r7, pc}
 8001d48:	20000038 	.word	0x20000038
 8001d4c:	20000030 	.word	0x20000030
 8001d50:	20000034 	.word	0x20000034

08001d54 <HAL_IncTick>:
 8001d54:	b480      	push	{r7}
 8001d56:	af00      	add	r7, sp, #0
 8001d58:	4b05      	ldr	r3, [pc, #20]	; (8001d70 <HAL_IncTick+0x1c>)
 8001d5a:	681a      	ldr	r2, [r3, #0]
 8001d5c:	4b05      	ldr	r3, [pc, #20]	; (8001d74 <HAL_IncTick+0x20>)
 8001d5e:	681b      	ldr	r3, [r3, #0]
 8001d60:	4413      	add	r3, r2
 8001d62:	4a03      	ldr	r2, [pc, #12]	; (8001d70 <HAL_IncTick+0x1c>)
 8001d64:	6013      	str	r3, [r2, #0]
 8001d66:	bf00      	nop
 8001d68:	46bd      	mov	sp, r7
 8001d6a:	bc80      	pop	{r7}
 8001d6c:	4770      	bx	lr
 8001d6e:	bf00      	nop
 8001d70:	20000200 	.word	0x20000200
 8001d74:	20000038 	.word	0x20000038

08001d78 <HAL_GetTick>:
 8001d78:	b480      	push	{r7}
 8001d7a:	af00      	add	r7, sp, #0
 8001d7c:	4b02      	ldr	r3, [pc, #8]	; (8001d88 <HAL_GetTick+0x10>)
 8001d7e:	681b      	ldr	r3, [r3, #0]
 8001d80:	4618      	mov	r0, r3
 8001d82:	46bd      	mov	sp, r7
 8001d84:	bc80      	pop	{r7}
 8001d86:	4770      	bx	lr
 8001d88:	20000200 	.word	0x20000200

08001d8c <HAL_Delay>:
 8001d8c:	b580      	push	{r7, lr}
 8001d8e:	b084      	sub	sp, #16
 8001d90:	af00      	add	r7, sp, #0
 8001d92:	6078      	str	r0, [r7, #4]
 8001d94:	f7ff fff0 	bl	8001d78 <HAL_GetTick>
 8001d98:	60b8      	str	r0, [r7, #8]
 8001d9a:	687b      	ldr	r3, [r7, #4]
 8001d9c:	60fb      	str	r3, [r7, #12]
 8001d9e:	68fb      	ldr	r3, [r7, #12]
 8001da0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001da4:	d004      	beq.n	8001db0 <HAL_Delay+0x24>
 8001da6:	4b09      	ldr	r3, [pc, #36]	; (8001dcc <HAL_Delay+0x40>)
 8001da8:	681b      	ldr	r3, [r3, #0]
 8001daa:	68fa      	ldr	r2, [r7, #12]
 8001dac:	4413      	add	r3, r2
 8001dae:	60fb      	str	r3, [r7, #12]
 8001db0:	bf00      	nop
 8001db2:	f7ff ffe1 	bl	8001d78 <HAL_GetTick>
 8001db6:	4602      	mov	r2, r0
 8001db8:	68bb      	ldr	r3, [r7, #8]
 8001dba:	1ad3      	subs	r3, r2, r3
 8001dbc:	68fa      	ldr	r2, [r7, #12]
 8001dbe:	429a      	cmp	r2, r3
 8001dc0:	d8f7      	bhi.n	8001db2 <HAL_Delay+0x26>
 8001dc2:	bf00      	nop
 8001dc4:	bf00      	nop
 8001dc6:	3710      	adds	r7, #16
 8001dc8:	46bd      	mov	sp, r7
 8001dca:	bd80      	pop	{r7, pc}
 8001dcc:	20000038 	.word	0x20000038

08001dd0 <HAL_ResumeTick>:
 8001dd0:	b480      	push	{r7}
 8001dd2:	af00      	add	r7, sp, #0
 8001dd4:	4b04      	ldr	r3, [pc, #16]	; (8001de8 <HAL_ResumeTick+0x18>)
 8001dd6:	681b      	ldr	r3, [r3, #0]
 8001dd8:	4a03      	ldr	r2, [pc, #12]	; (8001de8 <HAL_ResumeTick+0x18>)
 8001dda:	f043 0302 	orr.w	r3, r3, #2
 8001dde:	6013      	str	r3, [r2, #0]
 8001de0:	bf00      	nop
 8001de2:	46bd      	mov	sp, r7
 8001de4:	bc80      	pop	{r7}
 8001de6:	4770      	bx	lr
 8001de8:	e000e010 	.word	0xe000e010

08001dec <HAL_ADC_Init>:
 8001dec:	b580      	push	{r7, lr}
 8001dee:	b08e      	sub	sp, #56	; 0x38
 8001df0:	af00      	add	r7, sp, #0
 8001df2:	6078      	str	r0, [r7, #4]
 8001df4:	2300      	movs	r3, #0
 8001df6:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8001dfa:	2300      	movs	r3, #0
 8001dfc:	633b      	str	r3, [r7, #48]	; 0x30
 8001dfe:	2300      	movs	r3, #0
 8001e00:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001e02:	687b      	ldr	r3, [r7, #4]
 8001e04:	2b00      	cmp	r3, #0
 8001e06:	d101      	bne.n	8001e0c <HAL_ADC_Init+0x20>
 8001e08:	2301      	movs	r3, #1
 8001e0a:	e127      	b.n	800205c <HAL_ADC_Init+0x270>
 8001e0c:	687b      	ldr	r3, [r7, #4]
 8001e0e:	691b      	ldr	r3, [r3, #16]
 8001e10:	2b00      	cmp	r3, #0
 8001e12:	687b      	ldr	r3, [r7, #4]
 8001e14:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001e16:	2b00      	cmp	r3, #0
 8001e18:	d115      	bne.n	8001e46 <HAL_ADC_Init+0x5a>
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	2200      	movs	r2, #0
 8001e1e:	651a      	str	r2, [r3, #80]	; 0x50
 8001e20:	687b      	ldr	r3, [r7, #4]
 8001e22:	2200      	movs	r2, #0
 8001e24:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8001e28:	4b8e      	ldr	r3, [pc, #568]	; (8002064 <HAL_ADC_Init+0x278>)
 8001e2a:	6a1b      	ldr	r3, [r3, #32]
 8001e2c:	4a8d      	ldr	r2, [pc, #564]	; (8002064 <HAL_ADC_Init+0x278>)
 8001e2e:	f043 0301 	orr.w	r3, r3, #1
 8001e32:	6213      	str	r3, [r2, #32]
 8001e34:	4b8b      	ldr	r3, [pc, #556]	; (8002064 <HAL_ADC_Init+0x278>)
 8001e36:	6a1b      	ldr	r3, [r3, #32]
 8001e38:	f003 0301 	and.w	r3, r3, #1
 8001e3c:	60bb      	str	r3, [r7, #8]
 8001e3e:	68bb      	ldr	r3, [r7, #8]
 8001e40:	6878      	ldr	r0, [r7, #4]
 8001e42:	f7ff fd35 	bl	80018b0 <HAL_ADC_MspInit>
 8001e46:	687b      	ldr	r3, [r7, #4]
 8001e48:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001e4a:	f003 0310 	and.w	r3, r3, #16
 8001e4e:	2b00      	cmp	r3, #0
 8001e50:	f040 80ff 	bne.w	8002052 <HAL_ADC_Init+0x266>
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001e58:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8001e5c:	f023 0302 	bic.w	r3, r3, #2
 8001e60:	f043 0202 	orr.w	r2, r3, #2
 8001e64:	687b      	ldr	r3, [r7, #4]
 8001e66:	64da      	str	r2, [r3, #76]	; 0x4c
 8001e68:	4b7f      	ldr	r3, [pc, #508]	; (8002068 <HAL_ADC_Init+0x27c>)
 8001e6a:	685b      	ldr	r3, [r3, #4]
 8001e6c:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8001e70:	687b      	ldr	r3, [r7, #4]
 8001e72:	685b      	ldr	r3, [r3, #4]
 8001e74:	497c      	ldr	r1, [pc, #496]	; (8002068 <HAL_ADC_Init+0x27c>)
 8001e76:	4313      	orrs	r3, r2
 8001e78:	604b      	str	r3, [r1, #4]
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	68da      	ldr	r2, [r3, #12]
 8001e7e:	687b      	ldr	r3, [r7, #4]
 8001e80:	695b      	ldr	r3, [r3, #20]
 8001e82:	431a      	orrs	r2, r3
 8001e84:	687b      	ldr	r3, [r7, #4]
 8001e86:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001e8a:	4619      	mov	r1, r3
 8001e8c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001e90:	623b      	str	r3, [r7, #32]
 8001e92:	6a3b      	ldr	r3, [r7, #32]
 8001e94:	fa93 f3a3 	rbit	r3, r3
 8001e98:	61fb      	str	r3, [r7, #28]
 8001e9a:	69fb      	ldr	r3, [r7, #28]
 8001e9c:	fab3 f383 	clz	r3, r3
 8001ea0:	b2db      	uxtb	r3, r3
 8001ea2:	fa01 f303 	lsl.w	r3, r1, r3
 8001ea6:	431a      	orrs	r2, r3
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	6a1b      	ldr	r3, [r3, #32]
 8001eac:	431a      	orrs	r2, r3
 8001eae:	687b      	ldr	r3, [r7, #4]
 8001eb0:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8001eb4:	4619      	mov	r1, r3
 8001eb6:	2302      	movs	r3, #2
 8001eb8:	62bb      	str	r3, [r7, #40]	; 0x28
 8001eba:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001ebc:	fa93 f3a3 	rbit	r3, r3
 8001ec0:	627b      	str	r3, [r7, #36]	; 0x24
 8001ec2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001ec4:	fab3 f383 	clz	r3, r3
 8001ec8:	b2db      	uxtb	r3, r3
 8001eca:	fa01 f303 	lsl.w	r3, r1, r3
 8001ece:	4313      	orrs	r3, r2
 8001ed0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001ed2:	4313      	orrs	r3, r2
 8001ed4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001ed6:	687b      	ldr	r3, [r7, #4]
 8001ed8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001eda:	2b10      	cmp	r3, #16
 8001edc:	d007      	beq.n	8001eee <HAL_ADC_Init+0x102>
 8001ede:	687b      	ldr	r3, [r7, #4]
 8001ee0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001ee2:	687b      	ldr	r3, [r7, #4]
 8001ee4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001ee6:	4313      	orrs	r3, r2
 8001ee8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001eea:	4313      	orrs	r3, r2
 8001eec:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001eee:	687b      	ldr	r3, [r7, #4]
 8001ef0:	681b      	ldr	r3, [r3, #0]
 8001ef2:	681b      	ldr	r3, [r3, #0]
 8001ef4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001ef8:	2b40      	cmp	r3, #64	; 0x40
 8001efa:	d04f      	beq.n	8001f9c <HAL_ADC_Init+0x1b0>
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	699b      	ldr	r3, [r3, #24]
 8001f00:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001f02:	4313      	orrs	r3, r2
 8001f04:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001f06:	687b      	ldr	r3, [r7, #4]
 8001f08:	689a      	ldr	r2, [r3, #8]
 8001f0a:	687b      	ldr	r3, [r7, #4]
 8001f0c:	69db      	ldr	r3, [r3, #28]
 8001f0e:	4313      	orrs	r3, r2
 8001f10:	687a      	ldr	r2, [r7, #4]
 8001f12:	6912      	ldr	r2, [r2, #16]
 8001f14:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8001f18:	d003      	beq.n	8001f22 <HAL_ADC_Init+0x136>
 8001f1a:	687a      	ldr	r2, [r7, #4]
 8001f1c:	6912      	ldr	r2, [r2, #16]
 8001f1e:	2a01      	cmp	r2, #1
 8001f20:	d102      	bne.n	8001f28 <HAL_ADC_Init+0x13c>
 8001f22:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001f26:	e000      	b.n	8001f2a <HAL_ADC_Init+0x13e>
 8001f28:	2200      	movs	r2, #0
 8001f2a:	4313      	orrs	r3, r2
 8001f2c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8001f2e:	4313      	orrs	r3, r2
 8001f30:	633b      	str	r3, [r7, #48]	; 0x30
 8001f32:	687b      	ldr	r3, [r7, #4]
 8001f34:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8001f38:	2b01      	cmp	r3, #1
 8001f3a:	d125      	bne.n	8001f88 <HAL_ADC_Init+0x19c>
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8001f42:	2b00      	cmp	r3, #0
 8001f44:	d114      	bne.n	8001f70 <HAL_ADC_Init+0x184>
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f4a:	3b01      	subs	r3, #1
 8001f4c:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 8001f50:	61ba      	str	r2, [r7, #24]
 8001f52:	69ba      	ldr	r2, [r7, #24]
 8001f54:	fa92 f2a2 	rbit	r2, r2
 8001f58:	617a      	str	r2, [r7, #20]
 8001f5a:	697a      	ldr	r2, [r7, #20]
 8001f5c:	fab2 f282 	clz	r2, r2
 8001f60:	b2d2      	uxtb	r2, r2
 8001f62:	4093      	lsls	r3, r2
 8001f64:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8001f68:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8001f6a:	4313      	orrs	r3, r2
 8001f6c:	633b      	str	r3, [r7, #48]	; 0x30
 8001f6e:	e00b      	b.n	8001f88 <HAL_ADC_Init+0x19c>
 8001f70:	687b      	ldr	r3, [r7, #4]
 8001f72:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001f74:	f043 0220 	orr.w	r2, r3, #32
 8001f78:	687b      	ldr	r3, [r7, #4]
 8001f7a:	64da      	str	r2, [r3, #76]	; 0x4c
 8001f7c:	687b      	ldr	r3, [r7, #4]
 8001f7e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001f80:	f043 0201 	orr.w	r2, r3, #1
 8001f84:	687b      	ldr	r3, [r7, #4]
 8001f86:	651a      	str	r2, [r3, #80]	; 0x50
 8001f88:	687b      	ldr	r3, [r7, #4]
 8001f8a:	681b      	ldr	r3, [r3, #0]
 8001f8c:	685a      	ldr	r2, [r3, #4]
 8001f8e:	4b37      	ldr	r3, [pc, #220]	; (800206c <HAL_ADC_Init+0x280>)
 8001f90:	4013      	ands	r3, r2
 8001f92:	687a      	ldr	r2, [r7, #4]
 8001f94:	6812      	ldr	r2, [r2, #0]
 8001f96:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8001f98:	430b      	orrs	r3, r1
 8001f9a:	6053      	str	r3, [r2, #4]
 8001f9c:	687b      	ldr	r3, [r7, #4]
 8001f9e:	681b      	ldr	r3, [r3, #0]
 8001fa0:	689a      	ldr	r2, [r3, #8]
 8001fa2:	4b33      	ldr	r3, [pc, #204]	; (8002070 <HAL_ADC_Init+0x284>)
 8001fa4:	4013      	ands	r3, r2
 8001fa6:	687a      	ldr	r2, [r7, #4]
 8001fa8:	6812      	ldr	r2, [r2, #0]
 8001faa:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8001fac:	430b      	orrs	r3, r1
 8001fae:	6093      	str	r3, [r2, #8]
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	691b      	ldr	r3, [r3, #16]
 8001fb4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001fb8:	d003      	beq.n	8001fc2 <HAL_ADC_Init+0x1d6>
 8001fba:	687b      	ldr	r3, [r7, #4]
 8001fbc:	691b      	ldr	r3, [r3, #16]
 8001fbe:	2b01      	cmp	r3, #1
 8001fc0:	d119      	bne.n	8001ff6 <HAL_ADC_Init+0x20a>
 8001fc2:	687b      	ldr	r3, [r7, #4]
 8001fc4:	681b      	ldr	r3, [r3, #0]
 8001fc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fc8:	f023 71f8 	bic.w	r1, r3, #32505856	; 0x1f00000
 8001fcc:	687b      	ldr	r3, [r7, #4]
 8001fce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001fd0:	3b01      	subs	r3, #1
 8001fd2:	f04f 72f8 	mov.w	r2, #32505856	; 0x1f00000
 8001fd6:	613a      	str	r2, [r7, #16]
 8001fd8:	693a      	ldr	r2, [r7, #16]
 8001fda:	fa92 f2a2 	rbit	r2, r2
 8001fde:	60fa      	str	r2, [r7, #12]
 8001fe0:	68fa      	ldr	r2, [r7, #12]
 8001fe2:	fab2 f282 	clz	r2, r2
 8001fe6:	b2d2      	uxtb	r2, r2
 8001fe8:	fa03 f202 	lsl.w	r2, r3, r2
 8001fec:	687b      	ldr	r3, [r7, #4]
 8001fee:	681b      	ldr	r3, [r3, #0]
 8001ff0:	430a      	orrs	r2, r1
 8001ff2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ff4:	e007      	b.n	8002006 <HAL_ADC_Init+0x21a>
 8001ff6:	687b      	ldr	r3, [r7, #4]
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ffc:	687b      	ldr	r3, [r7, #4]
 8001ffe:	681b      	ldr	r3, [r3, #0]
 8002000:	f022 72f8 	bic.w	r2, r2, #32505856	; 0x1f00000
 8002004:	631a      	str	r2, [r3, #48]	; 0x30
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	681b      	ldr	r3, [r3, #0]
 800200a:	689a      	ldr	r2, [r3, #8]
 800200c:	4b19      	ldr	r3, [pc, #100]	; (8002074 <HAL_ADC_Init+0x288>)
 800200e:	4013      	ands	r3, r2
 8002010:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8002012:	429a      	cmp	r2, r3
 8002014:	d10b      	bne.n	800202e <HAL_ADC_Init+0x242>
 8002016:	687b      	ldr	r3, [r7, #4]
 8002018:	2200      	movs	r2, #0
 800201a:	651a      	str	r2, [r3, #80]	; 0x50
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002020:	f023 0303 	bic.w	r3, r3, #3
 8002024:	f043 0201 	orr.w	r2, r3, #1
 8002028:	687b      	ldr	r3, [r7, #4]
 800202a:	64da      	str	r2, [r3, #76]	; 0x4c
 800202c:	e014      	b.n	8002058 <HAL_ADC_Init+0x26c>
 800202e:	687b      	ldr	r3, [r7, #4]
 8002030:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002032:	f023 0312 	bic.w	r3, r3, #18
 8002036:	f043 0210 	orr.w	r2, r3, #16
 800203a:	687b      	ldr	r3, [r7, #4]
 800203c:	64da      	str	r2, [r3, #76]	; 0x4c
 800203e:	687b      	ldr	r3, [r7, #4]
 8002040:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002042:	f043 0201 	orr.w	r2, r3, #1
 8002046:	687b      	ldr	r3, [r7, #4]
 8002048:	651a      	str	r2, [r3, #80]	; 0x50
 800204a:	2301      	movs	r3, #1
 800204c:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8002050:	e002      	b.n	8002058 <HAL_ADC_Init+0x26c>
 8002052:	2301      	movs	r3, #1
 8002054:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8002058:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800205c:	4618      	mov	r0, r3
 800205e:	3738      	adds	r7, #56	; 0x38
 8002060:	46bd      	mov	sp, r7
 8002062:	bd80      	pop	{r7, pc}
 8002064:	40023800 	.word	0x40023800
 8002068:	40012700 	.word	0x40012700
 800206c:	fcfc16ff 	.word	0xfcfc16ff
 8002070:	c0fff189 	.word	0xc0fff189
 8002074:	bf80fffe 	.word	0xbf80fffe

08002078 <HAL_ADC_Start>:
 8002078:	b580      	push	{r7, lr}
 800207a:	b084      	sub	sp, #16
 800207c:	af00      	add	r7, sp, #0
 800207e:	6078      	str	r0, [r7, #4]
 8002080:	2300      	movs	r3, #0
 8002082:	73fb      	strb	r3, [r7, #15]
 8002084:	687b      	ldr	r3, [r7, #4]
 8002086:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800208a:	2b01      	cmp	r3, #1
 800208c:	d101      	bne.n	8002092 <HAL_ADC_Start+0x1a>
 800208e:	2302      	movs	r3, #2
 8002090:	e04e      	b.n	8002130 <HAL_ADC_Start+0xb8>
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	2201      	movs	r2, #1
 8002096:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800209a:	6878      	ldr	r0, [r7, #4]
 800209c:	f000 fade 	bl	800265c <ADC_Enable>
 80020a0:	4603      	mov	r3, r0
 80020a2:	73fb      	strb	r3, [r7, #15]
 80020a4:	7bfb      	ldrb	r3, [r7, #15]
 80020a6:	2b00      	cmp	r3, #0
 80020a8:	d141      	bne.n	800212e <HAL_ADC_Start+0xb6>
 80020aa:	687b      	ldr	r3, [r7, #4]
 80020ac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80020ae:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80020b2:	f023 0301 	bic.w	r3, r3, #1
 80020b6:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80020ba:	687b      	ldr	r3, [r7, #4]
 80020bc:	64da      	str	r2, [r3, #76]	; 0x4c
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	685b      	ldr	r3, [r3, #4]
 80020c4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80020c8:	2b00      	cmp	r3, #0
 80020ca:	d007      	beq.n	80020dc <HAL_ADC_Start+0x64>
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80020d0:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80020d4:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 80020d8:	687b      	ldr	r3, [r7, #4]
 80020da:	64da      	str	r2, [r3, #76]	; 0x4c
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80020e0:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80020e4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80020e8:	d106      	bne.n	80020f8 <HAL_ADC_Start+0x80>
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80020ee:	f023 0206 	bic.w	r2, r3, #6
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	651a      	str	r2, [r3, #80]	; 0x50
 80020f6:	e002      	b.n	80020fe <HAL_ADC_Start+0x86>
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	2200      	movs	r2, #0
 80020fc:	651a      	str	r2, [r3, #80]	; 0x50
 80020fe:	687b      	ldr	r3, [r7, #4]
 8002100:	2200      	movs	r2, #0
 8002102:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	681b      	ldr	r3, [r3, #0]
 800210a:	f06f 0222 	mvn.w	r2, #34	; 0x22
 800210e:	601a      	str	r2, [r3, #0]
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	681b      	ldr	r3, [r3, #0]
 8002114:	689b      	ldr	r3, [r3, #8]
 8002116:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800211a:	2b00      	cmp	r3, #0
 800211c:	d107      	bne.n	800212e <HAL_ADC_Start+0xb6>
 800211e:	687b      	ldr	r3, [r7, #4]
 8002120:	681b      	ldr	r3, [r3, #0]
 8002122:	689a      	ldr	r2, [r3, #8]
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	681b      	ldr	r3, [r3, #0]
 8002128:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800212c:	609a      	str	r2, [r3, #8]
 800212e:	7bfb      	ldrb	r3, [r7, #15]
 8002130:	4618      	mov	r0, r3
 8002132:	3710      	adds	r7, #16
 8002134:	46bd      	mov	sp, r7
 8002136:	bd80      	pop	{r7, pc}

08002138 <HAL_ADC_Stop>:
 8002138:	b580      	push	{r7, lr}
 800213a:	b084      	sub	sp, #16
 800213c:	af00      	add	r7, sp, #0
 800213e:	6078      	str	r0, [r7, #4]
 8002140:	2300      	movs	r3, #0
 8002142:	73fb      	strb	r3, [r7, #15]
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800214a:	2b01      	cmp	r3, #1
 800214c:	d101      	bne.n	8002152 <HAL_ADC_Stop+0x1a>
 800214e:	2302      	movs	r3, #2
 8002150:	e01a      	b.n	8002188 <HAL_ADC_Stop+0x50>
 8002152:	687b      	ldr	r3, [r7, #4]
 8002154:	2201      	movs	r2, #1
 8002156:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800215a:	6878      	ldr	r0, [r7, #4]
 800215c:	f000 fada 	bl	8002714 <ADC_ConversionStop_Disable>
 8002160:	4603      	mov	r3, r0
 8002162:	73fb      	strb	r3, [r7, #15]
 8002164:	7bfb      	ldrb	r3, [r7, #15]
 8002166:	2b00      	cmp	r3, #0
 8002168:	d109      	bne.n	800217e <HAL_ADC_Stop+0x46>
 800216a:	687b      	ldr	r3, [r7, #4]
 800216c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800216e:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8002172:	f023 0301 	bic.w	r3, r3, #1
 8002176:	f043 0201 	orr.w	r2, r3, #1
 800217a:	687b      	ldr	r3, [r7, #4]
 800217c:	64da      	str	r2, [r3, #76]	; 0x4c
 800217e:	687b      	ldr	r3, [r7, #4]
 8002180:	2200      	movs	r2, #0
 8002182:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8002186:	7bfb      	ldrb	r3, [r7, #15]
 8002188:	4618      	mov	r0, r3
 800218a:	3710      	adds	r7, #16
 800218c:	46bd      	mov	sp, r7
 800218e:	bd80      	pop	{r7, pc}

08002190 <HAL_ADC_PollForConversion>:
 8002190:	b580      	push	{r7, lr}
 8002192:	b084      	sub	sp, #16
 8002194:	af00      	add	r7, sp, #0
 8002196:	6078      	str	r0, [r7, #4]
 8002198:	6039      	str	r1, [r7, #0]
 800219a:	2300      	movs	r3, #0
 800219c:	60fb      	str	r3, [r7, #12]
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	681b      	ldr	r3, [r3, #0]
 80021a2:	689b      	ldr	r3, [r3, #8]
 80021a4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80021a8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80021ac:	d113      	bne.n	80021d6 <HAL_ADC_PollForConversion+0x46>
 80021ae:	687b      	ldr	r3, [r7, #4]
 80021b0:	681b      	ldr	r3, [r3, #0]
 80021b2:	689b      	ldr	r3, [r3, #8]
 80021b4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80021b8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80021bc:	d10b      	bne.n	80021d6 <HAL_ADC_PollForConversion+0x46>
 80021be:	687b      	ldr	r3, [r7, #4]
 80021c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80021c2:	f043 0220 	orr.w	r2, r3, #32
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	64da      	str	r2, [r3, #76]	; 0x4c
 80021ca:	687b      	ldr	r3, [r7, #4]
 80021cc:	2200      	movs	r2, #0
 80021ce:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80021d2:	2301      	movs	r3, #1
 80021d4:	e068      	b.n	80022a8 <HAL_ADC_PollForConversion+0x118>
 80021d6:	f7ff fdcf 	bl	8001d78 <HAL_GetTick>
 80021da:	60f8      	str	r0, [r7, #12]
 80021dc:	e021      	b.n	8002222 <HAL_ADC_PollForConversion+0x92>
 80021de:	683b      	ldr	r3, [r7, #0]
 80021e0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80021e4:	d01d      	beq.n	8002222 <HAL_ADC_PollForConversion+0x92>
 80021e6:	683b      	ldr	r3, [r7, #0]
 80021e8:	2b00      	cmp	r3, #0
 80021ea:	d007      	beq.n	80021fc <HAL_ADC_PollForConversion+0x6c>
 80021ec:	f7ff fdc4 	bl	8001d78 <HAL_GetTick>
 80021f0:	4602      	mov	r2, r0
 80021f2:	68fb      	ldr	r3, [r7, #12]
 80021f4:	1ad3      	subs	r3, r2, r3
 80021f6:	683a      	ldr	r2, [r7, #0]
 80021f8:	429a      	cmp	r2, r3
 80021fa:	d212      	bcs.n	8002222 <HAL_ADC_PollForConversion+0x92>
 80021fc:	687b      	ldr	r3, [r7, #4]
 80021fe:	681b      	ldr	r3, [r3, #0]
 8002200:	681b      	ldr	r3, [r3, #0]
 8002202:	f003 0302 	and.w	r3, r3, #2
 8002206:	2b00      	cmp	r3, #0
 8002208:	d10b      	bne.n	8002222 <HAL_ADC_PollForConversion+0x92>
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800220e:	f043 0204 	orr.w	r2, r3, #4
 8002212:	687b      	ldr	r3, [r7, #4]
 8002214:	64da      	str	r2, [r3, #76]	; 0x4c
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	2200      	movs	r2, #0
 800221a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800221e:	2303      	movs	r3, #3
 8002220:	e042      	b.n	80022a8 <HAL_ADC_PollForConversion+0x118>
 8002222:	687b      	ldr	r3, [r7, #4]
 8002224:	681b      	ldr	r3, [r3, #0]
 8002226:	681b      	ldr	r3, [r3, #0]
 8002228:	f003 0302 	and.w	r3, r3, #2
 800222c:	2b00      	cmp	r3, #0
 800222e:	d0d6      	beq.n	80021de <HAL_ADC_PollForConversion+0x4e>
 8002230:	687b      	ldr	r3, [r7, #4]
 8002232:	699b      	ldr	r3, [r3, #24]
 8002234:	2b00      	cmp	r3, #0
 8002236:	d104      	bne.n	8002242 <HAL_ADC_PollForConversion+0xb2>
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	681b      	ldr	r3, [r3, #0]
 800223c:	f06f 0212 	mvn.w	r2, #18
 8002240:	601a      	str	r2, [r3, #0]
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002246:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 800224a:	687b      	ldr	r3, [r7, #4]
 800224c:	64da      	str	r2, [r3, #76]	; 0x4c
 800224e:	687b      	ldr	r3, [r7, #4]
 8002250:	681b      	ldr	r3, [r3, #0]
 8002252:	689b      	ldr	r3, [r3, #8]
 8002254:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8002258:	2b00      	cmp	r3, #0
 800225a:	d124      	bne.n	80022a6 <HAL_ADC_PollForConversion+0x116>
 800225c:	687b      	ldr	r3, [r7, #4]
 800225e:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8002262:	2b00      	cmp	r3, #0
 8002264:	d11f      	bne.n	80022a6 <HAL_ADC_PollForConversion+0x116>
 8002266:	687b      	ldr	r3, [r7, #4]
 8002268:	681b      	ldr	r3, [r3, #0]
 800226a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800226c:	f003 73f8 	and.w	r3, r3, #32505856	; 0x1f00000
 8002270:	2b00      	cmp	r3, #0
 8002272:	d006      	beq.n	8002282 <HAL_ADC_PollForConversion+0xf2>
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	681b      	ldr	r3, [r3, #0]
 8002278:	689b      	ldr	r3, [r3, #8]
 800227a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800227e:	2b00      	cmp	r3, #0
 8002280:	d111      	bne.n	80022a6 <HAL_ADC_PollForConversion+0x116>
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002286:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800228a:	687b      	ldr	r3, [r7, #4]
 800228c:	64da      	str	r2, [r3, #76]	; 0x4c
 800228e:	687b      	ldr	r3, [r7, #4]
 8002290:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002292:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002296:	2b00      	cmp	r3, #0
 8002298:	d105      	bne.n	80022a6 <HAL_ADC_PollForConversion+0x116>
 800229a:	687b      	ldr	r3, [r7, #4]
 800229c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800229e:	f043 0201 	orr.w	r2, r3, #1
 80022a2:	687b      	ldr	r3, [r7, #4]
 80022a4:	64da      	str	r2, [r3, #76]	; 0x4c
 80022a6:	2300      	movs	r3, #0
 80022a8:	4618      	mov	r0, r3
 80022aa:	3710      	adds	r7, #16
 80022ac:	46bd      	mov	sp, r7
 80022ae:	bd80      	pop	{r7, pc}

080022b0 <HAL_ADC_PollForEvent>:
 80022b0:	b580      	push	{r7, lr}
 80022b2:	b086      	sub	sp, #24
 80022b4:	af00      	add	r7, sp, #0
 80022b6:	60f8      	str	r0, [r7, #12]
 80022b8:	60b9      	str	r1, [r7, #8]
 80022ba:	607a      	str	r2, [r7, #4]
 80022bc:	2300      	movs	r3, #0
 80022be:	617b      	str	r3, [r7, #20]
 80022c0:	f7ff fd5a 	bl	8001d78 <HAL_GetTick>
 80022c4:	6178      	str	r0, [r7, #20]
 80022c6:	e022      	b.n	800230e <HAL_ADC_PollForEvent+0x5e>
 80022c8:	687b      	ldr	r3, [r7, #4]
 80022ca:	f1b3 3fff 	cmp.w	r3, #4294967295
 80022ce:	d01e      	beq.n	800230e <HAL_ADC_PollForEvent+0x5e>
 80022d0:	687b      	ldr	r3, [r7, #4]
 80022d2:	2b00      	cmp	r3, #0
 80022d4:	d007      	beq.n	80022e6 <HAL_ADC_PollForEvent+0x36>
 80022d6:	f7ff fd4f 	bl	8001d78 <HAL_GetTick>
 80022da:	4602      	mov	r2, r0
 80022dc:	697b      	ldr	r3, [r7, #20]
 80022de:	1ad3      	subs	r3, r2, r3
 80022e0:	687a      	ldr	r2, [r7, #4]
 80022e2:	429a      	cmp	r2, r3
 80022e4:	d213      	bcs.n	800230e <HAL_ADC_PollForEvent+0x5e>
 80022e6:	68fb      	ldr	r3, [r7, #12]
 80022e8:	681b      	ldr	r3, [r3, #0]
 80022ea:	681a      	ldr	r2, [r3, #0]
 80022ec:	68bb      	ldr	r3, [r7, #8]
 80022ee:	4013      	ands	r3, r2
 80022f0:	68ba      	ldr	r2, [r7, #8]
 80022f2:	429a      	cmp	r2, r3
 80022f4:	d00b      	beq.n	800230e <HAL_ADC_PollForEvent+0x5e>
 80022f6:	68fb      	ldr	r3, [r7, #12]
 80022f8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80022fa:	f043 0204 	orr.w	r2, r3, #4
 80022fe:	68fb      	ldr	r3, [r7, #12]
 8002300:	64da      	str	r2, [r3, #76]	; 0x4c
 8002302:	68fb      	ldr	r3, [r7, #12]
 8002304:	2200      	movs	r2, #0
 8002306:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800230a:	2303      	movs	r3, #3
 800230c:	e029      	b.n	8002362 <HAL_ADC_PollForEvent+0xb2>
 800230e:	68fb      	ldr	r3, [r7, #12]
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	681a      	ldr	r2, [r3, #0]
 8002314:	68bb      	ldr	r3, [r7, #8]
 8002316:	4013      	ands	r3, r2
 8002318:	68ba      	ldr	r2, [r7, #8]
 800231a:	429a      	cmp	r2, r3
 800231c:	d1d4      	bne.n	80022c8 <HAL_ADC_PollForEvent+0x18>
 800231e:	68bb      	ldr	r3, [r7, #8]
 8002320:	2b01      	cmp	r3, #1
 8002322:	d10b      	bne.n	800233c <HAL_ADC_PollForEvent+0x8c>
 8002324:	68fb      	ldr	r3, [r7, #12]
 8002326:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002328:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 800232c:	68fb      	ldr	r3, [r7, #12]
 800232e:	64da      	str	r2, [r3, #76]	; 0x4c
 8002330:	68fb      	ldr	r3, [r7, #12]
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	f06f 0201 	mvn.w	r2, #1
 8002338:	601a      	str	r2, [r3, #0]
 800233a:	e011      	b.n	8002360 <HAL_ADC_PollForEvent+0xb0>
 800233c:	68fb      	ldr	r3, [r7, #12]
 800233e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002340:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8002344:	68fb      	ldr	r3, [r7, #12]
 8002346:	64da      	str	r2, [r3, #76]	; 0x4c
 8002348:	68fb      	ldr	r3, [r7, #12]
 800234a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800234c:	f043 0202 	orr.w	r2, r3, #2
 8002350:	68fb      	ldr	r3, [r7, #12]
 8002352:	651a      	str	r2, [r3, #80]	; 0x50
 8002354:	68fb      	ldr	r3, [r7, #12]
 8002356:	681b      	ldr	r3, [r3, #0]
 8002358:	f06f 0220 	mvn.w	r2, #32
 800235c:	601a      	str	r2, [r3, #0]
 800235e:	bf00      	nop
 8002360:	2300      	movs	r3, #0
 8002362:	4618      	mov	r0, r3
 8002364:	3718      	adds	r7, #24
 8002366:	46bd      	mov	sp, r7
 8002368:	bd80      	pop	{r7, pc}

0800236a <HAL_ADC_GetValue>:
 800236a:	b480      	push	{r7}
 800236c:	b083      	sub	sp, #12
 800236e:	af00      	add	r7, sp, #0
 8002370:	6078      	str	r0, [r7, #4]
 8002372:	687b      	ldr	r3, [r7, #4]
 8002374:	681b      	ldr	r3, [r3, #0]
 8002376:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002378:	4618      	mov	r0, r3
 800237a:	370c      	adds	r7, #12
 800237c:	46bd      	mov	sp, r7
 800237e:	bc80      	pop	{r7}
 8002380:	4770      	bx	lr
	...

08002384 <HAL_ADC_ConfigChannel>:
 8002384:	b480      	push	{r7}
 8002386:	b085      	sub	sp, #20
 8002388:	af00      	add	r7, sp, #0
 800238a:	6078      	str	r0, [r7, #4]
 800238c:	6039      	str	r1, [r7, #0]
 800238e:	2300      	movs	r3, #0
 8002390:	73fb      	strb	r3, [r7, #15]
 8002392:	2300      	movs	r3, #0
 8002394:	60bb      	str	r3, [r7, #8]
 8002396:	687b      	ldr	r3, [r7, #4]
 8002398:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800239c:	2b01      	cmp	r3, #1
 800239e:	d101      	bne.n	80023a4 <HAL_ADC_ConfigChannel+0x20>
 80023a0:	2302      	movs	r3, #2
 80023a2:	e14f      	b.n	8002644 <HAL_ADC_ConfigChannel+0x2c0>
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	2201      	movs	r2, #1
 80023a8:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80023ac:	683b      	ldr	r3, [r7, #0]
 80023ae:	685b      	ldr	r3, [r3, #4]
 80023b0:	2b06      	cmp	r3, #6
 80023b2:	d81c      	bhi.n	80023ee <HAL_ADC_ConfigChannel+0x6a>
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	681b      	ldr	r3, [r3, #0]
 80023b8:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80023ba:	683b      	ldr	r3, [r7, #0]
 80023bc:	685a      	ldr	r2, [r3, #4]
 80023be:	4613      	mov	r3, r2
 80023c0:	009b      	lsls	r3, r3, #2
 80023c2:	4413      	add	r3, r2
 80023c4:	3b05      	subs	r3, #5
 80023c6:	221f      	movs	r2, #31
 80023c8:	fa02 f303 	lsl.w	r3, r2, r3
 80023cc:	43db      	mvns	r3, r3
 80023ce:	4019      	ands	r1, r3
 80023d0:	683b      	ldr	r3, [r7, #0]
 80023d2:	6818      	ldr	r0, [r3, #0]
 80023d4:	683b      	ldr	r3, [r7, #0]
 80023d6:	685a      	ldr	r2, [r3, #4]
 80023d8:	4613      	mov	r3, r2
 80023da:	009b      	lsls	r3, r3, #2
 80023dc:	4413      	add	r3, r2
 80023de:	3b05      	subs	r3, #5
 80023e0:	fa00 f203 	lsl.w	r2, r0, r3
 80023e4:	687b      	ldr	r3, [r7, #4]
 80023e6:	681b      	ldr	r3, [r3, #0]
 80023e8:	430a      	orrs	r2, r1
 80023ea:	641a      	str	r2, [r3, #64]	; 0x40
 80023ec:	e07e      	b.n	80024ec <HAL_ADC_ConfigChannel+0x168>
 80023ee:	683b      	ldr	r3, [r7, #0]
 80023f0:	685b      	ldr	r3, [r3, #4]
 80023f2:	2b0c      	cmp	r3, #12
 80023f4:	d81c      	bhi.n	8002430 <HAL_ADC_ConfigChannel+0xac>
 80023f6:	687b      	ldr	r3, [r7, #4]
 80023f8:	681b      	ldr	r3, [r3, #0]
 80023fa:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80023fc:	683b      	ldr	r3, [r7, #0]
 80023fe:	685a      	ldr	r2, [r3, #4]
 8002400:	4613      	mov	r3, r2
 8002402:	009b      	lsls	r3, r3, #2
 8002404:	4413      	add	r3, r2
 8002406:	3b23      	subs	r3, #35	; 0x23
 8002408:	221f      	movs	r2, #31
 800240a:	fa02 f303 	lsl.w	r3, r2, r3
 800240e:	43db      	mvns	r3, r3
 8002410:	4019      	ands	r1, r3
 8002412:	683b      	ldr	r3, [r7, #0]
 8002414:	6818      	ldr	r0, [r3, #0]
 8002416:	683b      	ldr	r3, [r7, #0]
 8002418:	685a      	ldr	r2, [r3, #4]
 800241a:	4613      	mov	r3, r2
 800241c:	009b      	lsls	r3, r3, #2
 800241e:	4413      	add	r3, r2
 8002420:	3b23      	subs	r3, #35	; 0x23
 8002422:	fa00 f203 	lsl.w	r2, r0, r3
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	681b      	ldr	r3, [r3, #0]
 800242a:	430a      	orrs	r2, r1
 800242c:	63da      	str	r2, [r3, #60]	; 0x3c
 800242e:	e05d      	b.n	80024ec <HAL_ADC_ConfigChannel+0x168>
 8002430:	683b      	ldr	r3, [r7, #0]
 8002432:	685b      	ldr	r3, [r3, #4]
 8002434:	2b12      	cmp	r3, #18
 8002436:	d81c      	bhi.n	8002472 <HAL_ADC_ConfigChannel+0xee>
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	6b99      	ldr	r1, [r3, #56]	; 0x38
 800243e:	683b      	ldr	r3, [r7, #0]
 8002440:	685a      	ldr	r2, [r3, #4]
 8002442:	4613      	mov	r3, r2
 8002444:	009b      	lsls	r3, r3, #2
 8002446:	4413      	add	r3, r2
 8002448:	3b41      	subs	r3, #65	; 0x41
 800244a:	221f      	movs	r2, #31
 800244c:	fa02 f303 	lsl.w	r3, r2, r3
 8002450:	43db      	mvns	r3, r3
 8002452:	4019      	ands	r1, r3
 8002454:	683b      	ldr	r3, [r7, #0]
 8002456:	6818      	ldr	r0, [r3, #0]
 8002458:	683b      	ldr	r3, [r7, #0]
 800245a:	685a      	ldr	r2, [r3, #4]
 800245c:	4613      	mov	r3, r2
 800245e:	009b      	lsls	r3, r3, #2
 8002460:	4413      	add	r3, r2
 8002462:	3b41      	subs	r3, #65	; 0x41
 8002464:	fa00 f203 	lsl.w	r2, r0, r3
 8002468:	687b      	ldr	r3, [r7, #4]
 800246a:	681b      	ldr	r3, [r3, #0]
 800246c:	430a      	orrs	r2, r1
 800246e:	639a      	str	r2, [r3, #56]	; 0x38
 8002470:	e03c      	b.n	80024ec <HAL_ADC_ConfigChannel+0x168>
 8002472:	683b      	ldr	r3, [r7, #0]
 8002474:	685b      	ldr	r3, [r3, #4]
 8002476:	2b18      	cmp	r3, #24
 8002478:	d81c      	bhi.n	80024b4 <HAL_ADC_ConfigChannel+0x130>
 800247a:	687b      	ldr	r3, [r7, #4]
 800247c:	681b      	ldr	r3, [r3, #0]
 800247e:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8002480:	683b      	ldr	r3, [r7, #0]
 8002482:	685a      	ldr	r2, [r3, #4]
 8002484:	4613      	mov	r3, r2
 8002486:	009b      	lsls	r3, r3, #2
 8002488:	4413      	add	r3, r2
 800248a:	3b5f      	subs	r3, #95	; 0x5f
 800248c:	221f      	movs	r2, #31
 800248e:	fa02 f303 	lsl.w	r3, r2, r3
 8002492:	43db      	mvns	r3, r3
 8002494:	4019      	ands	r1, r3
 8002496:	683b      	ldr	r3, [r7, #0]
 8002498:	6818      	ldr	r0, [r3, #0]
 800249a:	683b      	ldr	r3, [r7, #0]
 800249c:	685a      	ldr	r2, [r3, #4]
 800249e:	4613      	mov	r3, r2
 80024a0:	009b      	lsls	r3, r3, #2
 80024a2:	4413      	add	r3, r2
 80024a4:	3b5f      	subs	r3, #95	; 0x5f
 80024a6:	fa00 f203 	lsl.w	r2, r0, r3
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	430a      	orrs	r2, r1
 80024b0:	635a      	str	r2, [r3, #52]	; 0x34
 80024b2:	e01b      	b.n	80024ec <HAL_ADC_ConfigChannel+0x168>
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	681b      	ldr	r3, [r3, #0]
 80024b8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80024ba:	683b      	ldr	r3, [r7, #0]
 80024bc:	685a      	ldr	r2, [r3, #4]
 80024be:	4613      	mov	r3, r2
 80024c0:	009b      	lsls	r3, r3, #2
 80024c2:	4413      	add	r3, r2
 80024c4:	3b7d      	subs	r3, #125	; 0x7d
 80024c6:	221f      	movs	r2, #31
 80024c8:	fa02 f303 	lsl.w	r3, r2, r3
 80024cc:	43db      	mvns	r3, r3
 80024ce:	4019      	ands	r1, r3
 80024d0:	683b      	ldr	r3, [r7, #0]
 80024d2:	6818      	ldr	r0, [r3, #0]
 80024d4:	683b      	ldr	r3, [r7, #0]
 80024d6:	685a      	ldr	r2, [r3, #4]
 80024d8:	4613      	mov	r3, r2
 80024da:	009b      	lsls	r3, r3, #2
 80024dc:	4413      	add	r3, r2
 80024de:	3b7d      	subs	r3, #125	; 0x7d
 80024e0:	fa00 f203 	lsl.w	r2, r0, r3
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	681b      	ldr	r3, [r3, #0]
 80024e8:	430a      	orrs	r2, r1
 80024ea:	631a      	str	r2, [r3, #48]	; 0x30
 80024ec:	683b      	ldr	r3, [r7, #0]
 80024ee:	681b      	ldr	r3, [r3, #0]
 80024f0:	2b09      	cmp	r3, #9
 80024f2:	d81a      	bhi.n	800252a <HAL_ADC_ConfigChannel+0x1a6>
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	6959      	ldr	r1, [r3, #20]
 80024fa:	683b      	ldr	r3, [r7, #0]
 80024fc:	681a      	ldr	r2, [r3, #0]
 80024fe:	4613      	mov	r3, r2
 8002500:	005b      	lsls	r3, r3, #1
 8002502:	4413      	add	r3, r2
 8002504:	2207      	movs	r2, #7
 8002506:	fa02 f303 	lsl.w	r3, r2, r3
 800250a:	43db      	mvns	r3, r3
 800250c:	4019      	ands	r1, r3
 800250e:	683b      	ldr	r3, [r7, #0]
 8002510:	6898      	ldr	r0, [r3, #8]
 8002512:	683b      	ldr	r3, [r7, #0]
 8002514:	681a      	ldr	r2, [r3, #0]
 8002516:	4613      	mov	r3, r2
 8002518:	005b      	lsls	r3, r3, #1
 800251a:	4413      	add	r3, r2
 800251c:	fa00 f203 	lsl.w	r2, r0, r3
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	681b      	ldr	r3, [r3, #0]
 8002524:	430a      	orrs	r2, r1
 8002526:	615a      	str	r2, [r3, #20]
 8002528:	e05d      	b.n	80025e6 <HAL_ADC_ConfigChannel+0x262>
 800252a:	683b      	ldr	r3, [r7, #0]
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	2b13      	cmp	r3, #19
 8002530:	d81c      	bhi.n	800256c <HAL_ADC_ConfigChannel+0x1e8>
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	6919      	ldr	r1, [r3, #16]
 8002538:	683b      	ldr	r3, [r7, #0]
 800253a:	681a      	ldr	r2, [r3, #0]
 800253c:	4613      	mov	r3, r2
 800253e:	005b      	lsls	r3, r3, #1
 8002540:	4413      	add	r3, r2
 8002542:	3b1e      	subs	r3, #30
 8002544:	2207      	movs	r2, #7
 8002546:	fa02 f303 	lsl.w	r3, r2, r3
 800254a:	43db      	mvns	r3, r3
 800254c:	4019      	ands	r1, r3
 800254e:	683b      	ldr	r3, [r7, #0]
 8002550:	6898      	ldr	r0, [r3, #8]
 8002552:	683b      	ldr	r3, [r7, #0]
 8002554:	681a      	ldr	r2, [r3, #0]
 8002556:	4613      	mov	r3, r2
 8002558:	005b      	lsls	r3, r3, #1
 800255a:	4413      	add	r3, r2
 800255c:	3b1e      	subs	r3, #30
 800255e:	fa00 f203 	lsl.w	r2, r0, r3
 8002562:	687b      	ldr	r3, [r7, #4]
 8002564:	681b      	ldr	r3, [r3, #0]
 8002566:	430a      	orrs	r2, r1
 8002568:	611a      	str	r2, [r3, #16]
 800256a:	e03c      	b.n	80025e6 <HAL_ADC_ConfigChannel+0x262>
 800256c:	683b      	ldr	r3, [r7, #0]
 800256e:	681b      	ldr	r3, [r3, #0]
 8002570:	2b1d      	cmp	r3, #29
 8002572:	d81c      	bhi.n	80025ae <HAL_ADC_ConfigChannel+0x22a>
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	68d9      	ldr	r1, [r3, #12]
 800257a:	683b      	ldr	r3, [r7, #0]
 800257c:	681a      	ldr	r2, [r3, #0]
 800257e:	4613      	mov	r3, r2
 8002580:	005b      	lsls	r3, r3, #1
 8002582:	4413      	add	r3, r2
 8002584:	3b3c      	subs	r3, #60	; 0x3c
 8002586:	2207      	movs	r2, #7
 8002588:	fa02 f303 	lsl.w	r3, r2, r3
 800258c:	43db      	mvns	r3, r3
 800258e:	4019      	ands	r1, r3
 8002590:	683b      	ldr	r3, [r7, #0]
 8002592:	6898      	ldr	r0, [r3, #8]
 8002594:	683b      	ldr	r3, [r7, #0]
 8002596:	681a      	ldr	r2, [r3, #0]
 8002598:	4613      	mov	r3, r2
 800259a:	005b      	lsls	r3, r3, #1
 800259c:	4413      	add	r3, r2
 800259e:	3b3c      	subs	r3, #60	; 0x3c
 80025a0:	fa00 f203 	lsl.w	r2, r0, r3
 80025a4:	687b      	ldr	r3, [r7, #4]
 80025a6:	681b      	ldr	r3, [r3, #0]
 80025a8:	430a      	orrs	r2, r1
 80025aa:	60da      	str	r2, [r3, #12]
 80025ac:	e01b      	b.n	80025e6 <HAL_ADC_ConfigChannel+0x262>
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	681b      	ldr	r3, [r3, #0]
 80025b2:	6dd9      	ldr	r1, [r3, #92]	; 0x5c
 80025b4:	683b      	ldr	r3, [r7, #0]
 80025b6:	681a      	ldr	r2, [r3, #0]
 80025b8:	4613      	mov	r3, r2
 80025ba:	005b      	lsls	r3, r3, #1
 80025bc:	4413      	add	r3, r2
 80025be:	3b5a      	subs	r3, #90	; 0x5a
 80025c0:	2207      	movs	r2, #7
 80025c2:	fa02 f303 	lsl.w	r3, r2, r3
 80025c6:	43db      	mvns	r3, r3
 80025c8:	4019      	ands	r1, r3
 80025ca:	683b      	ldr	r3, [r7, #0]
 80025cc:	6898      	ldr	r0, [r3, #8]
 80025ce:	683b      	ldr	r3, [r7, #0]
 80025d0:	681a      	ldr	r2, [r3, #0]
 80025d2:	4613      	mov	r3, r2
 80025d4:	005b      	lsls	r3, r3, #1
 80025d6:	4413      	add	r3, r2
 80025d8:	3b5a      	subs	r3, #90	; 0x5a
 80025da:	fa00 f203 	lsl.w	r2, r0, r3
 80025de:	687b      	ldr	r3, [r7, #4]
 80025e0:	681b      	ldr	r3, [r3, #0]
 80025e2:	430a      	orrs	r2, r1
 80025e4:	65da      	str	r2, [r3, #92]	; 0x5c
 80025e6:	683b      	ldr	r3, [r7, #0]
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	2b10      	cmp	r3, #16
 80025ec:	d003      	beq.n	80025f6 <HAL_ADC_ConfigChannel+0x272>
 80025ee:	683b      	ldr	r3, [r7, #0]
 80025f0:	681b      	ldr	r3, [r3, #0]
 80025f2:	2b11      	cmp	r3, #17
 80025f4:	d121      	bne.n	800263a <HAL_ADC_ConfigChannel+0x2b6>
 80025f6:	4b16      	ldr	r3, [pc, #88]	; (8002650 <HAL_ADC_ConfigChannel+0x2cc>)
 80025f8:	685b      	ldr	r3, [r3, #4]
 80025fa:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80025fe:	2b00      	cmp	r3, #0
 8002600:	d11b      	bne.n	800263a <HAL_ADC_ConfigChannel+0x2b6>
 8002602:	4b13      	ldr	r3, [pc, #76]	; (8002650 <HAL_ADC_ConfigChannel+0x2cc>)
 8002604:	685b      	ldr	r3, [r3, #4]
 8002606:	4a12      	ldr	r2, [pc, #72]	; (8002650 <HAL_ADC_ConfigChannel+0x2cc>)
 8002608:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800260c:	6053      	str	r3, [r2, #4]
 800260e:	683b      	ldr	r3, [r7, #0]
 8002610:	681b      	ldr	r3, [r3, #0]
 8002612:	2b10      	cmp	r3, #16
 8002614:	d111      	bne.n	800263a <HAL_ADC_ConfigChannel+0x2b6>
 8002616:	4b0f      	ldr	r3, [pc, #60]	; (8002654 <HAL_ADC_ConfigChannel+0x2d0>)
 8002618:	681b      	ldr	r3, [r3, #0]
 800261a:	4a0f      	ldr	r2, [pc, #60]	; (8002658 <HAL_ADC_ConfigChannel+0x2d4>)
 800261c:	fba2 2303 	umull	r2, r3, r2, r3
 8002620:	0c9a      	lsrs	r2, r3, #18
 8002622:	4613      	mov	r3, r2
 8002624:	009b      	lsls	r3, r3, #2
 8002626:	4413      	add	r3, r2
 8002628:	005b      	lsls	r3, r3, #1
 800262a:	60bb      	str	r3, [r7, #8]
 800262c:	e002      	b.n	8002634 <HAL_ADC_ConfigChannel+0x2b0>
 800262e:	68bb      	ldr	r3, [r7, #8]
 8002630:	3b01      	subs	r3, #1
 8002632:	60bb      	str	r3, [r7, #8]
 8002634:	68bb      	ldr	r3, [r7, #8]
 8002636:	2b00      	cmp	r3, #0
 8002638:	d1f9      	bne.n	800262e <HAL_ADC_ConfigChannel+0x2aa>
 800263a:	687b      	ldr	r3, [r7, #4]
 800263c:	2200      	movs	r2, #0
 800263e:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8002642:	7bfb      	ldrb	r3, [r7, #15]
 8002644:	4618      	mov	r0, r3
 8002646:	3714      	adds	r7, #20
 8002648:	46bd      	mov	sp, r7
 800264a:	bc80      	pop	{r7}
 800264c:	4770      	bx	lr
 800264e:	bf00      	nop
 8002650:	40012700 	.word	0x40012700
 8002654:	20000030 	.word	0x20000030
 8002658:	431bde83 	.word	0x431bde83

0800265c <ADC_Enable>:
 800265c:	b580      	push	{r7, lr}
 800265e:	b084      	sub	sp, #16
 8002660:	af00      	add	r7, sp, #0
 8002662:	6078      	str	r0, [r7, #4]
 8002664:	2300      	movs	r3, #0
 8002666:	60fb      	str	r3, [r7, #12]
 8002668:	2300      	movs	r3, #0
 800266a:	60bb      	str	r3, [r7, #8]
 800266c:	687b      	ldr	r3, [r7, #4]
 800266e:	681b      	ldr	r3, [r3, #0]
 8002670:	681b      	ldr	r3, [r3, #0]
 8002672:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002676:	2b40      	cmp	r3, #64	; 0x40
 8002678:	d043      	beq.n	8002702 <ADC_Enable+0xa6>
 800267a:	687b      	ldr	r3, [r7, #4]
 800267c:	681b      	ldr	r3, [r3, #0]
 800267e:	689a      	ldr	r2, [r3, #8]
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	681b      	ldr	r3, [r3, #0]
 8002684:	f042 0201 	orr.w	r2, r2, #1
 8002688:	609a      	str	r2, [r3, #8]
 800268a:	4b20      	ldr	r3, [pc, #128]	; (800270c <ADC_Enable+0xb0>)
 800268c:	681b      	ldr	r3, [r3, #0]
 800268e:	4a20      	ldr	r2, [pc, #128]	; (8002710 <ADC_Enable+0xb4>)
 8002690:	fba2 2303 	umull	r2, r3, r2, r3
 8002694:	0c9a      	lsrs	r2, r3, #18
 8002696:	4613      	mov	r3, r2
 8002698:	005b      	lsls	r3, r3, #1
 800269a:	4413      	add	r3, r2
 800269c:	60bb      	str	r3, [r7, #8]
 800269e:	e002      	b.n	80026a6 <ADC_Enable+0x4a>
 80026a0:	68bb      	ldr	r3, [r7, #8]
 80026a2:	3b01      	subs	r3, #1
 80026a4:	60bb      	str	r3, [r7, #8]
 80026a6:	68bb      	ldr	r3, [r7, #8]
 80026a8:	2b00      	cmp	r3, #0
 80026aa:	d1f9      	bne.n	80026a0 <ADC_Enable+0x44>
 80026ac:	f7ff fb64 	bl	8001d78 <HAL_GetTick>
 80026b0:	60f8      	str	r0, [r7, #12]
 80026b2:	e01f      	b.n	80026f4 <ADC_Enable+0x98>
 80026b4:	f7ff fb60 	bl	8001d78 <HAL_GetTick>
 80026b8:	4602      	mov	r2, r0
 80026ba:	68fb      	ldr	r3, [r7, #12]
 80026bc:	1ad3      	subs	r3, r2, r3
 80026be:	2b02      	cmp	r3, #2
 80026c0:	d918      	bls.n	80026f4 <ADC_Enable+0x98>
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	681b      	ldr	r3, [r3, #0]
 80026c6:	681b      	ldr	r3, [r3, #0]
 80026c8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80026cc:	2b40      	cmp	r3, #64	; 0x40
 80026ce:	d011      	beq.n	80026f4 <ADC_Enable+0x98>
 80026d0:	687b      	ldr	r3, [r7, #4]
 80026d2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80026d4:	f043 0210 	orr.w	r2, r3, #16
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	64da      	str	r2, [r3, #76]	; 0x4c
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80026e0:	f043 0201 	orr.w	r2, r3, #1
 80026e4:	687b      	ldr	r3, [r7, #4]
 80026e6:	651a      	str	r2, [r3, #80]	; 0x50
 80026e8:	687b      	ldr	r3, [r7, #4]
 80026ea:	2200      	movs	r2, #0
 80026ec:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80026f0:	2301      	movs	r3, #1
 80026f2:	e007      	b.n	8002704 <ADC_Enable+0xa8>
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	681b      	ldr	r3, [r3, #0]
 80026f8:	681b      	ldr	r3, [r3, #0]
 80026fa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80026fe:	2b40      	cmp	r3, #64	; 0x40
 8002700:	d1d8      	bne.n	80026b4 <ADC_Enable+0x58>
 8002702:	2300      	movs	r3, #0
 8002704:	4618      	mov	r0, r3
 8002706:	3710      	adds	r7, #16
 8002708:	46bd      	mov	sp, r7
 800270a:	bd80      	pop	{r7, pc}
 800270c:	20000030 	.word	0x20000030
 8002710:	431bde83 	.word	0x431bde83

08002714 <ADC_ConversionStop_Disable>:
 8002714:	b580      	push	{r7, lr}
 8002716:	b084      	sub	sp, #16
 8002718:	af00      	add	r7, sp, #0
 800271a:	6078      	str	r0, [r7, #4]
 800271c:	2300      	movs	r3, #0
 800271e:	60fb      	str	r3, [r7, #12]
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	681b      	ldr	r3, [r3, #0]
 8002724:	681b      	ldr	r3, [r3, #0]
 8002726:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800272a:	2b40      	cmp	r3, #64	; 0x40
 800272c:	d12e      	bne.n	800278c <ADC_ConversionStop_Disable+0x78>
 800272e:	687b      	ldr	r3, [r7, #4]
 8002730:	681b      	ldr	r3, [r3, #0]
 8002732:	689a      	ldr	r2, [r3, #8]
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	f022 0201 	bic.w	r2, r2, #1
 800273c:	609a      	str	r2, [r3, #8]
 800273e:	f7ff fb1b 	bl	8001d78 <HAL_GetTick>
 8002742:	60f8      	str	r0, [r7, #12]
 8002744:	e01b      	b.n	800277e <ADC_ConversionStop_Disable+0x6a>
 8002746:	f7ff fb17 	bl	8001d78 <HAL_GetTick>
 800274a:	4602      	mov	r2, r0
 800274c:	68fb      	ldr	r3, [r7, #12]
 800274e:	1ad3      	subs	r3, r2, r3
 8002750:	2b02      	cmp	r3, #2
 8002752:	d914      	bls.n	800277e <ADC_ConversionStop_Disable+0x6a>
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	681b      	ldr	r3, [r3, #0]
 8002758:	681b      	ldr	r3, [r3, #0]
 800275a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800275e:	2b40      	cmp	r3, #64	; 0x40
 8002760:	d10d      	bne.n	800277e <ADC_ConversionStop_Disable+0x6a>
 8002762:	687b      	ldr	r3, [r7, #4]
 8002764:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002766:	f043 0210 	orr.w	r2, r3, #16
 800276a:	687b      	ldr	r3, [r7, #4]
 800276c:	64da      	str	r2, [r3, #76]	; 0x4c
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002772:	f043 0201 	orr.w	r2, r3, #1
 8002776:	687b      	ldr	r3, [r7, #4]
 8002778:	651a      	str	r2, [r3, #80]	; 0x50
 800277a:	2301      	movs	r3, #1
 800277c:	e007      	b.n	800278e <ADC_ConversionStop_Disable+0x7a>
 800277e:	687b      	ldr	r3, [r7, #4]
 8002780:	681b      	ldr	r3, [r3, #0]
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002788:	2b40      	cmp	r3, #64	; 0x40
 800278a:	d0dc      	beq.n	8002746 <ADC_ConversionStop_Disable+0x32>
 800278c:	2300      	movs	r3, #0
 800278e:	4618      	mov	r0, r3
 8002790:	3710      	adds	r7, #16
 8002792:	46bd      	mov	sp, r7
 8002794:	bd80      	pop	{r7, pc}
	...

08002798 <__NVIC_SetPriorityGrouping>:
 8002798:	b480      	push	{r7}
 800279a:	b085      	sub	sp, #20
 800279c:	af00      	add	r7, sp, #0
 800279e:	6078      	str	r0, [r7, #4]
 80027a0:	687b      	ldr	r3, [r7, #4]
 80027a2:	f003 0307 	and.w	r3, r3, #7
 80027a6:	60fb      	str	r3, [r7, #12]
 80027a8:	4b0c      	ldr	r3, [pc, #48]	; (80027dc <__NVIC_SetPriorityGrouping+0x44>)
 80027aa:	68db      	ldr	r3, [r3, #12]
 80027ac:	60bb      	str	r3, [r7, #8]
 80027ae:	68ba      	ldr	r2, [r7, #8]
 80027b0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80027b4:	4013      	ands	r3, r2
 80027b6:	60bb      	str	r3, [r7, #8]
 80027b8:	68fb      	ldr	r3, [r7, #12]
 80027ba:	021a      	lsls	r2, r3, #8
 80027bc:	68bb      	ldr	r3, [r7, #8]
 80027be:	4313      	orrs	r3, r2
 80027c0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80027c4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80027c8:	60bb      	str	r3, [r7, #8]
 80027ca:	4a04      	ldr	r2, [pc, #16]	; (80027dc <__NVIC_SetPriorityGrouping+0x44>)
 80027cc:	68bb      	ldr	r3, [r7, #8]
 80027ce:	60d3      	str	r3, [r2, #12]
 80027d0:	bf00      	nop
 80027d2:	3714      	adds	r7, #20
 80027d4:	46bd      	mov	sp, r7
 80027d6:	bc80      	pop	{r7}
 80027d8:	4770      	bx	lr
 80027da:	bf00      	nop
 80027dc:	e000ed00 	.word	0xe000ed00

080027e0 <__NVIC_GetPriorityGrouping>:
 80027e0:	b480      	push	{r7}
 80027e2:	af00      	add	r7, sp, #0
 80027e4:	4b04      	ldr	r3, [pc, #16]	; (80027f8 <__NVIC_GetPriorityGrouping+0x18>)
 80027e6:	68db      	ldr	r3, [r3, #12]
 80027e8:	0a1b      	lsrs	r3, r3, #8
 80027ea:	f003 0307 	and.w	r3, r3, #7
 80027ee:	4618      	mov	r0, r3
 80027f0:	46bd      	mov	sp, r7
 80027f2:	bc80      	pop	{r7}
 80027f4:	4770      	bx	lr
 80027f6:	bf00      	nop
 80027f8:	e000ed00 	.word	0xe000ed00

080027fc <__NVIC_EnableIRQ>:
 80027fc:	b480      	push	{r7}
 80027fe:	b083      	sub	sp, #12
 8002800:	af00      	add	r7, sp, #0
 8002802:	4603      	mov	r3, r0
 8002804:	71fb      	strb	r3, [r7, #7]
 8002806:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800280a:	2b00      	cmp	r3, #0
 800280c:	db0b      	blt.n	8002826 <__NVIC_EnableIRQ+0x2a>
 800280e:	79fb      	ldrb	r3, [r7, #7]
 8002810:	f003 021f 	and.w	r2, r3, #31
 8002814:	4906      	ldr	r1, [pc, #24]	; (8002830 <__NVIC_EnableIRQ+0x34>)
 8002816:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800281a:	095b      	lsrs	r3, r3, #5
 800281c:	2001      	movs	r0, #1
 800281e:	fa00 f202 	lsl.w	r2, r0, r2
 8002822:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002826:	bf00      	nop
 8002828:	370c      	adds	r7, #12
 800282a:	46bd      	mov	sp, r7
 800282c:	bc80      	pop	{r7}
 800282e:	4770      	bx	lr
 8002830:	e000e100 	.word	0xe000e100

08002834 <__NVIC_SetPriority>:
 8002834:	b480      	push	{r7}
 8002836:	b083      	sub	sp, #12
 8002838:	af00      	add	r7, sp, #0
 800283a:	4603      	mov	r3, r0
 800283c:	6039      	str	r1, [r7, #0]
 800283e:	71fb      	strb	r3, [r7, #7]
 8002840:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002844:	2b00      	cmp	r3, #0
 8002846:	db0a      	blt.n	800285e <__NVIC_SetPriority+0x2a>
 8002848:	683b      	ldr	r3, [r7, #0]
 800284a:	b2da      	uxtb	r2, r3
 800284c:	490c      	ldr	r1, [pc, #48]	; (8002880 <__NVIC_SetPriority+0x4c>)
 800284e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002852:	0112      	lsls	r2, r2, #4
 8002854:	b2d2      	uxtb	r2, r2
 8002856:	440b      	add	r3, r1
 8002858:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800285c:	e00a      	b.n	8002874 <__NVIC_SetPriority+0x40>
 800285e:	683b      	ldr	r3, [r7, #0]
 8002860:	b2da      	uxtb	r2, r3
 8002862:	4908      	ldr	r1, [pc, #32]	; (8002884 <__NVIC_SetPriority+0x50>)
 8002864:	79fb      	ldrb	r3, [r7, #7]
 8002866:	f003 030f 	and.w	r3, r3, #15
 800286a:	3b04      	subs	r3, #4
 800286c:	0112      	lsls	r2, r2, #4
 800286e:	b2d2      	uxtb	r2, r2
 8002870:	440b      	add	r3, r1
 8002872:	761a      	strb	r2, [r3, #24]
 8002874:	bf00      	nop
 8002876:	370c      	adds	r7, #12
 8002878:	46bd      	mov	sp, r7
 800287a:	bc80      	pop	{r7}
 800287c:	4770      	bx	lr
 800287e:	bf00      	nop
 8002880:	e000e100 	.word	0xe000e100
 8002884:	e000ed00 	.word	0xe000ed00

08002888 <NVIC_EncodePriority>:
 8002888:	b480      	push	{r7}
 800288a:	b089      	sub	sp, #36	; 0x24
 800288c:	af00      	add	r7, sp, #0
 800288e:	60f8      	str	r0, [r7, #12]
 8002890:	60b9      	str	r1, [r7, #8]
 8002892:	607a      	str	r2, [r7, #4]
 8002894:	68fb      	ldr	r3, [r7, #12]
 8002896:	f003 0307 	and.w	r3, r3, #7
 800289a:	61fb      	str	r3, [r7, #28]
 800289c:	69fb      	ldr	r3, [r7, #28]
 800289e:	f1c3 0307 	rsb	r3, r3, #7
 80028a2:	2b04      	cmp	r3, #4
 80028a4:	bf28      	it	cs
 80028a6:	2304      	movcs	r3, #4
 80028a8:	61bb      	str	r3, [r7, #24]
 80028aa:	69fb      	ldr	r3, [r7, #28]
 80028ac:	3304      	adds	r3, #4
 80028ae:	2b06      	cmp	r3, #6
 80028b0:	d902      	bls.n	80028b8 <NVIC_EncodePriority+0x30>
 80028b2:	69fb      	ldr	r3, [r7, #28]
 80028b4:	3b03      	subs	r3, #3
 80028b6:	e000      	b.n	80028ba <NVIC_EncodePriority+0x32>
 80028b8:	2300      	movs	r3, #0
 80028ba:	617b      	str	r3, [r7, #20]
 80028bc:	f04f 32ff 	mov.w	r2, #4294967295
 80028c0:	69bb      	ldr	r3, [r7, #24]
 80028c2:	fa02 f303 	lsl.w	r3, r2, r3
 80028c6:	43da      	mvns	r2, r3
 80028c8:	68bb      	ldr	r3, [r7, #8]
 80028ca:	401a      	ands	r2, r3
 80028cc:	697b      	ldr	r3, [r7, #20]
 80028ce:	409a      	lsls	r2, r3
 80028d0:	f04f 31ff 	mov.w	r1, #4294967295
 80028d4:	697b      	ldr	r3, [r7, #20]
 80028d6:	fa01 f303 	lsl.w	r3, r1, r3
 80028da:	43d9      	mvns	r1, r3
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	400b      	ands	r3, r1
 80028e0:	4313      	orrs	r3, r2
 80028e2:	4618      	mov	r0, r3
 80028e4:	3724      	adds	r7, #36	; 0x24
 80028e6:	46bd      	mov	sp, r7
 80028e8:	bc80      	pop	{r7}
 80028ea:	4770      	bx	lr

080028ec <SysTick_Config>:
 80028ec:	b580      	push	{r7, lr}
 80028ee:	b082      	sub	sp, #8
 80028f0:	af00      	add	r7, sp, #0
 80028f2:	6078      	str	r0, [r7, #4]
 80028f4:	687b      	ldr	r3, [r7, #4]
 80028f6:	3b01      	subs	r3, #1
 80028f8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80028fc:	d301      	bcc.n	8002902 <SysTick_Config+0x16>
 80028fe:	2301      	movs	r3, #1
 8002900:	e00f      	b.n	8002922 <SysTick_Config+0x36>
 8002902:	4a0a      	ldr	r2, [pc, #40]	; (800292c <SysTick_Config+0x40>)
 8002904:	687b      	ldr	r3, [r7, #4]
 8002906:	3b01      	subs	r3, #1
 8002908:	6053      	str	r3, [r2, #4]
 800290a:	210f      	movs	r1, #15
 800290c:	f04f 30ff 	mov.w	r0, #4294967295
 8002910:	f7ff ff90 	bl	8002834 <__NVIC_SetPriority>
 8002914:	4b05      	ldr	r3, [pc, #20]	; (800292c <SysTick_Config+0x40>)
 8002916:	2200      	movs	r2, #0
 8002918:	609a      	str	r2, [r3, #8]
 800291a:	4b04      	ldr	r3, [pc, #16]	; (800292c <SysTick_Config+0x40>)
 800291c:	2207      	movs	r2, #7
 800291e:	601a      	str	r2, [r3, #0]
 8002920:	2300      	movs	r3, #0
 8002922:	4618      	mov	r0, r3
 8002924:	3708      	adds	r7, #8
 8002926:	46bd      	mov	sp, r7
 8002928:	bd80      	pop	{r7, pc}
 800292a:	bf00      	nop
 800292c:	e000e010 	.word	0xe000e010

08002930 <HAL_NVIC_SetPriorityGrouping>:
 8002930:	b580      	push	{r7, lr}
 8002932:	b082      	sub	sp, #8
 8002934:	af00      	add	r7, sp, #0
 8002936:	6078      	str	r0, [r7, #4]
 8002938:	6878      	ldr	r0, [r7, #4]
 800293a:	f7ff ff2d 	bl	8002798 <__NVIC_SetPriorityGrouping>
 800293e:	bf00      	nop
 8002940:	3708      	adds	r7, #8
 8002942:	46bd      	mov	sp, r7
 8002944:	bd80      	pop	{r7, pc}

08002946 <HAL_NVIC_SetPriority>:
 8002946:	b580      	push	{r7, lr}
 8002948:	b086      	sub	sp, #24
 800294a:	af00      	add	r7, sp, #0
 800294c:	4603      	mov	r3, r0
 800294e:	60b9      	str	r1, [r7, #8]
 8002950:	607a      	str	r2, [r7, #4]
 8002952:	73fb      	strb	r3, [r7, #15]
 8002954:	2300      	movs	r3, #0
 8002956:	617b      	str	r3, [r7, #20]
 8002958:	f7ff ff42 	bl	80027e0 <__NVIC_GetPriorityGrouping>
 800295c:	6178      	str	r0, [r7, #20]
 800295e:	687a      	ldr	r2, [r7, #4]
 8002960:	68b9      	ldr	r1, [r7, #8]
 8002962:	6978      	ldr	r0, [r7, #20]
 8002964:	f7ff ff90 	bl	8002888 <NVIC_EncodePriority>
 8002968:	4602      	mov	r2, r0
 800296a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800296e:	4611      	mov	r1, r2
 8002970:	4618      	mov	r0, r3
 8002972:	f7ff ff5f 	bl	8002834 <__NVIC_SetPriority>
 8002976:	bf00      	nop
 8002978:	3718      	adds	r7, #24
 800297a:	46bd      	mov	sp, r7
 800297c:	bd80      	pop	{r7, pc}

0800297e <HAL_NVIC_EnableIRQ>:
 800297e:	b580      	push	{r7, lr}
 8002980:	b082      	sub	sp, #8
 8002982:	af00      	add	r7, sp, #0
 8002984:	4603      	mov	r3, r0
 8002986:	71fb      	strb	r3, [r7, #7]
 8002988:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800298c:	4618      	mov	r0, r3
 800298e:	f7ff ff35 	bl	80027fc <__NVIC_EnableIRQ>
 8002992:	bf00      	nop
 8002994:	3708      	adds	r7, #8
 8002996:	46bd      	mov	sp, r7
 8002998:	bd80      	pop	{r7, pc}

0800299a <HAL_SYSTICK_Config>:
 800299a:	b580      	push	{r7, lr}
 800299c:	b082      	sub	sp, #8
 800299e:	af00      	add	r7, sp, #0
 80029a0:	6078      	str	r0, [r7, #4]
 80029a2:	6878      	ldr	r0, [r7, #4]
 80029a4:	f7ff ffa2 	bl	80028ec <SysTick_Config>
 80029a8:	4603      	mov	r3, r0
 80029aa:	4618      	mov	r0, r3
 80029ac:	3708      	adds	r7, #8
 80029ae:	46bd      	mov	sp, r7
 80029b0:	bd80      	pop	{r7, pc}
	...

080029b4 <HAL_GPIO_Init>:
 80029b4:	b480      	push	{r7}
 80029b6:	b087      	sub	sp, #28
 80029b8:	af00      	add	r7, sp, #0
 80029ba:	6078      	str	r0, [r7, #4]
 80029bc:	6039      	str	r1, [r7, #0]
 80029be:	2300      	movs	r3, #0
 80029c0:	617b      	str	r3, [r7, #20]
 80029c2:	2300      	movs	r3, #0
 80029c4:	60fb      	str	r3, [r7, #12]
 80029c6:	2300      	movs	r3, #0
 80029c8:	613b      	str	r3, [r7, #16]
 80029ca:	e160      	b.n	8002c8e <HAL_GPIO_Init+0x2da>
 80029cc:	683b      	ldr	r3, [r7, #0]
 80029ce:	681a      	ldr	r2, [r3, #0]
 80029d0:	2101      	movs	r1, #1
 80029d2:	697b      	ldr	r3, [r7, #20]
 80029d4:	fa01 f303 	lsl.w	r3, r1, r3
 80029d8:	4013      	ands	r3, r2
 80029da:	60fb      	str	r3, [r7, #12]
 80029dc:	68fb      	ldr	r3, [r7, #12]
 80029de:	2b00      	cmp	r3, #0
 80029e0:	f000 8152 	beq.w	8002c88 <HAL_GPIO_Init+0x2d4>
 80029e4:	683b      	ldr	r3, [r7, #0]
 80029e6:	685b      	ldr	r3, [r3, #4]
 80029e8:	f003 0303 	and.w	r3, r3, #3
 80029ec:	2b01      	cmp	r3, #1
 80029ee:	d005      	beq.n	80029fc <HAL_GPIO_Init+0x48>
 80029f0:	683b      	ldr	r3, [r7, #0]
 80029f2:	685b      	ldr	r3, [r3, #4]
 80029f4:	f003 0303 	and.w	r3, r3, #3
 80029f8:	2b02      	cmp	r3, #2
 80029fa:	d130      	bne.n	8002a5e <HAL_GPIO_Init+0xaa>
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	689b      	ldr	r3, [r3, #8]
 8002a00:	613b      	str	r3, [r7, #16]
 8002a02:	697b      	ldr	r3, [r7, #20]
 8002a04:	005b      	lsls	r3, r3, #1
 8002a06:	2203      	movs	r2, #3
 8002a08:	fa02 f303 	lsl.w	r3, r2, r3
 8002a0c:	43db      	mvns	r3, r3
 8002a0e:	693a      	ldr	r2, [r7, #16]
 8002a10:	4013      	ands	r3, r2
 8002a12:	613b      	str	r3, [r7, #16]
 8002a14:	683b      	ldr	r3, [r7, #0]
 8002a16:	68da      	ldr	r2, [r3, #12]
 8002a18:	697b      	ldr	r3, [r7, #20]
 8002a1a:	005b      	lsls	r3, r3, #1
 8002a1c:	fa02 f303 	lsl.w	r3, r2, r3
 8002a20:	693a      	ldr	r2, [r7, #16]
 8002a22:	4313      	orrs	r3, r2
 8002a24:	613b      	str	r3, [r7, #16]
 8002a26:	687b      	ldr	r3, [r7, #4]
 8002a28:	693a      	ldr	r2, [r7, #16]
 8002a2a:	609a      	str	r2, [r3, #8]
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	685b      	ldr	r3, [r3, #4]
 8002a30:	613b      	str	r3, [r7, #16]
 8002a32:	2201      	movs	r2, #1
 8002a34:	697b      	ldr	r3, [r7, #20]
 8002a36:	fa02 f303 	lsl.w	r3, r2, r3
 8002a3a:	43db      	mvns	r3, r3
 8002a3c:	693a      	ldr	r2, [r7, #16]
 8002a3e:	4013      	ands	r3, r2
 8002a40:	613b      	str	r3, [r7, #16]
 8002a42:	683b      	ldr	r3, [r7, #0]
 8002a44:	685b      	ldr	r3, [r3, #4]
 8002a46:	091b      	lsrs	r3, r3, #4
 8002a48:	f003 0201 	and.w	r2, r3, #1
 8002a4c:	697b      	ldr	r3, [r7, #20]
 8002a4e:	fa02 f303 	lsl.w	r3, r2, r3
 8002a52:	693a      	ldr	r2, [r7, #16]
 8002a54:	4313      	orrs	r3, r2
 8002a56:	613b      	str	r3, [r7, #16]
 8002a58:	687b      	ldr	r3, [r7, #4]
 8002a5a:	693a      	ldr	r2, [r7, #16]
 8002a5c:	605a      	str	r2, [r3, #4]
 8002a5e:	683b      	ldr	r3, [r7, #0]
 8002a60:	685b      	ldr	r3, [r3, #4]
 8002a62:	f003 0303 	and.w	r3, r3, #3
 8002a66:	2b03      	cmp	r3, #3
 8002a68:	d017      	beq.n	8002a9a <HAL_GPIO_Init+0xe6>
 8002a6a:	687b      	ldr	r3, [r7, #4]
 8002a6c:	68db      	ldr	r3, [r3, #12]
 8002a6e:	613b      	str	r3, [r7, #16]
 8002a70:	697b      	ldr	r3, [r7, #20]
 8002a72:	005b      	lsls	r3, r3, #1
 8002a74:	2203      	movs	r2, #3
 8002a76:	fa02 f303 	lsl.w	r3, r2, r3
 8002a7a:	43db      	mvns	r3, r3
 8002a7c:	693a      	ldr	r2, [r7, #16]
 8002a7e:	4013      	ands	r3, r2
 8002a80:	613b      	str	r3, [r7, #16]
 8002a82:	683b      	ldr	r3, [r7, #0]
 8002a84:	689a      	ldr	r2, [r3, #8]
 8002a86:	697b      	ldr	r3, [r7, #20]
 8002a88:	005b      	lsls	r3, r3, #1
 8002a8a:	fa02 f303 	lsl.w	r3, r2, r3
 8002a8e:	693a      	ldr	r2, [r7, #16]
 8002a90:	4313      	orrs	r3, r2
 8002a92:	613b      	str	r3, [r7, #16]
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	693a      	ldr	r2, [r7, #16]
 8002a98:	60da      	str	r2, [r3, #12]
 8002a9a:	683b      	ldr	r3, [r7, #0]
 8002a9c:	685b      	ldr	r3, [r3, #4]
 8002a9e:	f003 0303 	and.w	r3, r3, #3
 8002aa2:	2b02      	cmp	r3, #2
 8002aa4:	d123      	bne.n	8002aee <HAL_GPIO_Init+0x13a>
 8002aa6:	697b      	ldr	r3, [r7, #20]
 8002aa8:	08da      	lsrs	r2, r3, #3
 8002aaa:	687b      	ldr	r3, [r7, #4]
 8002aac:	3208      	adds	r2, #8
 8002aae:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002ab2:	613b      	str	r3, [r7, #16]
 8002ab4:	697b      	ldr	r3, [r7, #20]
 8002ab6:	f003 0307 	and.w	r3, r3, #7
 8002aba:	009b      	lsls	r3, r3, #2
 8002abc:	220f      	movs	r2, #15
 8002abe:	fa02 f303 	lsl.w	r3, r2, r3
 8002ac2:	43db      	mvns	r3, r3
 8002ac4:	693a      	ldr	r2, [r7, #16]
 8002ac6:	4013      	ands	r3, r2
 8002ac8:	613b      	str	r3, [r7, #16]
 8002aca:	683b      	ldr	r3, [r7, #0]
 8002acc:	691a      	ldr	r2, [r3, #16]
 8002ace:	697b      	ldr	r3, [r7, #20]
 8002ad0:	f003 0307 	and.w	r3, r3, #7
 8002ad4:	009b      	lsls	r3, r3, #2
 8002ad6:	fa02 f303 	lsl.w	r3, r2, r3
 8002ada:	693a      	ldr	r2, [r7, #16]
 8002adc:	4313      	orrs	r3, r2
 8002ade:	613b      	str	r3, [r7, #16]
 8002ae0:	697b      	ldr	r3, [r7, #20]
 8002ae2:	08da      	lsrs	r2, r3, #3
 8002ae4:	687b      	ldr	r3, [r7, #4]
 8002ae6:	3208      	adds	r2, #8
 8002ae8:	6939      	ldr	r1, [r7, #16]
 8002aea:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002aee:	687b      	ldr	r3, [r7, #4]
 8002af0:	681b      	ldr	r3, [r3, #0]
 8002af2:	613b      	str	r3, [r7, #16]
 8002af4:	697b      	ldr	r3, [r7, #20]
 8002af6:	005b      	lsls	r3, r3, #1
 8002af8:	2203      	movs	r2, #3
 8002afa:	fa02 f303 	lsl.w	r3, r2, r3
 8002afe:	43db      	mvns	r3, r3
 8002b00:	693a      	ldr	r2, [r7, #16]
 8002b02:	4013      	ands	r3, r2
 8002b04:	613b      	str	r3, [r7, #16]
 8002b06:	683b      	ldr	r3, [r7, #0]
 8002b08:	685b      	ldr	r3, [r3, #4]
 8002b0a:	f003 0203 	and.w	r2, r3, #3
 8002b0e:	697b      	ldr	r3, [r7, #20]
 8002b10:	005b      	lsls	r3, r3, #1
 8002b12:	fa02 f303 	lsl.w	r3, r2, r3
 8002b16:	693a      	ldr	r2, [r7, #16]
 8002b18:	4313      	orrs	r3, r2
 8002b1a:	613b      	str	r3, [r7, #16]
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	693a      	ldr	r2, [r7, #16]
 8002b20:	601a      	str	r2, [r3, #0]
 8002b22:	683b      	ldr	r3, [r7, #0]
 8002b24:	685b      	ldr	r3, [r3, #4]
 8002b26:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002b2a:	2b00      	cmp	r3, #0
 8002b2c:	f000 80ac 	beq.w	8002c88 <HAL_GPIO_Init+0x2d4>
 8002b30:	4b5e      	ldr	r3, [pc, #376]	; (8002cac <HAL_GPIO_Init+0x2f8>)
 8002b32:	6a1b      	ldr	r3, [r3, #32]
 8002b34:	4a5d      	ldr	r2, [pc, #372]	; (8002cac <HAL_GPIO_Init+0x2f8>)
 8002b36:	f043 0301 	orr.w	r3, r3, #1
 8002b3a:	6213      	str	r3, [r2, #32]
 8002b3c:	4b5b      	ldr	r3, [pc, #364]	; (8002cac <HAL_GPIO_Init+0x2f8>)
 8002b3e:	6a1b      	ldr	r3, [r3, #32]
 8002b40:	f003 0301 	and.w	r3, r3, #1
 8002b44:	60bb      	str	r3, [r7, #8]
 8002b46:	68bb      	ldr	r3, [r7, #8]
 8002b48:	4a59      	ldr	r2, [pc, #356]	; (8002cb0 <HAL_GPIO_Init+0x2fc>)
 8002b4a:	697b      	ldr	r3, [r7, #20]
 8002b4c:	089b      	lsrs	r3, r3, #2
 8002b4e:	3302      	adds	r3, #2
 8002b50:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002b54:	613b      	str	r3, [r7, #16]
 8002b56:	697b      	ldr	r3, [r7, #20]
 8002b58:	f003 0303 	and.w	r3, r3, #3
 8002b5c:	009b      	lsls	r3, r3, #2
 8002b5e:	220f      	movs	r2, #15
 8002b60:	fa02 f303 	lsl.w	r3, r2, r3
 8002b64:	43db      	mvns	r3, r3
 8002b66:	693a      	ldr	r2, [r7, #16]
 8002b68:	4013      	ands	r3, r2
 8002b6a:	613b      	str	r3, [r7, #16]
 8002b6c:	687b      	ldr	r3, [r7, #4]
 8002b6e:	4a51      	ldr	r2, [pc, #324]	; (8002cb4 <HAL_GPIO_Init+0x300>)
 8002b70:	4293      	cmp	r3, r2
 8002b72:	d025      	beq.n	8002bc0 <HAL_GPIO_Init+0x20c>
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	4a50      	ldr	r2, [pc, #320]	; (8002cb8 <HAL_GPIO_Init+0x304>)
 8002b78:	4293      	cmp	r3, r2
 8002b7a:	d01f      	beq.n	8002bbc <HAL_GPIO_Init+0x208>
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	4a4f      	ldr	r2, [pc, #316]	; (8002cbc <HAL_GPIO_Init+0x308>)
 8002b80:	4293      	cmp	r3, r2
 8002b82:	d019      	beq.n	8002bb8 <HAL_GPIO_Init+0x204>
 8002b84:	687b      	ldr	r3, [r7, #4]
 8002b86:	4a4e      	ldr	r2, [pc, #312]	; (8002cc0 <HAL_GPIO_Init+0x30c>)
 8002b88:	4293      	cmp	r3, r2
 8002b8a:	d013      	beq.n	8002bb4 <HAL_GPIO_Init+0x200>
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	4a4d      	ldr	r2, [pc, #308]	; (8002cc4 <HAL_GPIO_Init+0x310>)
 8002b90:	4293      	cmp	r3, r2
 8002b92:	d00d      	beq.n	8002bb0 <HAL_GPIO_Init+0x1fc>
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	4a4c      	ldr	r2, [pc, #304]	; (8002cc8 <HAL_GPIO_Init+0x314>)
 8002b98:	4293      	cmp	r3, r2
 8002b9a:	d007      	beq.n	8002bac <HAL_GPIO_Init+0x1f8>
 8002b9c:	687b      	ldr	r3, [r7, #4]
 8002b9e:	4a4b      	ldr	r2, [pc, #300]	; (8002ccc <HAL_GPIO_Init+0x318>)
 8002ba0:	4293      	cmp	r3, r2
 8002ba2:	d101      	bne.n	8002ba8 <HAL_GPIO_Init+0x1f4>
 8002ba4:	2306      	movs	r3, #6
 8002ba6:	e00c      	b.n	8002bc2 <HAL_GPIO_Init+0x20e>
 8002ba8:	2307      	movs	r3, #7
 8002baa:	e00a      	b.n	8002bc2 <HAL_GPIO_Init+0x20e>
 8002bac:	2305      	movs	r3, #5
 8002bae:	e008      	b.n	8002bc2 <HAL_GPIO_Init+0x20e>
 8002bb0:	2304      	movs	r3, #4
 8002bb2:	e006      	b.n	8002bc2 <HAL_GPIO_Init+0x20e>
 8002bb4:	2303      	movs	r3, #3
 8002bb6:	e004      	b.n	8002bc2 <HAL_GPIO_Init+0x20e>
 8002bb8:	2302      	movs	r3, #2
 8002bba:	e002      	b.n	8002bc2 <HAL_GPIO_Init+0x20e>
 8002bbc:	2301      	movs	r3, #1
 8002bbe:	e000      	b.n	8002bc2 <HAL_GPIO_Init+0x20e>
 8002bc0:	2300      	movs	r3, #0
 8002bc2:	697a      	ldr	r2, [r7, #20]
 8002bc4:	f002 0203 	and.w	r2, r2, #3
 8002bc8:	0092      	lsls	r2, r2, #2
 8002bca:	4093      	lsls	r3, r2
 8002bcc:	693a      	ldr	r2, [r7, #16]
 8002bce:	4313      	orrs	r3, r2
 8002bd0:	613b      	str	r3, [r7, #16]
 8002bd2:	4937      	ldr	r1, [pc, #220]	; (8002cb0 <HAL_GPIO_Init+0x2fc>)
 8002bd4:	697b      	ldr	r3, [r7, #20]
 8002bd6:	089b      	lsrs	r3, r3, #2
 8002bd8:	3302      	adds	r3, #2
 8002bda:	693a      	ldr	r2, [r7, #16]
 8002bdc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002be0:	4b3b      	ldr	r3, [pc, #236]	; (8002cd0 <HAL_GPIO_Init+0x31c>)
 8002be2:	689b      	ldr	r3, [r3, #8]
 8002be4:	613b      	str	r3, [r7, #16]
 8002be6:	68fb      	ldr	r3, [r7, #12]
 8002be8:	43db      	mvns	r3, r3
 8002bea:	693a      	ldr	r2, [r7, #16]
 8002bec:	4013      	ands	r3, r2
 8002bee:	613b      	str	r3, [r7, #16]
 8002bf0:	683b      	ldr	r3, [r7, #0]
 8002bf2:	685b      	ldr	r3, [r3, #4]
 8002bf4:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002bf8:	2b00      	cmp	r3, #0
 8002bfa:	d003      	beq.n	8002c04 <HAL_GPIO_Init+0x250>
 8002bfc:	693a      	ldr	r2, [r7, #16]
 8002bfe:	68fb      	ldr	r3, [r7, #12]
 8002c00:	4313      	orrs	r3, r2
 8002c02:	613b      	str	r3, [r7, #16]
 8002c04:	4a32      	ldr	r2, [pc, #200]	; (8002cd0 <HAL_GPIO_Init+0x31c>)
 8002c06:	693b      	ldr	r3, [r7, #16]
 8002c08:	6093      	str	r3, [r2, #8]
 8002c0a:	4b31      	ldr	r3, [pc, #196]	; (8002cd0 <HAL_GPIO_Init+0x31c>)
 8002c0c:	68db      	ldr	r3, [r3, #12]
 8002c0e:	613b      	str	r3, [r7, #16]
 8002c10:	68fb      	ldr	r3, [r7, #12]
 8002c12:	43db      	mvns	r3, r3
 8002c14:	693a      	ldr	r2, [r7, #16]
 8002c16:	4013      	ands	r3, r2
 8002c18:	613b      	str	r3, [r7, #16]
 8002c1a:	683b      	ldr	r3, [r7, #0]
 8002c1c:	685b      	ldr	r3, [r3, #4]
 8002c1e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002c22:	2b00      	cmp	r3, #0
 8002c24:	d003      	beq.n	8002c2e <HAL_GPIO_Init+0x27a>
 8002c26:	693a      	ldr	r2, [r7, #16]
 8002c28:	68fb      	ldr	r3, [r7, #12]
 8002c2a:	4313      	orrs	r3, r2
 8002c2c:	613b      	str	r3, [r7, #16]
 8002c2e:	4a28      	ldr	r2, [pc, #160]	; (8002cd0 <HAL_GPIO_Init+0x31c>)
 8002c30:	693b      	ldr	r3, [r7, #16]
 8002c32:	60d3      	str	r3, [r2, #12]
 8002c34:	4b26      	ldr	r3, [pc, #152]	; (8002cd0 <HAL_GPIO_Init+0x31c>)
 8002c36:	685b      	ldr	r3, [r3, #4]
 8002c38:	613b      	str	r3, [r7, #16]
 8002c3a:	68fb      	ldr	r3, [r7, #12]
 8002c3c:	43db      	mvns	r3, r3
 8002c3e:	693a      	ldr	r2, [r7, #16]
 8002c40:	4013      	ands	r3, r2
 8002c42:	613b      	str	r3, [r7, #16]
 8002c44:	683b      	ldr	r3, [r7, #0]
 8002c46:	685b      	ldr	r3, [r3, #4]
 8002c48:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002c4c:	2b00      	cmp	r3, #0
 8002c4e:	d003      	beq.n	8002c58 <HAL_GPIO_Init+0x2a4>
 8002c50:	693a      	ldr	r2, [r7, #16]
 8002c52:	68fb      	ldr	r3, [r7, #12]
 8002c54:	4313      	orrs	r3, r2
 8002c56:	613b      	str	r3, [r7, #16]
 8002c58:	4a1d      	ldr	r2, [pc, #116]	; (8002cd0 <HAL_GPIO_Init+0x31c>)
 8002c5a:	693b      	ldr	r3, [r7, #16]
 8002c5c:	6053      	str	r3, [r2, #4]
 8002c5e:	4b1c      	ldr	r3, [pc, #112]	; (8002cd0 <HAL_GPIO_Init+0x31c>)
 8002c60:	681b      	ldr	r3, [r3, #0]
 8002c62:	613b      	str	r3, [r7, #16]
 8002c64:	68fb      	ldr	r3, [r7, #12]
 8002c66:	43db      	mvns	r3, r3
 8002c68:	693a      	ldr	r2, [r7, #16]
 8002c6a:	4013      	ands	r3, r2
 8002c6c:	613b      	str	r3, [r7, #16]
 8002c6e:	683b      	ldr	r3, [r7, #0]
 8002c70:	685b      	ldr	r3, [r3, #4]
 8002c72:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002c76:	2b00      	cmp	r3, #0
 8002c78:	d003      	beq.n	8002c82 <HAL_GPIO_Init+0x2ce>
 8002c7a:	693a      	ldr	r2, [r7, #16]
 8002c7c:	68fb      	ldr	r3, [r7, #12]
 8002c7e:	4313      	orrs	r3, r2
 8002c80:	613b      	str	r3, [r7, #16]
 8002c82:	4a13      	ldr	r2, [pc, #76]	; (8002cd0 <HAL_GPIO_Init+0x31c>)
 8002c84:	693b      	ldr	r3, [r7, #16]
 8002c86:	6013      	str	r3, [r2, #0]
 8002c88:	697b      	ldr	r3, [r7, #20]
 8002c8a:	3301      	adds	r3, #1
 8002c8c:	617b      	str	r3, [r7, #20]
 8002c8e:	683b      	ldr	r3, [r7, #0]
 8002c90:	681a      	ldr	r2, [r3, #0]
 8002c92:	697b      	ldr	r3, [r7, #20]
 8002c94:	fa22 f303 	lsr.w	r3, r2, r3
 8002c98:	2b00      	cmp	r3, #0
 8002c9a:	f47f ae97 	bne.w	80029cc <HAL_GPIO_Init+0x18>
 8002c9e:	bf00      	nop
 8002ca0:	bf00      	nop
 8002ca2:	371c      	adds	r7, #28
 8002ca4:	46bd      	mov	sp, r7
 8002ca6:	bc80      	pop	{r7}
 8002ca8:	4770      	bx	lr
 8002caa:	bf00      	nop
 8002cac:	40023800 	.word	0x40023800
 8002cb0:	40010000 	.word	0x40010000
 8002cb4:	40020000 	.word	0x40020000
 8002cb8:	40020400 	.word	0x40020400
 8002cbc:	40020800 	.word	0x40020800
 8002cc0:	40020c00 	.word	0x40020c00
 8002cc4:	40021000 	.word	0x40021000
 8002cc8:	40021400 	.word	0x40021400
 8002ccc:	40021800 	.word	0x40021800
 8002cd0:	40010400 	.word	0x40010400

08002cd4 <HAL_GPIO_ReadPin>:
 8002cd4:	b480      	push	{r7}
 8002cd6:	b085      	sub	sp, #20
 8002cd8:	af00      	add	r7, sp, #0
 8002cda:	6078      	str	r0, [r7, #4]
 8002cdc:	460b      	mov	r3, r1
 8002cde:	807b      	strh	r3, [r7, #2]
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	691a      	ldr	r2, [r3, #16]
 8002ce4:	887b      	ldrh	r3, [r7, #2]
 8002ce6:	4013      	ands	r3, r2
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	d002      	beq.n	8002cf2 <HAL_GPIO_ReadPin+0x1e>
 8002cec:	2301      	movs	r3, #1
 8002cee:	73fb      	strb	r3, [r7, #15]
 8002cf0:	e001      	b.n	8002cf6 <HAL_GPIO_ReadPin+0x22>
 8002cf2:	2300      	movs	r3, #0
 8002cf4:	73fb      	strb	r3, [r7, #15]
 8002cf6:	7bfb      	ldrb	r3, [r7, #15]
 8002cf8:	4618      	mov	r0, r3
 8002cfa:	3714      	adds	r7, #20
 8002cfc:	46bd      	mov	sp, r7
 8002cfe:	bc80      	pop	{r7}
 8002d00:	4770      	bx	lr

08002d02 <HAL_GPIO_WritePin>:
 8002d02:	b480      	push	{r7}
 8002d04:	b083      	sub	sp, #12
 8002d06:	af00      	add	r7, sp, #0
 8002d08:	6078      	str	r0, [r7, #4]
 8002d0a:	460b      	mov	r3, r1
 8002d0c:	807b      	strh	r3, [r7, #2]
 8002d0e:	4613      	mov	r3, r2
 8002d10:	707b      	strb	r3, [r7, #1]
 8002d12:	787b      	ldrb	r3, [r7, #1]
 8002d14:	2b00      	cmp	r3, #0
 8002d16:	d003      	beq.n	8002d20 <HAL_GPIO_WritePin+0x1e>
 8002d18:	887a      	ldrh	r2, [r7, #2]
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	619a      	str	r2, [r3, #24]
 8002d1e:	e003      	b.n	8002d28 <HAL_GPIO_WritePin+0x26>
 8002d20:	887b      	ldrh	r3, [r7, #2]
 8002d22:	041a      	lsls	r2, r3, #16
 8002d24:	687b      	ldr	r3, [r7, #4]
 8002d26:	619a      	str	r2, [r3, #24]
 8002d28:	bf00      	nop
 8002d2a:	370c      	adds	r7, #12
 8002d2c:	46bd      	mov	sp, r7
 8002d2e:	bc80      	pop	{r7}
 8002d30:	4770      	bx	lr
	...

08002d34 <HAL_GPIO_EXTI_IRQHandler>:
 8002d34:	b580      	push	{r7, lr}
 8002d36:	b082      	sub	sp, #8
 8002d38:	af00      	add	r7, sp, #0
 8002d3a:	4603      	mov	r3, r0
 8002d3c:	80fb      	strh	r3, [r7, #6]
 8002d3e:	4b08      	ldr	r3, [pc, #32]	; (8002d60 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002d40:	695a      	ldr	r2, [r3, #20]
 8002d42:	88fb      	ldrh	r3, [r7, #6]
 8002d44:	4013      	ands	r3, r2
 8002d46:	2b00      	cmp	r3, #0
 8002d48:	d006      	beq.n	8002d58 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8002d4a:	4a05      	ldr	r2, [pc, #20]	; (8002d60 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002d4c:	88fb      	ldrh	r3, [r7, #6]
 8002d4e:	6153      	str	r3, [r2, #20]
 8002d50:	88fb      	ldrh	r3, [r7, #6]
 8002d52:	4618      	mov	r0, r3
 8002d54:	f7fe fd44 	bl	80017e0 <HAL_GPIO_EXTI_Callback>
 8002d58:	bf00      	nop
 8002d5a:	3708      	adds	r7, #8
 8002d5c:	46bd      	mov	sp, r7
 8002d5e:	bd80      	pop	{r7, pc}
 8002d60:	40010400 	.word	0x40010400

08002d64 <HAL_RCC_OscConfig>:
 8002d64:	b580      	push	{r7, lr}
 8002d66:	b088      	sub	sp, #32
 8002d68:	af00      	add	r7, sp, #0
 8002d6a:	6078      	str	r0, [r7, #4]
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	2b00      	cmp	r3, #0
 8002d70:	d101      	bne.n	8002d76 <HAL_RCC_OscConfig+0x12>
 8002d72:	2301      	movs	r3, #1
 8002d74:	e31d      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 8002d76:	4b94      	ldr	r3, [pc, #592]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002d78:	689b      	ldr	r3, [r3, #8]
 8002d7a:	f003 030c 	and.w	r3, r3, #12
 8002d7e:	61bb      	str	r3, [r7, #24]
 8002d80:	4b91      	ldr	r3, [pc, #580]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002d82:	689b      	ldr	r3, [r3, #8]
 8002d84:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002d88:	617b      	str	r3, [r7, #20]
 8002d8a:	687b      	ldr	r3, [r7, #4]
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	f003 0301 	and.w	r3, r3, #1
 8002d92:	2b00      	cmp	r3, #0
 8002d94:	d07b      	beq.n	8002e8e <HAL_RCC_OscConfig+0x12a>
 8002d96:	69bb      	ldr	r3, [r7, #24]
 8002d98:	2b08      	cmp	r3, #8
 8002d9a:	d006      	beq.n	8002daa <HAL_RCC_OscConfig+0x46>
 8002d9c:	69bb      	ldr	r3, [r7, #24]
 8002d9e:	2b0c      	cmp	r3, #12
 8002da0:	d10f      	bne.n	8002dc2 <HAL_RCC_OscConfig+0x5e>
 8002da2:	697b      	ldr	r3, [r7, #20]
 8002da4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002da8:	d10b      	bne.n	8002dc2 <HAL_RCC_OscConfig+0x5e>
 8002daa:	4b87      	ldr	r3, [pc, #540]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002dac:	681b      	ldr	r3, [r3, #0]
 8002dae:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002db2:	2b00      	cmp	r3, #0
 8002db4:	d06a      	beq.n	8002e8c <HAL_RCC_OscConfig+0x128>
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	685b      	ldr	r3, [r3, #4]
 8002dba:	2b00      	cmp	r3, #0
 8002dbc:	d166      	bne.n	8002e8c <HAL_RCC_OscConfig+0x128>
 8002dbe:	2301      	movs	r3, #1
 8002dc0:	e2f7      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 8002dc2:	687b      	ldr	r3, [r7, #4]
 8002dc4:	685b      	ldr	r3, [r3, #4]
 8002dc6:	2b01      	cmp	r3, #1
 8002dc8:	d106      	bne.n	8002dd8 <HAL_RCC_OscConfig+0x74>
 8002dca:	4b7f      	ldr	r3, [pc, #508]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	4a7e      	ldr	r2, [pc, #504]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002dd0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002dd4:	6013      	str	r3, [r2, #0]
 8002dd6:	e02d      	b.n	8002e34 <HAL_RCC_OscConfig+0xd0>
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	685b      	ldr	r3, [r3, #4]
 8002ddc:	2b00      	cmp	r3, #0
 8002dde:	d10c      	bne.n	8002dfa <HAL_RCC_OscConfig+0x96>
 8002de0:	4b79      	ldr	r3, [pc, #484]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002de2:	681b      	ldr	r3, [r3, #0]
 8002de4:	4a78      	ldr	r2, [pc, #480]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002de6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002dea:	6013      	str	r3, [r2, #0]
 8002dec:	4b76      	ldr	r3, [pc, #472]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002dee:	681b      	ldr	r3, [r3, #0]
 8002df0:	4a75      	ldr	r2, [pc, #468]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002df2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002df6:	6013      	str	r3, [r2, #0]
 8002df8:	e01c      	b.n	8002e34 <HAL_RCC_OscConfig+0xd0>
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	685b      	ldr	r3, [r3, #4]
 8002dfe:	2b05      	cmp	r3, #5
 8002e00:	d10c      	bne.n	8002e1c <HAL_RCC_OscConfig+0xb8>
 8002e02:	4b71      	ldr	r3, [pc, #452]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	4a70      	ldr	r2, [pc, #448]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002e08:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002e0c:	6013      	str	r3, [r2, #0]
 8002e0e:	4b6e      	ldr	r3, [pc, #440]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	4a6d      	ldr	r2, [pc, #436]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002e14:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002e18:	6013      	str	r3, [r2, #0]
 8002e1a:	e00b      	b.n	8002e34 <HAL_RCC_OscConfig+0xd0>
 8002e1c:	4b6a      	ldr	r3, [pc, #424]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	4a69      	ldr	r2, [pc, #420]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002e22:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002e26:	6013      	str	r3, [r2, #0]
 8002e28:	4b67      	ldr	r3, [pc, #412]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002e2a:	681b      	ldr	r3, [r3, #0]
 8002e2c:	4a66      	ldr	r2, [pc, #408]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002e2e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002e32:	6013      	str	r3, [r2, #0]
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	685b      	ldr	r3, [r3, #4]
 8002e38:	2b00      	cmp	r3, #0
 8002e3a:	d013      	beq.n	8002e64 <HAL_RCC_OscConfig+0x100>
 8002e3c:	f7fe ff9c 	bl	8001d78 <HAL_GetTick>
 8002e40:	6138      	str	r0, [r7, #16]
 8002e42:	e008      	b.n	8002e56 <HAL_RCC_OscConfig+0xf2>
 8002e44:	f7fe ff98 	bl	8001d78 <HAL_GetTick>
 8002e48:	4602      	mov	r2, r0
 8002e4a:	693b      	ldr	r3, [r7, #16]
 8002e4c:	1ad3      	subs	r3, r2, r3
 8002e4e:	2b64      	cmp	r3, #100	; 0x64
 8002e50:	d901      	bls.n	8002e56 <HAL_RCC_OscConfig+0xf2>
 8002e52:	2303      	movs	r3, #3
 8002e54:	e2ad      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 8002e56:	4b5c      	ldr	r3, [pc, #368]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002e58:	681b      	ldr	r3, [r3, #0]
 8002e5a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	d0f0      	beq.n	8002e44 <HAL_RCC_OscConfig+0xe0>
 8002e62:	e014      	b.n	8002e8e <HAL_RCC_OscConfig+0x12a>
 8002e64:	f7fe ff88 	bl	8001d78 <HAL_GetTick>
 8002e68:	6138      	str	r0, [r7, #16]
 8002e6a:	e008      	b.n	8002e7e <HAL_RCC_OscConfig+0x11a>
 8002e6c:	f7fe ff84 	bl	8001d78 <HAL_GetTick>
 8002e70:	4602      	mov	r2, r0
 8002e72:	693b      	ldr	r3, [r7, #16]
 8002e74:	1ad3      	subs	r3, r2, r3
 8002e76:	2b64      	cmp	r3, #100	; 0x64
 8002e78:	d901      	bls.n	8002e7e <HAL_RCC_OscConfig+0x11a>
 8002e7a:	2303      	movs	r3, #3
 8002e7c:	e299      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 8002e7e:	4b52      	ldr	r3, [pc, #328]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002e80:	681b      	ldr	r3, [r3, #0]
 8002e82:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002e86:	2b00      	cmp	r3, #0
 8002e88:	d1f0      	bne.n	8002e6c <HAL_RCC_OscConfig+0x108>
 8002e8a:	e000      	b.n	8002e8e <HAL_RCC_OscConfig+0x12a>
 8002e8c:	bf00      	nop
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	681b      	ldr	r3, [r3, #0]
 8002e92:	f003 0302 	and.w	r3, r3, #2
 8002e96:	2b00      	cmp	r3, #0
 8002e98:	d05a      	beq.n	8002f50 <HAL_RCC_OscConfig+0x1ec>
 8002e9a:	69bb      	ldr	r3, [r7, #24]
 8002e9c:	2b04      	cmp	r3, #4
 8002e9e:	d005      	beq.n	8002eac <HAL_RCC_OscConfig+0x148>
 8002ea0:	69bb      	ldr	r3, [r7, #24]
 8002ea2:	2b0c      	cmp	r3, #12
 8002ea4:	d119      	bne.n	8002eda <HAL_RCC_OscConfig+0x176>
 8002ea6:	697b      	ldr	r3, [r7, #20]
 8002ea8:	2b00      	cmp	r3, #0
 8002eaa:	d116      	bne.n	8002eda <HAL_RCC_OscConfig+0x176>
 8002eac:	4b46      	ldr	r3, [pc, #280]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002eae:	681b      	ldr	r3, [r3, #0]
 8002eb0:	f003 0302 	and.w	r3, r3, #2
 8002eb4:	2b00      	cmp	r3, #0
 8002eb6:	d005      	beq.n	8002ec4 <HAL_RCC_OscConfig+0x160>
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	68db      	ldr	r3, [r3, #12]
 8002ebc:	2b01      	cmp	r3, #1
 8002ebe:	d001      	beq.n	8002ec4 <HAL_RCC_OscConfig+0x160>
 8002ec0:	2301      	movs	r3, #1
 8002ec2:	e276      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 8002ec4:	4b40      	ldr	r3, [pc, #256]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002ec6:	685b      	ldr	r3, [r3, #4]
 8002ec8:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	691b      	ldr	r3, [r3, #16]
 8002ed0:	021b      	lsls	r3, r3, #8
 8002ed2:	493d      	ldr	r1, [pc, #244]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002ed4:	4313      	orrs	r3, r2
 8002ed6:	604b      	str	r3, [r1, #4]
 8002ed8:	e03a      	b.n	8002f50 <HAL_RCC_OscConfig+0x1ec>
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	68db      	ldr	r3, [r3, #12]
 8002ede:	2b00      	cmp	r3, #0
 8002ee0:	d020      	beq.n	8002f24 <HAL_RCC_OscConfig+0x1c0>
 8002ee2:	4b3a      	ldr	r3, [pc, #232]	; (8002fcc <HAL_RCC_OscConfig+0x268>)
 8002ee4:	2201      	movs	r2, #1
 8002ee6:	601a      	str	r2, [r3, #0]
 8002ee8:	f7fe ff46 	bl	8001d78 <HAL_GetTick>
 8002eec:	6138      	str	r0, [r7, #16]
 8002eee:	e008      	b.n	8002f02 <HAL_RCC_OscConfig+0x19e>
 8002ef0:	f7fe ff42 	bl	8001d78 <HAL_GetTick>
 8002ef4:	4602      	mov	r2, r0
 8002ef6:	693b      	ldr	r3, [r7, #16]
 8002ef8:	1ad3      	subs	r3, r2, r3
 8002efa:	2b02      	cmp	r3, #2
 8002efc:	d901      	bls.n	8002f02 <HAL_RCC_OscConfig+0x19e>
 8002efe:	2303      	movs	r3, #3
 8002f00:	e257      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 8002f02:	4b31      	ldr	r3, [pc, #196]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	f003 0302 	and.w	r3, r3, #2
 8002f0a:	2b00      	cmp	r3, #0
 8002f0c:	d0f0      	beq.n	8002ef0 <HAL_RCC_OscConfig+0x18c>
 8002f0e:	4b2e      	ldr	r3, [pc, #184]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002f10:	685b      	ldr	r3, [r3, #4]
 8002f12:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8002f16:	687b      	ldr	r3, [r7, #4]
 8002f18:	691b      	ldr	r3, [r3, #16]
 8002f1a:	021b      	lsls	r3, r3, #8
 8002f1c:	492a      	ldr	r1, [pc, #168]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002f1e:	4313      	orrs	r3, r2
 8002f20:	604b      	str	r3, [r1, #4]
 8002f22:	e015      	b.n	8002f50 <HAL_RCC_OscConfig+0x1ec>
 8002f24:	4b29      	ldr	r3, [pc, #164]	; (8002fcc <HAL_RCC_OscConfig+0x268>)
 8002f26:	2200      	movs	r2, #0
 8002f28:	601a      	str	r2, [r3, #0]
 8002f2a:	f7fe ff25 	bl	8001d78 <HAL_GetTick>
 8002f2e:	6138      	str	r0, [r7, #16]
 8002f30:	e008      	b.n	8002f44 <HAL_RCC_OscConfig+0x1e0>
 8002f32:	f7fe ff21 	bl	8001d78 <HAL_GetTick>
 8002f36:	4602      	mov	r2, r0
 8002f38:	693b      	ldr	r3, [r7, #16]
 8002f3a:	1ad3      	subs	r3, r2, r3
 8002f3c:	2b02      	cmp	r3, #2
 8002f3e:	d901      	bls.n	8002f44 <HAL_RCC_OscConfig+0x1e0>
 8002f40:	2303      	movs	r3, #3
 8002f42:	e236      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 8002f44:	4b20      	ldr	r3, [pc, #128]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	f003 0302 	and.w	r3, r3, #2
 8002f4c:	2b00      	cmp	r3, #0
 8002f4e:	d1f0      	bne.n	8002f32 <HAL_RCC_OscConfig+0x1ce>
 8002f50:	687b      	ldr	r3, [r7, #4]
 8002f52:	681b      	ldr	r3, [r3, #0]
 8002f54:	f003 0310 	and.w	r3, r3, #16
 8002f58:	2b00      	cmp	r3, #0
 8002f5a:	f000 80b8 	beq.w	80030ce <HAL_RCC_OscConfig+0x36a>
 8002f5e:	69bb      	ldr	r3, [r7, #24]
 8002f60:	2b00      	cmp	r3, #0
 8002f62:	d170      	bne.n	8003046 <HAL_RCC_OscConfig+0x2e2>
 8002f64:	4b18      	ldr	r3, [pc, #96]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002f66:	681b      	ldr	r3, [r3, #0]
 8002f68:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002f6c:	2b00      	cmp	r3, #0
 8002f6e:	d005      	beq.n	8002f7c <HAL_RCC_OscConfig+0x218>
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	699b      	ldr	r3, [r3, #24]
 8002f74:	2b00      	cmp	r3, #0
 8002f76:	d101      	bne.n	8002f7c <HAL_RCC_OscConfig+0x218>
 8002f78:	2301      	movs	r3, #1
 8002f7a:	e21a      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 8002f7c:	687b      	ldr	r3, [r7, #4]
 8002f7e:	6a1a      	ldr	r2, [r3, #32]
 8002f80:	4b11      	ldr	r3, [pc, #68]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002f82:	685b      	ldr	r3, [r3, #4]
 8002f84:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8002f88:	429a      	cmp	r2, r3
 8002f8a:	d921      	bls.n	8002fd0 <HAL_RCC_OscConfig+0x26c>
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	6a1b      	ldr	r3, [r3, #32]
 8002f90:	4618      	mov	r0, r3
 8002f92:	f000 fc09 	bl	80037a8 <RCC_SetFlashLatencyFromMSIRange>
 8002f96:	4603      	mov	r3, r0
 8002f98:	2b00      	cmp	r3, #0
 8002f9a:	d001      	beq.n	8002fa0 <HAL_RCC_OscConfig+0x23c>
 8002f9c:	2301      	movs	r3, #1
 8002f9e:	e208      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 8002fa0:	4b09      	ldr	r3, [pc, #36]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002fa2:	685b      	ldr	r3, [r3, #4]
 8002fa4:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	6a1b      	ldr	r3, [r3, #32]
 8002fac:	4906      	ldr	r1, [pc, #24]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002fae:	4313      	orrs	r3, r2
 8002fb0:	604b      	str	r3, [r1, #4]
 8002fb2:	4b05      	ldr	r3, [pc, #20]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002fb4:	685b      	ldr	r3, [r3, #4]
 8002fb6:	f023 427f 	bic.w	r2, r3, #4278190080	; 0xff000000
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	69db      	ldr	r3, [r3, #28]
 8002fbe:	061b      	lsls	r3, r3, #24
 8002fc0:	4901      	ldr	r1, [pc, #4]	; (8002fc8 <HAL_RCC_OscConfig+0x264>)
 8002fc2:	4313      	orrs	r3, r2
 8002fc4:	604b      	str	r3, [r1, #4]
 8002fc6:	e020      	b.n	800300a <HAL_RCC_OscConfig+0x2a6>
 8002fc8:	40023800 	.word	0x40023800
 8002fcc:	42470000 	.word	0x42470000
 8002fd0:	4b99      	ldr	r3, [pc, #612]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8002fd2:	685b      	ldr	r3, [r3, #4]
 8002fd4:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	6a1b      	ldr	r3, [r3, #32]
 8002fdc:	4996      	ldr	r1, [pc, #600]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8002fde:	4313      	orrs	r3, r2
 8002fe0:	604b      	str	r3, [r1, #4]
 8002fe2:	4b95      	ldr	r3, [pc, #596]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8002fe4:	685b      	ldr	r3, [r3, #4]
 8002fe6:	f023 427f 	bic.w	r2, r3, #4278190080	; 0xff000000
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	69db      	ldr	r3, [r3, #28]
 8002fee:	061b      	lsls	r3, r3, #24
 8002ff0:	4991      	ldr	r1, [pc, #580]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8002ff2:	4313      	orrs	r3, r2
 8002ff4:	604b      	str	r3, [r1, #4]
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	6a1b      	ldr	r3, [r3, #32]
 8002ffa:	4618      	mov	r0, r3
 8002ffc:	f000 fbd4 	bl	80037a8 <RCC_SetFlashLatencyFromMSIRange>
 8003000:	4603      	mov	r3, r0
 8003002:	2b00      	cmp	r3, #0
 8003004:	d001      	beq.n	800300a <HAL_RCC_OscConfig+0x2a6>
 8003006:	2301      	movs	r3, #1
 8003008:	e1d3      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	6a1b      	ldr	r3, [r3, #32]
 800300e:	0b5b      	lsrs	r3, r3, #13
 8003010:	3301      	adds	r3, #1
 8003012:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8003016:	fa02 f303 	lsl.w	r3, r2, r3
 800301a:	4a87      	ldr	r2, [pc, #540]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 800301c:	6892      	ldr	r2, [r2, #8]
 800301e:	0912      	lsrs	r2, r2, #4
 8003020:	f002 020f 	and.w	r2, r2, #15
 8003024:	4985      	ldr	r1, [pc, #532]	; (800323c <HAL_RCC_OscConfig+0x4d8>)
 8003026:	5c8a      	ldrb	r2, [r1, r2]
 8003028:	40d3      	lsrs	r3, r2
 800302a:	4a85      	ldr	r2, [pc, #532]	; (8003240 <HAL_RCC_OscConfig+0x4dc>)
 800302c:	6013      	str	r3, [r2, #0]
 800302e:	4b85      	ldr	r3, [pc, #532]	; (8003244 <HAL_RCC_OscConfig+0x4e0>)
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	4618      	mov	r0, r3
 8003034:	f7fe fe54 	bl	8001ce0 <HAL_InitTick>
 8003038:	4603      	mov	r3, r0
 800303a:	73fb      	strb	r3, [r7, #15]
 800303c:	7bfb      	ldrb	r3, [r7, #15]
 800303e:	2b00      	cmp	r3, #0
 8003040:	d045      	beq.n	80030ce <HAL_RCC_OscConfig+0x36a>
 8003042:	7bfb      	ldrb	r3, [r7, #15]
 8003044:	e1b5      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	699b      	ldr	r3, [r3, #24]
 800304a:	2b00      	cmp	r3, #0
 800304c:	d029      	beq.n	80030a2 <HAL_RCC_OscConfig+0x33e>
 800304e:	4b7e      	ldr	r3, [pc, #504]	; (8003248 <HAL_RCC_OscConfig+0x4e4>)
 8003050:	2201      	movs	r2, #1
 8003052:	601a      	str	r2, [r3, #0]
 8003054:	f7fe fe90 	bl	8001d78 <HAL_GetTick>
 8003058:	6138      	str	r0, [r7, #16]
 800305a:	e008      	b.n	800306e <HAL_RCC_OscConfig+0x30a>
 800305c:	f7fe fe8c 	bl	8001d78 <HAL_GetTick>
 8003060:	4602      	mov	r2, r0
 8003062:	693b      	ldr	r3, [r7, #16]
 8003064:	1ad3      	subs	r3, r2, r3
 8003066:	2b02      	cmp	r3, #2
 8003068:	d901      	bls.n	800306e <HAL_RCC_OscConfig+0x30a>
 800306a:	2303      	movs	r3, #3
 800306c:	e1a1      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 800306e:	4b72      	ldr	r3, [pc, #456]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8003070:	681b      	ldr	r3, [r3, #0]
 8003072:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003076:	2b00      	cmp	r3, #0
 8003078:	d0f0      	beq.n	800305c <HAL_RCC_OscConfig+0x2f8>
 800307a:	4b6f      	ldr	r3, [pc, #444]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 800307c:	685b      	ldr	r3, [r3, #4]
 800307e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	6a1b      	ldr	r3, [r3, #32]
 8003086:	496c      	ldr	r1, [pc, #432]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8003088:	4313      	orrs	r3, r2
 800308a:	604b      	str	r3, [r1, #4]
 800308c:	4b6a      	ldr	r3, [pc, #424]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 800308e:	685b      	ldr	r3, [r3, #4]
 8003090:	f023 427f 	bic.w	r2, r3, #4278190080	; 0xff000000
 8003094:	687b      	ldr	r3, [r7, #4]
 8003096:	69db      	ldr	r3, [r3, #28]
 8003098:	061b      	lsls	r3, r3, #24
 800309a:	4967      	ldr	r1, [pc, #412]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 800309c:	4313      	orrs	r3, r2
 800309e:	604b      	str	r3, [r1, #4]
 80030a0:	e015      	b.n	80030ce <HAL_RCC_OscConfig+0x36a>
 80030a2:	4b69      	ldr	r3, [pc, #420]	; (8003248 <HAL_RCC_OscConfig+0x4e4>)
 80030a4:	2200      	movs	r2, #0
 80030a6:	601a      	str	r2, [r3, #0]
 80030a8:	f7fe fe66 	bl	8001d78 <HAL_GetTick>
 80030ac:	6138      	str	r0, [r7, #16]
 80030ae:	e008      	b.n	80030c2 <HAL_RCC_OscConfig+0x35e>
 80030b0:	f7fe fe62 	bl	8001d78 <HAL_GetTick>
 80030b4:	4602      	mov	r2, r0
 80030b6:	693b      	ldr	r3, [r7, #16]
 80030b8:	1ad3      	subs	r3, r2, r3
 80030ba:	2b02      	cmp	r3, #2
 80030bc:	d901      	bls.n	80030c2 <HAL_RCC_OscConfig+0x35e>
 80030be:	2303      	movs	r3, #3
 80030c0:	e177      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 80030c2:	4b5d      	ldr	r3, [pc, #372]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 80030c4:	681b      	ldr	r3, [r3, #0]
 80030c6:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80030ca:	2b00      	cmp	r3, #0
 80030cc:	d1f0      	bne.n	80030b0 <HAL_RCC_OscConfig+0x34c>
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	681b      	ldr	r3, [r3, #0]
 80030d2:	f003 0308 	and.w	r3, r3, #8
 80030d6:	2b00      	cmp	r3, #0
 80030d8:	d030      	beq.n	800313c <HAL_RCC_OscConfig+0x3d8>
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	695b      	ldr	r3, [r3, #20]
 80030de:	2b00      	cmp	r3, #0
 80030e0:	d016      	beq.n	8003110 <HAL_RCC_OscConfig+0x3ac>
 80030e2:	4b5a      	ldr	r3, [pc, #360]	; (800324c <HAL_RCC_OscConfig+0x4e8>)
 80030e4:	2201      	movs	r2, #1
 80030e6:	601a      	str	r2, [r3, #0]
 80030e8:	f7fe fe46 	bl	8001d78 <HAL_GetTick>
 80030ec:	6138      	str	r0, [r7, #16]
 80030ee:	e008      	b.n	8003102 <HAL_RCC_OscConfig+0x39e>
 80030f0:	f7fe fe42 	bl	8001d78 <HAL_GetTick>
 80030f4:	4602      	mov	r2, r0
 80030f6:	693b      	ldr	r3, [r7, #16]
 80030f8:	1ad3      	subs	r3, r2, r3
 80030fa:	2b02      	cmp	r3, #2
 80030fc:	d901      	bls.n	8003102 <HAL_RCC_OscConfig+0x39e>
 80030fe:	2303      	movs	r3, #3
 8003100:	e157      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 8003102:	4b4d      	ldr	r3, [pc, #308]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8003104:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003106:	f003 0302 	and.w	r3, r3, #2
 800310a:	2b00      	cmp	r3, #0
 800310c:	d0f0      	beq.n	80030f0 <HAL_RCC_OscConfig+0x38c>
 800310e:	e015      	b.n	800313c <HAL_RCC_OscConfig+0x3d8>
 8003110:	4b4e      	ldr	r3, [pc, #312]	; (800324c <HAL_RCC_OscConfig+0x4e8>)
 8003112:	2200      	movs	r2, #0
 8003114:	601a      	str	r2, [r3, #0]
 8003116:	f7fe fe2f 	bl	8001d78 <HAL_GetTick>
 800311a:	6138      	str	r0, [r7, #16]
 800311c:	e008      	b.n	8003130 <HAL_RCC_OscConfig+0x3cc>
 800311e:	f7fe fe2b 	bl	8001d78 <HAL_GetTick>
 8003122:	4602      	mov	r2, r0
 8003124:	693b      	ldr	r3, [r7, #16]
 8003126:	1ad3      	subs	r3, r2, r3
 8003128:	2b02      	cmp	r3, #2
 800312a:	d901      	bls.n	8003130 <HAL_RCC_OscConfig+0x3cc>
 800312c:	2303      	movs	r3, #3
 800312e:	e140      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 8003130:	4b41      	ldr	r3, [pc, #260]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8003132:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003134:	f003 0302 	and.w	r3, r3, #2
 8003138:	2b00      	cmp	r3, #0
 800313a:	d1f0      	bne.n	800311e <HAL_RCC_OscConfig+0x3ba>
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	681b      	ldr	r3, [r3, #0]
 8003140:	f003 0304 	and.w	r3, r3, #4
 8003144:	2b00      	cmp	r3, #0
 8003146:	f000 80b5 	beq.w	80032b4 <HAL_RCC_OscConfig+0x550>
 800314a:	2300      	movs	r3, #0
 800314c:	77fb      	strb	r3, [r7, #31]
 800314e:	4b3a      	ldr	r3, [pc, #232]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8003150:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003152:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003156:	2b00      	cmp	r3, #0
 8003158:	d10d      	bne.n	8003176 <HAL_RCC_OscConfig+0x412>
 800315a:	4b37      	ldr	r3, [pc, #220]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 800315c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800315e:	4a36      	ldr	r2, [pc, #216]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8003160:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003164:	6253      	str	r3, [r2, #36]	; 0x24
 8003166:	4b34      	ldr	r3, [pc, #208]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8003168:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800316a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800316e:	60bb      	str	r3, [r7, #8]
 8003170:	68bb      	ldr	r3, [r7, #8]
 8003172:	2301      	movs	r3, #1
 8003174:	77fb      	strb	r3, [r7, #31]
 8003176:	4b36      	ldr	r3, [pc, #216]	; (8003250 <HAL_RCC_OscConfig+0x4ec>)
 8003178:	681b      	ldr	r3, [r3, #0]
 800317a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800317e:	2b00      	cmp	r3, #0
 8003180:	d118      	bne.n	80031b4 <HAL_RCC_OscConfig+0x450>
 8003182:	4b33      	ldr	r3, [pc, #204]	; (8003250 <HAL_RCC_OscConfig+0x4ec>)
 8003184:	681b      	ldr	r3, [r3, #0]
 8003186:	4a32      	ldr	r2, [pc, #200]	; (8003250 <HAL_RCC_OscConfig+0x4ec>)
 8003188:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800318c:	6013      	str	r3, [r2, #0]
 800318e:	f7fe fdf3 	bl	8001d78 <HAL_GetTick>
 8003192:	6138      	str	r0, [r7, #16]
 8003194:	e008      	b.n	80031a8 <HAL_RCC_OscConfig+0x444>
 8003196:	f7fe fdef 	bl	8001d78 <HAL_GetTick>
 800319a:	4602      	mov	r2, r0
 800319c:	693b      	ldr	r3, [r7, #16]
 800319e:	1ad3      	subs	r3, r2, r3
 80031a0:	2b64      	cmp	r3, #100	; 0x64
 80031a2:	d901      	bls.n	80031a8 <HAL_RCC_OscConfig+0x444>
 80031a4:	2303      	movs	r3, #3
 80031a6:	e104      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 80031a8:	4b29      	ldr	r3, [pc, #164]	; (8003250 <HAL_RCC_OscConfig+0x4ec>)
 80031aa:	681b      	ldr	r3, [r3, #0]
 80031ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80031b0:	2b00      	cmp	r3, #0
 80031b2:	d0f0      	beq.n	8003196 <HAL_RCC_OscConfig+0x432>
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	689b      	ldr	r3, [r3, #8]
 80031b8:	2b01      	cmp	r3, #1
 80031ba:	d106      	bne.n	80031ca <HAL_RCC_OscConfig+0x466>
 80031bc:	4b1e      	ldr	r3, [pc, #120]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 80031be:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80031c0:	4a1d      	ldr	r2, [pc, #116]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 80031c2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80031c6:	6353      	str	r3, [r2, #52]	; 0x34
 80031c8:	e02d      	b.n	8003226 <HAL_RCC_OscConfig+0x4c2>
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	689b      	ldr	r3, [r3, #8]
 80031ce:	2b00      	cmp	r3, #0
 80031d0:	d10c      	bne.n	80031ec <HAL_RCC_OscConfig+0x488>
 80031d2:	4b19      	ldr	r3, [pc, #100]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 80031d4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80031d6:	4a18      	ldr	r2, [pc, #96]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 80031d8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80031dc:	6353      	str	r3, [r2, #52]	; 0x34
 80031de:	4b16      	ldr	r3, [pc, #88]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 80031e0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80031e2:	4a15      	ldr	r2, [pc, #84]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 80031e4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80031e8:	6353      	str	r3, [r2, #52]	; 0x34
 80031ea:	e01c      	b.n	8003226 <HAL_RCC_OscConfig+0x4c2>
 80031ec:	687b      	ldr	r3, [r7, #4]
 80031ee:	689b      	ldr	r3, [r3, #8]
 80031f0:	2b05      	cmp	r3, #5
 80031f2:	d10c      	bne.n	800320e <HAL_RCC_OscConfig+0x4aa>
 80031f4:	4b10      	ldr	r3, [pc, #64]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 80031f6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80031f8:	4a0f      	ldr	r2, [pc, #60]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 80031fa:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80031fe:	6353      	str	r3, [r2, #52]	; 0x34
 8003200:	4b0d      	ldr	r3, [pc, #52]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8003202:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003204:	4a0c      	ldr	r2, [pc, #48]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8003206:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800320a:	6353      	str	r3, [r2, #52]	; 0x34
 800320c:	e00b      	b.n	8003226 <HAL_RCC_OscConfig+0x4c2>
 800320e:	4b0a      	ldr	r3, [pc, #40]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8003210:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003212:	4a09      	ldr	r2, [pc, #36]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8003214:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003218:	6353      	str	r3, [r2, #52]	; 0x34
 800321a:	4b07      	ldr	r3, [pc, #28]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 800321c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800321e:	4a06      	ldr	r2, [pc, #24]	; (8003238 <HAL_RCC_OscConfig+0x4d4>)
 8003220:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8003224:	6353      	str	r3, [r2, #52]	; 0x34
 8003226:	687b      	ldr	r3, [r7, #4]
 8003228:	689b      	ldr	r3, [r3, #8]
 800322a:	2b00      	cmp	r3, #0
 800322c:	d024      	beq.n	8003278 <HAL_RCC_OscConfig+0x514>
 800322e:	f7fe fda3 	bl	8001d78 <HAL_GetTick>
 8003232:	6138      	str	r0, [r7, #16]
 8003234:	e019      	b.n	800326a <HAL_RCC_OscConfig+0x506>
 8003236:	bf00      	nop
 8003238:	40023800 	.word	0x40023800
 800323c:	08006590 	.word	0x08006590
 8003240:	20000030 	.word	0x20000030
 8003244:	20000034 	.word	0x20000034
 8003248:	42470020 	.word	0x42470020
 800324c:	42470680 	.word	0x42470680
 8003250:	40007000 	.word	0x40007000
 8003254:	f7fe fd90 	bl	8001d78 <HAL_GetTick>
 8003258:	4602      	mov	r2, r0
 800325a:	693b      	ldr	r3, [r7, #16]
 800325c:	1ad3      	subs	r3, r2, r3
 800325e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003262:	4293      	cmp	r3, r2
 8003264:	d901      	bls.n	800326a <HAL_RCC_OscConfig+0x506>
 8003266:	2303      	movs	r3, #3
 8003268:	e0a3      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 800326a:	4b54      	ldr	r3, [pc, #336]	; (80033bc <HAL_RCC_OscConfig+0x658>)
 800326c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800326e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003272:	2b00      	cmp	r3, #0
 8003274:	d0ee      	beq.n	8003254 <HAL_RCC_OscConfig+0x4f0>
 8003276:	e014      	b.n	80032a2 <HAL_RCC_OscConfig+0x53e>
 8003278:	f7fe fd7e 	bl	8001d78 <HAL_GetTick>
 800327c:	6138      	str	r0, [r7, #16]
 800327e:	e00a      	b.n	8003296 <HAL_RCC_OscConfig+0x532>
 8003280:	f7fe fd7a 	bl	8001d78 <HAL_GetTick>
 8003284:	4602      	mov	r2, r0
 8003286:	693b      	ldr	r3, [r7, #16]
 8003288:	1ad3      	subs	r3, r2, r3
 800328a:	f241 3288 	movw	r2, #5000	; 0x1388
 800328e:	4293      	cmp	r3, r2
 8003290:	d901      	bls.n	8003296 <HAL_RCC_OscConfig+0x532>
 8003292:	2303      	movs	r3, #3
 8003294:	e08d      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 8003296:	4b49      	ldr	r3, [pc, #292]	; (80033bc <HAL_RCC_OscConfig+0x658>)
 8003298:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800329a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800329e:	2b00      	cmp	r3, #0
 80032a0:	d1ee      	bne.n	8003280 <HAL_RCC_OscConfig+0x51c>
 80032a2:	7ffb      	ldrb	r3, [r7, #31]
 80032a4:	2b01      	cmp	r3, #1
 80032a6:	d105      	bne.n	80032b4 <HAL_RCC_OscConfig+0x550>
 80032a8:	4b44      	ldr	r3, [pc, #272]	; (80033bc <HAL_RCC_OscConfig+0x658>)
 80032aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80032ac:	4a43      	ldr	r2, [pc, #268]	; (80033bc <HAL_RCC_OscConfig+0x658>)
 80032ae:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80032b2:	6253      	str	r3, [r2, #36]	; 0x24
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80032b8:	2b00      	cmp	r3, #0
 80032ba:	d079      	beq.n	80033b0 <HAL_RCC_OscConfig+0x64c>
 80032bc:	69bb      	ldr	r3, [r7, #24]
 80032be:	2b0c      	cmp	r3, #12
 80032c0:	d056      	beq.n	8003370 <HAL_RCC_OscConfig+0x60c>
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80032c6:	2b02      	cmp	r3, #2
 80032c8:	d13b      	bne.n	8003342 <HAL_RCC_OscConfig+0x5de>
 80032ca:	4b3d      	ldr	r3, [pc, #244]	; (80033c0 <HAL_RCC_OscConfig+0x65c>)
 80032cc:	2200      	movs	r2, #0
 80032ce:	601a      	str	r2, [r3, #0]
 80032d0:	f7fe fd52 	bl	8001d78 <HAL_GetTick>
 80032d4:	6138      	str	r0, [r7, #16]
 80032d6:	e008      	b.n	80032ea <HAL_RCC_OscConfig+0x586>
 80032d8:	f7fe fd4e 	bl	8001d78 <HAL_GetTick>
 80032dc:	4602      	mov	r2, r0
 80032de:	693b      	ldr	r3, [r7, #16]
 80032e0:	1ad3      	subs	r3, r2, r3
 80032e2:	2b02      	cmp	r3, #2
 80032e4:	d901      	bls.n	80032ea <HAL_RCC_OscConfig+0x586>
 80032e6:	2303      	movs	r3, #3
 80032e8:	e063      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 80032ea:	4b34      	ldr	r3, [pc, #208]	; (80033bc <HAL_RCC_OscConfig+0x658>)
 80032ec:	681b      	ldr	r3, [r3, #0]
 80032ee:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80032f2:	2b00      	cmp	r3, #0
 80032f4:	d1f0      	bne.n	80032d8 <HAL_RCC_OscConfig+0x574>
 80032f6:	4b31      	ldr	r3, [pc, #196]	; (80033bc <HAL_RCC_OscConfig+0x658>)
 80032f8:	689b      	ldr	r3, [r3, #8]
 80032fa:	f423 027d 	bic.w	r2, r3, #16580608	; 0xfd0000
 80032fe:	687b      	ldr	r3, [r7, #4]
 8003300:	6a99      	ldr	r1, [r3, #40]	; 0x28
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003306:	4319      	orrs	r1, r3
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800330c:	430b      	orrs	r3, r1
 800330e:	492b      	ldr	r1, [pc, #172]	; (80033bc <HAL_RCC_OscConfig+0x658>)
 8003310:	4313      	orrs	r3, r2
 8003312:	608b      	str	r3, [r1, #8]
 8003314:	4b2a      	ldr	r3, [pc, #168]	; (80033c0 <HAL_RCC_OscConfig+0x65c>)
 8003316:	2201      	movs	r2, #1
 8003318:	601a      	str	r2, [r3, #0]
 800331a:	f7fe fd2d 	bl	8001d78 <HAL_GetTick>
 800331e:	6138      	str	r0, [r7, #16]
 8003320:	e008      	b.n	8003334 <HAL_RCC_OscConfig+0x5d0>
 8003322:	f7fe fd29 	bl	8001d78 <HAL_GetTick>
 8003326:	4602      	mov	r2, r0
 8003328:	693b      	ldr	r3, [r7, #16]
 800332a:	1ad3      	subs	r3, r2, r3
 800332c:	2b02      	cmp	r3, #2
 800332e:	d901      	bls.n	8003334 <HAL_RCC_OscConfig+0x5d0>
 8003330:	2303      	movs	r3, #3
 8003332:	e03e      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 8003334:	4b21      	ldr	r3, [pc, #132]	; (80033bc <HAL_RCC_OscConfig+0x658>)
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800333c:	2b00      	cmp	r3, #0
 800333e:	d0f0      	beq.n	8003322 <HAL_RCC_OscConfig+0x5be>
 8003340:	e036      	b.n	80033b0 <HAL_RCC_OscConfig+0x64c>
 8003342:	4b1f      	ldr	r3, [pc, #124]	; (80033c0 <HAL_RCC_OscConfig+0x65c>)
 8003344:	2200      	movs	r2, #0
 8003346:	601a      	str	r2, [r3, #0]
 8003348:	f7fe fd16 	bl	8001d78 <HAL_GetTick>
 800334c:	6138      	str	r0, [r7, #16]
 800334e:	e008      	b.n	8003362 <HAL_RCC_OscConfig+0x5fe>
 8003350:	f7fe fd12 	bl	8001d78 <HAL_GetTick>
 8003354:	4602      	mov	r2, r0
 8003356:	693b      	ldr	r3, [r7, #16]
 8003358:	1ad3      	subs	r3, r2, r3
 800335a:	2b02      	cmp	r3, #2
 800335c:	d901      	bls.n	8003362 <HAL_RCC_OscConfig+0x5fe>
 800335e:	2303      	movs	r3, #3
 8003360:	e027      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 8003362:	4b16      	ldr	r3, [pc, #88]	; (80033bc <HAL_RCC_OscConfig+0x658>)
 8003364:	681b      	ldr	r3, [r3, #0]
 8003366:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800336a:	2b00      	cmp	r3, #0
 800336c:	d1f0      	bne.n	8003350 <HAL_RCC_OscConfig+0x5ec>
 800336e:	e01f      	b.n	80033b0 <HAL_RCC_OscConfig+0x64c>
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003374:	2b01      	cmp	r3, #1
 8003376:	d101      	bne.n	800337c <HAL_RCC_OscConfig+0x618>
 8003378:	2301      	movs	r3, #1
 800337a:	e01a      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 800337c:	4b0f      	ldr	r3, [pc, #60]	; (80033bc <HAL_RCC_OscConfig+0x658>)
 800337e:	689b      	ldr	r3, [r3, #8]
 8003380:	617b      	str	r3, [r7, #20]
 8003382:	697b      	ldr	r3, [r7, #20]
 8003384:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800338c:	429a      	cmp	r2, r3
 800338e:	d10d      	bne.n	80033ac <HAL_RCC_OscConfig+0x648>
 8003390:	697b      	ldr	r3, [r7, #20]
 8003392:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800339a:	429a      	cmp	r2, r3
 800339c:	d106      	bne.n	80033ac <HAL_RCC_OscConfig+0x648>
 800339e:	697b      	ldr	r3, [r7, #20]
 80033a0:	f403 0240 	and.w	r2, r3, #12582912	; 0xc00000
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033a8:	429a      	cmp	r2, r3
 80033aa:	d001      	beq.n	80033b0 <HAL_RCC_OscConfig+0x64c>
 80033ac:	2301      	movs	r3, #1
 80033ae:	e000      	b.n	80033b2 <HAL_RCC_OscConfig+0x64e>
 80033b0:	2300      	movs	r3, #0
 80033b2:	4618      	mov	r0, r3
 80033b4:	3720      	adds	r7, #32
 80033b6:	46bd      	mov	sp, r7
 80033b8:	bd80      	pop	{r7, pc}
 80033ba:	bf00      	nop
 80033bc:	40023800 	.word	0x40023800
 80033c0:	42470060 	.word	0x42470060

080033c4 <HAL_RCC_ClockConfig>:
 80033c4:	b580      	push	{r7, lr}
 80033c6:	b084      	sub	sp, #16
 80033c8:	af00      	add	r7, sp, #0
 80033ca:	6078      	str	r0, [r7, #4]
 80033cc:	6039      	str	r1, [r7, #0]
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	2b00      	cmp	r3, #0
 80033d2:	d101      	bne.n	80033d8 <HAL_RCC_ClockConfig+0x14>
 80033d4:	2301      	movs	r3, #1
 80033d6:	e11a      	b.n	800360e <HAL_RCC_ClockConfig+0x24a>
 80033d8:	4b8f      	ldr	r3, [pc, #572]	; (8003618 <HAL_RCC_ClockConfig+0x254>)
 80033da:	681b      	ldr	r3, [r3, #0]
 80033dc:	f003 0301 	and.w	r3, r3, #1
 80033e0:	683a      	ldr	r2, [r7, #0]
 80033e2:	429a      	cmp	r2, r3
 80033e4:	d919      	bls.n	800341a <HAL_RCC_ClockConfig+0x56>
 80033e6:	683b      	ldr	r3, [r7, #0]
 80033e8:	2b01      	cmp	r3, #1
 80033ea:	d105      	bne.n	80033f8 <HAL_RCC_ClockConfig+0x34>
 80033ec:	4b8a      	ldr	r3, [pc, #552]	; (8003618 <HAL_RCC_ClockConfig+0x254>)
 80033ee:	681b      	ldr	r3, [r3, #0]
 80033f0:	4a89      	ldr	r2, [pc, #548]	; (8003618 <HAL_RCC_ClockConfig+0x254>)
 80033f2:	f043 0304 	orr.w	r3, r3, #4
 80033f6:	6013      	str	r3, [r2, #0]
 80033f8:	4b87      	ldr	r3, [pc, #540]	; (8003618 <HAL_RCC_ClockConfig+0x254>)
 80033fa:	681b      	ldr	r3, [r3, #0]
 80033fc:	f023 0201 	bic.w	r2, r3, #1
 8003400:	4985      	ldr	r1, [pc, #532]	; (8003618 <HAL_RCC_ClockConfig+0x254>)
 8003402:	683b      	ldr	r3, [r7, #0]
 8003404:	4313      	orrs	r3, r2
 8003406:	600b      	str	r3, [r1, #0]
 8003408:	4b83      	ldr	r3, [pc, #524]	; (8003618 <HAL_RCC_ClockConfig+0x254>)
 800340a:	681b      	ldr	r3, [r3, #0]
 800340c:	f003 0301 	and.w	r3, r3, #1
 8003410:	683a      	ldr	r2, [r7, #0]
 8003412:	429a      	cmp	r2, r3
 8003414:	d001      	beq.n	800341a <HAL_RCC_ClockConfig+0x56>
 8003416:	2301      	movs	r3, #1
 8003418:	e0f9      	b.n	800360e <HAL_RCC_ClockConfig+0x24a>
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	681b      	ldr	r3, [r3, #0]
 800341e:	f003 0302 	and.w	r3, r3, #2
 8003422:	2b00      	cmp	r3, #0
 8003424:	d008      	beq.n	8003438 <HAL_RCC_ClockConfig+0x74>
 8003426:	4b7d      	ldr	r3, [pc, #500]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 8003428:	689b      	ldr	r3, [r3, #8]
 800342a:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	689b      	ldr	r3, [r3, #8]
 8003432:	497a      	ldr	r1, [pc, #488]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 8003434:	4313      	orrs	r3, r2
 8003436:	608b      	str	r3, [r1, #8]
 8003438:	687b      	ldr	r3, [r7, #4]
 800343a:	681b      	ldr	r3, [r3, #0]
 800343c:	f003 0301 	and.w	r3, r3, #1
 8003440:	2b00      	cmp	r3, #0
 8003442:	f000 808e 	beq.w	8003562 <HAL_RCC_ClockConfig+0x19e>
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	685b      	ldr	r3, [r3, #4]
 800344a:	2b02      	cmp	r3, #2
 800344c:	d107      	bne.n	800345e <HAL_RCC_ClockConfig+0x9a>
 800344e:	4b73      	ldr	r3, [pc, #460]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003456:	2b00      	cmp	r3, #0
 8003458:	d121      	bne.n	800349e <HAL_RCC_ClockConfig+0xda>
 800345a:	2301      	movs	r3, #1
 800345c:	e0d7      	b.n	800360e <HAL_RCC_ClockConfig+0x24a>
 800345e:	687b      	ldr	r3, [r7, #4]
 8003460:	685b      	ldr	r3, [r3, #4]
 8003462:	2b03      	cmp	r3, #3
 8003464:	d107      	bne.n	8003476 <HAL_RCC_ClockConfig+0xb2>
 8003466:	4b6d      	ldr	r3, [pc, #436]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 8003468:	681b      	ldr	r3, [r3, #0]
 800346a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800346e:	2b00      	cmp	r3, #0
 8003470:	d115      	bne.n	800349e <HAL_RCC_ClockConfig+0xda>
 8003472:	2301      	movs	r3, #1
 8003474:	e0cb      	b.n	800360e <HAL_RCC_ClockConfig+0x24a>
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	685b      	ldr	r3, [r3, #4]
 800347a:	2b01      	cmp	r3, #1
 800347c:	d107      	bne.n	800348e <HAL_RCC_ClockConfig+0xca>
 800347e:	4b67      	ldr	r3, [pc, #412]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	f003 0302 	and.w	r3, r3, #2
 8003486:	2b00      	cmp	r3, #0
 8003488:	d109      	bne.n	800349e <HAL_RCC_ClockConfig+0xda>
 800348a:	2301      	movs	r3, #1
 800348c:	e0bf      	b.n	800360e <HAL_RCC_ClockConfig+0x24a>
 800348e:	4b63      	ldr	r3, [pc, #396]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 8003490:	681b      	ldr	r3, [r3, #0]
 8003492:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003496:	2b00      	cmp	r3, #0
 8003498:	d101      	bne.n	800349e <HAL_RCC_ClockConfig+0xda>
 800349a:	2301      	movs	r3, #1
 800349c:	e0b7      	b.n	800360e <HAL_RCC_ClockConfig+0x24a>
 800349e:	4b5f      	ldr	r3, [pc, #380]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 80034a0:	689b      	ldr	r3, [r3, #8]
 80034a2:	f023 0203 	bic.w	r2, r3, #3
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	685b      	ldr	r3, [r3, #4]
 80034aa:	495c      	ldr	r1, [pc, #368]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 80034ac:	4313      	orrs	r3, r2
 80034ae:	608b      	str	r3, [r1, #8]
 80034b0:	f7fe fc62 	bl	8001d78 <HAL_GetTick>
 80034b4:	60f8      	str	r0, [r7, #12]
 80034b6:	687b      	ldr	r3, [r7, #4]
 80034b8:	685b      	ldr	r3, [r3, #4]
 80034ba:	2b02      	cmp	r3, #2
 80034bc:	d112      	bne.n	80034e4 <HAL_RCC_ClockConfig+0x120>
 80034be:	e00a      	b.n	80034d6 <HAL_RCC_ClockConfig+0x112>
 80034c0:	f7fe fc5a 	bl	8001d78 <HAL_GetTick>
 80034c4:	4602      	mov	r2, r0
 80034c6:	68fb      	ldr	r3, [r7, #12]
 80034c8:	1ad3      	subs	r3, r2, r3
 80034ca:	f241 3288 	movw	r2, #5000	; 0x1388
 80034ce:	4293      	cmp	r3, r2
 80034d0:	d901      	bls.n	80034d6 <HAL_RCC_ClockConfig+0x112>
 80034d2:	2303      	movs	r3, #3
 80034d4:	e09b      	b.n	800360e <HAL_RCC_ClockConfig+0x24a>
 80034d6:	4b51      	ldr	r3, [pc, #324]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 80034d8:	689b      	ldr	r3, [r3, #8]
 80034da:	f003 030c 	and.w	r3, r3, #12
 80034de:	2b08      	cmp	r3, #8
 80034e0:	d1ee      	bne.n	80034c0 <HAL_RCC_ClockConfig+0xfc>
 80034e2:	e03e      	b.n	8003562 <HAL_RCC_ClockConfig+0x19e>
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	685b      	ldr	r3, [r3, #4]
 80034e8:	2b03      	cmp	r3, #3
 80034ea:	d112      	bne.n	8003512 <HAL_RCC_ClockConfig+0x14e>
 80034ec:	e00a      	b.n	8003504 <HAL_RCC_ClockConfig+0x140>
 80034ee:	f7fe fc43 	bl	8001d78 <HAL_GetTick>
 80034f2:	4602      	mov	r2, r0
 80034f4:	68fb      	ldr	r3, [r7, #12]
 80034f6:	1ad3      	subs	r3, r2, r3
 80034f8:	f241 3288 	movw	r2, #5000	; 0x1388
 80034fc:	4293      	cmp	r3, r2
 80034fe:	d901      	bls.n	8003504 <HAL_RCC_ClockConfig+0x140>
 8003500:	2303      	movs	r3, #3
 8003502:	e084      	b.n	800360e <HAL_RCC_ClockConfig+0x24a>
 8003504:	4b45      	ldr	r3, [pc, #276]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 8003506:	689b      	ldr	r3, [r3, #8]
 8003508:	f003 030c 	and.w	r3, r3, #12
 800350c:	2b0c      	cmp	r3, #12
 800350e:	d1ee      	bne.n	80034ee <HAL_RCC_ClockConfig+0x12a>
 8003510:	e027      	b.n	8003562 <HAL_RCC_ClockConfig+0x19e>
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	685b      	ldr	r3, [r3, #4]
 8003516:	2b01      	cmp	r3, #1
 8003518:	d11d      	bne.n	8003556 <HAL_RCC_ClockConfig+0x192>
 800351a:	e00a      	b.n	8003532 <HAL_RCC_ClockConfig+0x16e>
 800351c:	f7fe fc2c 	bl	8001d78 <HAL_GetTick>
 8003520:	4602      	mov	r2, r0
 8003522:	68fb      	ldr	r3, [r7, #12]
 8003524:	1ad3      	subs	r3, r2, r3
 8003526:	f241 3288 	movw	r2, #5000	; 0x1388
 800352a:	4293      	cmp	r3, r2
 800352c:	d901      	bls.n	8003532 <HAL_RCC_ClockConfig+0x16e>
 800352e:	2303      	movs	r3, #3
 8003530:	e06d      	b.n	800360e <HAL_RCC_ClockConfig+0x24a>
 8003532:	4b3a      	ldr	r3, [pc, #232]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 8003534:	689b      	ldr	r3, [r3, #8]
 8003536:	f003 030c 	and.w	r3, r3, #12
 800353a:	2b04      	cmp	r3, #4
 800353c:	d1ee      	bne.n	800351c <HAL_RCC_ClockConfig+0x158>
 800353e:	e010      	b.n	8003562 <HAL_RCC_ClockConfig+0x19e>
 8003540:	f7fe fc1a 	bl	8001d78 <HAL_GetTick>
 8003544:	4602      	mov	r2, r0
 8003546:	68fb      	ldr	r3, [r7, #12]
 8003548:	1ad3      	subs	r3, r2, r3
 800354a:	f241 3288 	movw	r2, #5000	; 0x1388
 800354e:	4293      	cmp	r3, r2
 8003550:	d901      	bls.n	8003556 <HAL_RCC_ClockConfig+0x192>
 8003552:	2303      	movs	r3, #3
 8003554:	e05b      	b.n	800360e <HAL_RCC_ClockConfig+0x24a>
 8003556:	4b31      	ldr	r3, [pc, #196]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 8003558:	689b      	ldr	r3, [r3, #8]
 800355a:	f003 030c 	and.w	r3, r3, #12
 800355e:	2b00      	cmp	r3, #0
 8003560:	d1ee      	bne.n	8003540 <HAL_RCC_ClockConfig+0x17c>
 8003562:	4b2d      	ldr	r3, [pc, #180]	; (8003618 <HAL_RCC_ClockConfig+0x254>)
 8003564:	681b      	ldr	r3, [r3, #0]
 8003566:	f003 0301 	and.w	r3, r3, #1
 800356a:	683a      	ldr	r2, [r7, #0]
 800356c:	429a      	cmp	r2, r3
 800356e:	d219      	bcs.n	80035a4 <HAL_RCC_ClockConfig+0x1e0>
 8003570:	683b      	ldr	r3, [r7, #0]
 8003572:	2b01      	cmp	r3, #1
 8003574:	d105      	bne.n	8003582 <HAL_RCC_ClockConfig+0x1be>
 8003576:	4b28      	ldr	r3, [pc, #160]	; (8003618 <HAL_RCC_ClockConfig+0x254>)
 8003578:	681b      	ldr	r3, [r3, #0]
 800357a:	4a27      	ldr	r2, [pc, #156]	; (8003618 <HAL_RCC_ClockConfig+0x254>)
 800357c:	f043 0304 	orr.w	r3, r3, #4
 8003580:	6013      	str	r3, [r2, #0]
 8003582:	4b25      	ldr	r3, [pc, #148]	; (8003618 <HAL_RCC_ClockConfig+0x254>)
 8003584:	681b      	ldr	r3, [r3, #0]
 8003586:	f023 0201 	bic.w	r2, r3, #1
 800358a:	4923      	ldr	r1, [pc, #140]	; (8003618 <HAL_RCC_ClockConfig+0x254>)
 800358c:	683b      	ldr	r3, [r7, #0]
 800358e:	4313      	orrs	r3, r2
 8003590:	600b      	str	r3, [r1, #0]
 8003592:	4b21      	ldr	r3, [pc, #132]	; (8003618 <HAL_RCC_ClockConfig+0x254>)
 8003594:	681b      	ldr	r3, [r3, #0]
 8003596:	f003 0301 	and.w	r3, r3, #1
 800359a:	683a      	ldr	r2, [r7, #0]
 800359c:	429a      	cmp	r2, r3
 800359e:	d001      	beq.n	80035a4 <HAL_RCC_ClockConfig+0x1e0>
 80035a0:	2301      	movs	r3, #1
 80035a2:	e034      	b.n	800360e <HAL_RCC_ClockConfig+0x24a>
 80035a4:	687b      	ldr	r3, [r7, #4]
 80035a6:	681b      	ldr	r3, [r3, #0]
 80035a8:	f003 0304 	and.w	r3, r3, #4
 80035ac:	2b00      	cmp	r3, #0
 80035ae:	d008      	beq.n	80035c2 <HAL_RCC_ClockConfig+0x1fe>
 80035b0:	4b1a      	ldr	r3, [pc, #104]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 80035b2:	689b      	ldr	r3, [r3, #8]
 80035b4:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	68db      	ldr	r3, [r3, #12]
 80035bc:	4917      	ldr	r1, [pc, #92]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 80035be:	4313      	orrs	r3, r2
 80035c0:	608b      	str	r3, [r1, #8]
 80035c2:	687b      	ldr	r3, [r7, #4]
 80035c4:	681b      	ldr	r3, [r3, #0]
 80035c6:	f003 0308 	and.w	r3, r3, #8
 80035ca:	2b00      	cmp	r3, #0
 80035cc:	d009      	beq.n	80035e2 <HAL_RCC_ClockConfig+0x21e>
 80035ce:	4b13      	ldr	r3, [pc, #76]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 80035d0:	689b      	ldr	r3, [r3, #8]
 80035d2:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	691b      	ldr	r3, [r3, #16]
 80035da:	00db      	lsls	r3, r3, #3
 80035dc:	490f      	ldr	r1, [pc, #60]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 80035de:	4313      	orrs	r3, r2
 80035e0:	608b      	str	r3, [r1, #8]
 80035e2:	f000 f823 	bl	800362c <HAL_RCC_GetSysClockFreq>
 80035e6:	4602      	mov	r2, r0
 80035e8:	4b0c      	ldr	r3, [pc, #48]	; (800361c <HAL_RCC_ClockConfig+0x258>)
 80035ea:	689b      	ldr	r3, [r3, #8]
 80035ec:	091b      	lsrs	r3, r3, #4
 80035ee:	f003 030f 	and.w	r3, r3, #15
 80035f2:	490b      	ldr	r1, [pc, #44]	; (8003620 <HAL_RCC_ClockConfig+0x25c>)
 80035f4:	5ccb      	ldrb	r3, [r1, r3]
 80035f6:	fa22 f303 	lsr.w	r3, r2, r3
 80035fa:	4a0a      	ldr	r2, [pc, #40]	; (8003624 <HAL_RCC_ClockConfig+0x260>)
 80035fc:	6013      	str	r3, [r2, #0]
 80035fe:	4b0a      	ldr	r3, [pc, #40]	; (8003628 <HAL_RCC_ClockConfig+0x264>)
 8003600:	681b      	ldr	r3, [r3, #0]
 8003602:	4618      	mov	r0, r3
 8003604:	f7fe fb6c 	bl	8001ce0 <HAL_InitTick>
 8003608:	4603      	mov	r3, r0
 800360a:	72fb      	strb	r3, [r7, #11]
 800360c:	7afb      	ldrb	r3, [r7, #11]
 800360e:	4618      	mov	r0, r3
 8003610:	3710      	adds	r7, #16
 8003612:	46bd      	mov	sp, r7
 8003614:	bd80      	pop	{r7, pc}
 8003616:	bf00      	nop
 8003618:	40023c00 	.word	0x40023c00
 800361c:	40023800 	.word	0x40023800
 8003620:	08006590 	.word	0x08006590
 8003624:	20000030 	.word	0x20000030
 8003628:	20000034 	.word	0x20000034

0800362c <HAL_RCC_GetSysClockFreq>:
 800362c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003630:	b08e      	sub	sp, #56	; 0x38
 8003632:	af00      	add	r7, sp, #0
 8003634:	4b58      	ldr	r3, [pc, #352]	; (8003798 <HAL_RCC_GetSysClockFreq+0x16c>)
 8003636:	689b      	ldr	r3, [r3, #8]
 8003638:	62fb      	str	r3, [r7, #44]	; 0x2c
 800363a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800363c:	f003 030c 	and.w	r3, r3, #12
 8003640:	2b0c      	cmp	r3, #12
 8003642:	d00d      	beq.n	8003660 <HAL_RCC_GetSysClockFreq+0x34>
 8003644:	2b0c      	cmp	r3, #12
 8003646:	f200 8092 	bhi.w	800376e <HAL_RCC_GetSysClockFreq+0x142>
 800364a:	2b04      	cmp	r3, #4
 800364c:	d002      	beq.n	8003654 <HAL_RCC_GetSysClockFreq+0x28>
 800364e:	2b08      	cmp	r3, #8
 8003650:	d003      	beq.n	800365a <HAL_RCC_GetSysClockFreq+0x2e>
 8003652:	e08c      	b.n	800376e <HAL_RCC_GetSysClockFreq+0x142>
 8003654:	4b51      	ldr	r3, [pc, #324]	; (800379c <HAL_RCC_GetSysClockFreq+0x170>)
 8003656:	633b      	str	r3, [r7, #48]	; 0x30
 8003658:	e097      	b.n	800378a <HAL_RCC_GetSysClockFreq+0x15e>
 800365a:	4b51      	ldr	r3, [pc, #324]	; (80037a0 <HAL_RCC_GetSysClockFreq+0x174>)
 800365c:	633b      	str	r3, [r7, #48]	; 0x30
 800365e:	e094      	b.n	800378a <HAL_RCC_GetSysClockFreq+0x15e>
 8003660:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003662:	0c9b      	lsrs	r3, r3, #18
 8003664:	f003 020f 	and.w	r2, r3, #15
 8003668:	4b4e      	ldr	r3, [pc, #312]	; (80037a4 <HAL_RCC_GetSysClockFreq+0x178>)
 800366a:	5c9b      	ldrb	r3, [r3, r2]
 800366c:	62bb      	str	r3, [r7, #40]	; 0x28
 800366e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003670:	0d9b      	lsrs	r3, r3, #22
 8003672:	f003 0303 	and.w	r3, r3, #3
 8003676:	3301      	adds	r3, #1
 8003678:	627b      	str	r3, [r7, #36]	; 0x24
 800367a:	4b47      	ldr	r3, [pc, #284]	; (8003798 <HAL_RCC_GetSysClockFreq+0x16c>)
 800367c:	689b      	ldr	r3, [r3, #8]
 800367e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003682:	2b00      	cmp	r3, #0
 8003684:	d021      	beq.n	80036ca <HAL_RCC_GetSysClockFreq+0x9e>
 8003686:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003688:	2200      	movs	r2, #0
 800368a:	61bb      	str	r3, [r7, #24]
 800368c:	61fa      	str	r2, [r7, #28]
 800368e:	4b44      	ldr	r3, [pc, #272]	; (80037a0 <HAL_RCC_GetSysClockFreq+0x174>)
 8003690:	e9d7 8906 	ldrd	r8, r9, [r7, #24]
 8003694:	464a      	mov	r2, r9
 8003696:	fb03 f202 	mul.w	r2, r3, r2
 800369a:	2300      	movs	r3, #0
 800369c:	4644      	mov	r4, r8
 800369e:	fb04 f303 	mul.w	r3, r4, r3
 80036a2:	4413      	add	r3, r2
 80036a4:	4a3e      	ldr	r2, [pc, #248]	; (80037a0 <HAL_RCC_GetSysClockFreq+0x174>)
 80036a6:	4644      	mov	r4, r8
 80036a8:	fba4 0102 	umull	r0, r1, r4, r2
 80036ac:	440b      	add	r3, r1
 80036ae:	4619      	mov	r1, r3
 80036b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80036b2:	2200      	movs	r2, #0
 80036b4:	613b      	str	r3, [r7, #16]
 80036b6:	617a      	str	r2, [r7, #20]
 80036b8:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80036bc:	f7fc fd66 	bl	800018c <__aeabi_uldivmod>
 80036c0:	4602      	mov	r2, r0
 80036c2:	460b      	mov	r3, r1
 80036c4:	4613      	mov	r3, r2
 80036c6:	637b      	str	r3, [r7, #52]	; 0x34
 80036c8:	e04e      	b.n	8003768 <HAL_RCC_GetSysClockFreq+0x13c>
 80036ca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80036cc:	2200      	movs	r2, #0
 80036ce:	469a      	mov	sl, r3
 80036d0:	4693      	mov	fp, r2
 80036d2:	4652      	mov	r2, sl
 80036d4:	465b      	mov	r3, fp
 80036d6:	f04f 0000 	mov.w	r0, #0
 80036da:	f04f 0100 	mov.w	r1, #0
 80036de:	0159      	lsls	r1, r3, #5
 80036e0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80036e4:	0150      	lsls	r0, r2, #5
 80036e6:	4602      	mov	r2, r0
 80036e8:	460b      	mov	r3, r1
 80036ea:	ebb2 080a 	subs.w	r8, r2, sl
 80036ee:	eb63 090b 	sbc.w	r9, r3, fp
 80036f2:	f04f 0200 	mov.w	r2, #0
 80036f6:	f04f 0300 	mov.w	r3, #0
 80036fa:	ea4f 1389 	mov.w	r3, r9, lsl #6
 80036fe:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8003702:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8003706:	ebb2 0408 	subs.w	r4, r2, r8
 800370a:	eb63 0509 	sbc.w	r5, r3, r9
 800370e:	f04f 0200 	mov.w	r2, #0
 8003712:	f04f 0300 	mov.w	r3, #0
 8003716:	00eb      	lsls	r3, r5, #3
 8003718:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800371c:	00e2      	lsls	r2, r4, #3
 800371e:	4614      	mov	r4, r2
 8003720:	461d      	mov	r5, r3
 8003722:	eb14 030a 	adds.w	r3, r4, sl
 8003726:	603b      	str	r3, [r7, #0]
 8003728:	eb45 030b 	adc.w	r3, r5, fp
 800372c:	607b      	str	r3, [r7, #4]
 800372e:	f04f 0200 	mov.w	r2, #0
 8003732:	f04f 0300 	mov.w	r3, #0
 8003736:	e9d7 4500 	ldrd	r4, r5, [r7]
 800373a:	4629      	mov	r1, r5
 800373c:	028b      	lsls	r3, r1, #10
 800373e:	4620      	mov	r0, r4
 8003740:	4629      	mov	r1, r5
 8003742:	4604      	mov	r4, r0
 8003744:	ea43 5394 	orr.w	r3, r3, r4, lsr #22
 8003748:	4601      	mov	r1, r0
 800374a:	028a      	lsls	r2, r1, #10
 800374c:	4610      	mov	r0, r2
 800374e:	4619      	mov	r1, r3
 8003750:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003752:	2200      	movs	r2, #0
 8003754:	60bb      	str	r3, [r7, #8]
 8003756:	60fa      	str	r2, [r7, #12]
 8003758:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800375c:	f7fc fd16 	bl	800018c <__aeabi_uldivmod>
 8003760:	4602      	mov	r2, r0
 8003762:	460b      	mov	r3, r1
 8003764:	4613      	mov	r3, r2
 8003766:	637b      	str	r3, [r7, #52]	; 0x34
 8003768:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800376a:	633b      	str	r3, [r7, #48]	; 0x30
 800376c:	e00d      	b.n	800378a <HAL_RCC_GetSysClockFreq+0x15e>
 800376e:	4b0a      	ldr	r3, [pc, #40]	; (8003798 <HAL_RCC_GetSysClockFreq+0x16c>)
 8003770:	685b      	ldr	r3, [r3, #4]
 8003772:	0b5b      	lsrs	r3, r3, #13
 8003774:	f003 0307 	and.w	r3, r3, #7
 8003778:	623b      	str	r3, [r7, #32]
 800377a:	6a3b      	ldr	r3, [r7, #32]
 800377c:	3301      	adds	r3, #1
 800377e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8003782:	fa02 f303 	lsl.w	r3, r2, r3
 8003786:	633b      	str	r3, [r7, #48]	; 0x30
 8003788:	bf00      	nop
 800378a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800378c:	4618      	mov	r0, r3
 800378e:	3738      	adds	r7, #56	; 0x38
 8003790:	46bd      	mov	sp, r7
 8003792:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003796:	bf00      	nop
 8003798:	40023800 	.word	0x40023800
 800379c:	00f42400 	.word	0x00f42400
 80037a0:	016e3600 	.word	0x016e3600
 80037a4:	08006584 	.word	0x08006584

080037a8 <RCC_SetFlashLatencyFromMSIRange>:
 80037a8:	b480      	push	{r7}
 80037aa:	b087      	sub	sp, #28
 80037ac:	af00      	add	r7, sp, #0
 80037ae:	6078      	str	r0, [r7, #4]
 80037b0:	2300      	movs	r3, #0
 80037b2:	613b      	str	r3, [r7, #16]
 80037b4:	4b29      	ldr	r3, [pc, #164]	; (800385c <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 80037b6:	689b      	ldr	r3, [r3, #8]
 80037b8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80037bc:	2b00      	cmp	r3, #0
 80037be:	d12c      	bne.n	800381a <RCC_SetFlashLatencyFromMSIRange+0x72>
 80037c0:	4b26      	ldr	r3, [pc, #152]	; (800385c <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 80037c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037c4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80037c8:	2b00      	cmp	r3, #0
 80037ca:	d005      	beq.n	80037d8 <RCC_SetFlashLatencyFromMSIRange+0x30>
 80037cc:	4b24      	ldr	r3, [pc, #144]	; (8003860 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80037ce:	681b      	ldr	r3, [r3, #0]
 80037d0:	f403 53c0 	and.w	r3, r3, #6144	; 0x1800
 80037d4:	617b      	str	r3, [r7, #20]
 80037d6:	e016      	b.n	8003806 <RCC_SetFlashLatencyFromMSIRange+0x5e>
 80037d8:	4b20      	ldr	r3, [pc, #128]	; (800385c <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 80037da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037dc:	4a1f      	ldr	r2, [pc, #124]	; (800385c <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 80037de:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80037e2:	6253      	str	r3, [r2, #36]	; 0x24
 80037e4:	4b1d      	ldr	r3, [pc, #116]	; (800385c <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 80037e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037e8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80037ec:	60fb      	str	r3, [r7, #12]
 80037ee:	68fb      	ldr	r3, [r7, #12]
 80037f0:	4b1b      	ldr	r3, [pc, #108]	; (8003860 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80037f2:	681b      	ldr	r3, [r3, #0]
 80037f4:	f403 53c0 	and.w	r3, r3, #6144	; 0x1800
 80037f8:	617b      	str	r3, [r7, #20]
 80037fa:	4b18      	ldr	r3, [pc, #96]	; (800385c <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 80037fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037fe:	4a17      	ldr	r2, [pc, #92]	; (800385c <RCC_SetFlashLatencyFromMSIRange+0xb4>)
 8003800:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003804:	6253      	str	r3, [r2, #36]	; 0x24
 8003806:	697b      	ldr	r3, [r7, #20]
 8003808:	f5b3 5fc0 	cmp.w	r3, #6144	; 0x1800
 800380c:	d105      	bne.n	800381a <RCC_SetFlashLatencyFromMSIRange+0x72>
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8003814:	d101      	bne.n	800381a <RCC_SetFlashLatencyFromMSIRange+0x72>
 8003816:	2301      	movs	r3, #1
 8003818:	613b      	str	r3, [r7, #16]
 800381a:	693b      	ldr	r3, [r7, #16]
 800381c:	2b01      	cmp	r3, #1
 800381e:	d105      	bne.n	800382c <RCC_SetFlashLatencyFromMSIRange+0x84>
 8003820:	4b10      	ldr	r3, [pc, #64]	; (8003864 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8003822:	681b      	ldr	r3, [r3, #0]
 8003824:	4a0f      	ldr	r2, [pc, #60]	; (8003864 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8003826:	f043 0304 	orr.w	r3, r3, #4
 800382a:	6013      	str	r3, [r2, #0]
 800382c:	4b0d      	ldr	r3, [pc, #52]	; (8003864 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800382e:	681b      	ldr	r3, [r3, #0]
 8003830:	f023 0201 	bic.w	r2, r3, #1
 8003834:	490b      	ldr	r1, [pc, #44]	; (8003864 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8003836:	693b      	ldr	r3, [r7, #16]
 8003838:	4313      	orrs	r3, r2
 800383a:	600b      	str	r3, [r1, #0]
 800383c:	4b09      	ldr	r3, [pc, #36]	; (8003864 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800383e:	681b      	ldr	r3, [r3, #0]
 8003840:	f003 0301 	and.w	r3, r3, #1
 8003844:	693a      	ldr	r2, [r7, #16]
 8003846:	429a      	cmp	r2, r3
 8003848:	d001      	beq.n	800384e <RCC_SetFlashLatencyFromMSIRange+0xa6>
 800384a:	2301      	movs	r3, #1
 800384c:	e000      	b.n	8003850 <RCC_SetFlashLatencyFromMSIRange+0xa8>
 800384e:	2300      	movs	r3, #0
 8003850:	4618      	mov	r0, r3
 8003852:	371c      	adds	r7, #28
 8003854:	46bd      	mov	sp, r7
 8003856:	bc80      	pop	{r7}
 8003858:	4770      	bx	lr
 800385a:	bf00      	nop
 800385c:	40023800 	.word	0x40023800
 8003860:	40007000 	.word	0x40007000
 8003864:	40023c00 	.word	0x40023c00

08003868 <HAL_RCCEx_PeriphCLKConfig>:
 8003868:	b580      	push	{r7, lr}
 800386a:	b086      	sub	sp, #24
 800386c:	af00      	add	r7, sp, #0
 800386e:	6078      	str	r0, [r7, #4]
 8003870:	687b      	ldr	r3, [r7, #4]
 8003872:	681b      	ldr	r3, [r3, #0]
 8003874:	f003 0301 	and.w	r3, r3, #1
 8003878:	2b00      	cmp	r3, #0
 800387a:	d106      	bne.n	800388a <HAL_RCCEx_PeriphCLKConfig+0x22>
 800387c:	687b      	ldr	r3, [r7, #4]
 800387e:	681b      	ldr	r3, [r3, #0]
 8003880:	f003 0302 	and.w	r3, r3, #2
 8003884:	2b00      	cmp	r3, #0
 8003886:	f000 80ed 	beq.w	8003a64 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
 800388a:	2300      	movs	r3, #0
 800388c:	75fb      	strb	r3, [r7, #23]
 800388e:	4b78      	ldr	r3, [pc, #480]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8003890:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003892:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003896:	2b00      	cmp	r3, #0
 8003898:	d10d      	bne.n	80038b6 <HAL_RCCEx_PeriphCLKConfig+0x4e>
 800389a:	4b75      	ldr	r3, [pc, #468]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 800389c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800389e:	4a74      	ldr	r2, [pc, #464]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 80038a0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80038a4:	6253      	str	r3, [r2, #36]	; 0x24
 80038a6:	4b72      	ldr	r3, [pc, #456]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 80038a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80038ae:	60bb      	str	r3, [r7, #8]
 80038b0:	68bb      	ldr	r3, [r7, #8]
 80038b2:	2301      	movs	r3, #1
 80038b4:	75fb      	strb	r3, [r7, #23]
 80038b6:	4b6f      	ldr	r3, [pc, #444]	; (8003a74 <HAL_RCCEx_PeriphCLKConfig+0x20c>)
 80038b8:	681b      	ldr	r3, [r3, #0]
 80038ba:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80038be:	2b00      	cmp	r3, #0
 80038c0:	d118      	bne.n	80038f4 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 80038c2:	4b6c      	ldr	r3, [pc, #432]	; (8003a74 <HAL_RCCEx_PeriphCLKConfig+0x20c>)
 80038c4:	681b      	ldr	r3, [r3, #0]
 80038c6:	4a6b      	ldr	r2, [pc, #428]	; (8003a74 <HAL_RCCEx_PeriphCLKConfig+0x20c>)
 80038c8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80038cc:	6013      	str	r3, [r2, #0]
 80038ce:	f7fe fa53 	bl	8001d78 <HAL_GetTick>
 80038d2:	6138      	str	r0, [r7, #16]
 80038d4:	e008      	b.n	80038e8 <HAL_RCCEx_PeriphCLKConfig+0x80>
 80038d6:	f7fe fa4f 	bl	8001d78 <HAL_GetTick>
 80038da:	4602      	mov	r2, r0
 80038dc:	693b      	ldr	r3, [r7, #16]
 80038de:	1ad3      	subs	r3, r2, r3
 80038e0:	2b64      	cmp	r3, #100	; 0x64
 80038e2:	d901      	bls.n	80038e8 <HAL_RCCEx_PeriphCLKConfig+0x80>
 80038e4:	2303      	movs	r3, #3
 80038e6:	e0be      	b.n	8003a66 <HAL_RCCEx_PeriphCLKConfig+0x1fe>
 80038e8:	4b62      	ldr	r3, [pc, #392]	; (8003a74 <HAL_RCCEx_PeriphCLKConfig+0x20c>)
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80038f0:	2b00      	cmp	r3, #0
 80038f2:	d0f0      	beq.n	80038d6 <HAL_RCCEx_PeriphCLKConfig+0x6e>
 80038f4:	4b5e      	ldr	r3, [pc, #376]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	f003 43c0 	and.w	r3, r3, #1610612736	; 0x60000000
 80038fc:	60fb      	str	r3, [r7, #12]
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	685b      	ldr	r3, [r3, #4]
 8003902:	f003 43c0 	and.w	r3, r3, #1610612736	; 0x60000000
 8003906:	68fa      	ldr	r2, [r7, #12]
 8003908:	429a      	cmp	r2, r3
 800390a:	d106      	bne.n	800391a <HAL_RCCEx_PeriphCLKConfig+0xb2>
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	689b      	ldr	r3, [r3, #8]
 8003910:	f003 43c0 	and.w	r3, r3, #1610612736	; 0x60000000
 8003914:	68fa      	ldr	r2, [r7, #12]
 8003916:	429a      	cmp	r2, r3
 8003918:	d00f      	beq.n	800393a <HAL_RCCEx_PeriphCLKConfig+0xd2>
 800391a:	687b      	ldr	r3, [r7, #4]
 800391c:	685b      	ldr	r3, [r3, #4]
 800391e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003922:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8003926:	d108      	bne.n	800393a <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8003928:	4b51      	ldr	r3, [pc, #324]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 800392a:	681b      	ldr	r3, [r3, #0]
 800392c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003930:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8003934:	d101      	bne.n	800393a <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8003936:	2301      	movs	r3, #1
 8003938:	e095      	b.n	8003a66 <HAL_RCCEx_PeriphCLKConfig+0x1fe>
 800393a:	4b4d      	ldr	r3, [pc, #308]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 800393c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800393e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003942:	60fb      	str	r3, [r7, #12]
 8003944:	68fb      	ldr	r3, [r7, #12]
 8003946:	2b00      	cmp	r3, #0
 8003948:	d041      	beq.n	80039ce <HAL_RCCEx_PeriphCLKConfig+0x166>
 800394a:	687b      	ldr	r3, [r7, #4]
 800394c:	685b      	ldr	r3, [r3, #4]
 800394e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003952:	68fa      	ldr	r2, [r7, #12]
 8003954:	429a      	cmp	r2, r3
 8003956:	d005      	beq.n	8003964 <HAL_RCCEx_PeriphCLKConfig+0xfc>
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	681b      	ldr	r3, [r3, #0]
 800395c:	f003 0301 	and.w	r3, r3, #1
 8003960:	2b00      	cmp	r3, #0
 8003962:	d10c      	bne.n	800397e <HAL_RCCEx_PeriphCLKConfig+0x116>
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	689b      	ldr	r3, [r3, #8]
 8003968:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800396c:	68fa      	ldr	r2, [r7, #12]
 800396e:	429a      	cmp	r2, r3
 8003970:	d02d      	beq.n	80039ce <HAL_RCCEx_PeriphCLKConfig+0x166>
 8003972:	687b      	ldr	r3, [r7, #4]
 8003974:	681b      	ldr	r3, [r3, #0]
 8003976:	f003 0302 	and.w	r3, r3, #2
 800397a:	2b00      	cmp	r3, #0
 800397c:	d027      	beq.n	80039ce <HAL_RCCEx_PeriphCLKConfig+0x166>
 800397e:	4b3c      	ldr	r3, [pc, #240]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8003980:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003982:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8003986:	60fb      	str	r3, [r7, #12]
 8003988:	4b3b      	ldr	r3, [pc, #236]	; (8003a78 <HAL_RCCEx_PeriphCLKConfig+0x210>)
 800398a:	2201      	movs	r2, #1
 800398c:	601a      	str	r2, [r3, #0]
 800398e:	4b3a      	ldr	r3, [pc, #232]	; (8003a78 <HAL_RCCEx_PeriphCLKConfig+0x210>)
 8003990:	2200      	movs	r2, #0
 8003992:	601a      	str	r2, [r3, #0]
 8003994:	4a36      	ldr	r2, [pc, #216]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8003996:	68fb      	ldr	r3, [r7, #12]
 8003998:	6353      	str	r3, [r2, #52]	; 0x34
 800399a:	68fb      	ldr	r3, [r7, #12]
 800399c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80039a0:	2b00      	cmp	r3, #0
 80039a2:	d014      	beq.n	80039ce <HAL_RCCEx_PeriphCLKConfig+0x166>
 80039a4:	f7fe f9e8 	bl	8001d78 <HAL_GetTick>
 80039a8:	6138      	str	r0, [r7, #16]
 80039aa:	e00a      	b.n	80039c2 <HAL_RCCEx_PeriphCLKConfig+0x15a>
 80039ac:	f7fe f9e4 	bl	8001d78 <HAL_GetTick>
 80039b0:	4602      	mov	r2, r0
 80039b2:	693b      	ldr	r3, [r7, #16]
 80039b4:	1ad3      	subs	r3, r2, r3
 80039b6:	f241 3288 	movw	r2, #5000	; 0x1388
 80039ba:	4293      	cmp	r3, r2
 80039bc:	d901      	bls.n	80039c2 <HAL_RCCEx_PeriphCLKConfig+0x15a>
 80039be:	2303      	movs	r3, #3
 80039c0:	e051      	b.n	8003a66 <HAL_RCCEx_PeriphCLKConfig+0x1fe>
 80039c2:	4b2b      	ldr	r3, [pc, #172]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 80039c4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80039c6:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80039ca:	2b00      	cmp	r3, #0
 80039cc:	d0ee      	beq.n	80039ac <HAL_RCCEx_PeriphCLKConfig+0x144>
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	681b      	ldr	r3, [r3, #0]
 80039d2:	f003 0302 	and.w	r3, r3, #2
 80039d6:	2b00      	cmp	r3, #0
 80039d8:	d01a      	beq.n	8003a10 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 80039da:	687b      	ldr	r3, [r7, #4]
 80039dc:	689b      	ldr	r3, [r3, #8]
 80039de:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80039e2:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80039e6:	d10a      	bne.n	80039fe <HAL_RCCEx_PeriphCLKConfig+0x196>
 80039e8:	4b21      	ldr	r3, [pc, #132]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 80039ea:	681b      	ldr	r3, [r3, #0]
 80039ec:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	689b      	ldr	r3, [r3, #8]
 80039f4:	f003 43c0 	and.w	r3, r3, #1610612736	; 0x60000000
 80039f8:	491d      	ldr	r1, [pc, #116]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 80039fa:	4313      	orrs	r3, r2
 80039fc:	600b      	str	r3, [r1, #0]
 80039fe:	4b1c      	ldr	r3, [pc, #112]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8003a00:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	689b      	ldr	r3, [r3, #8]
 8003a06:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003a0a:	4919      	ldr	r1, [pc, #100]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8003a0c:	4313      	orrs	r3, r2
 8003a0e:	634b      	str	r3, [r1, #52]	; 0x34
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	f003 0301 	and.w	r3, r3, #1
 8003a18:	2b00      	cmp	r3, #0
 8003a1a:	d01a      	beq.n	8003a52 <HAL_RCCEx_PeriphCLKConfig+0x1ea>
 8003a1c:	687b      	ldr	r3, [r7, #4]
 8003a1e:	685b      	ldr	r3, [r3, #4]
 8003a20:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003a24:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8003a28:	d10a      	bne.n	8003a40 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
 8003a2a:	4b11      	ldr	r3, [pc, #68]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8003a2c:	681b      	ldr	r3, [r3, #0]
 8003a2e:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	685b      	ldr	r3, [r3, #4]
 8003a36:	f003 43c0 	and.w	r3, r3, #1610612736	; 0x60000000
 8003a3a:	490d      	ldr	r1, [pc, #52]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8003a3c:	4313      	orrs	r3, r2
 8003a3e:	600b      	str	r3, [r1, #0]
 8003a40:	4b0b      	ldr	r3, [pc, #44]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8003a42:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	685b      	ldr	r3, [r3, #4]
 8003a48:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003a4c:	4908      	ldr	r1, [pc, #32]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8003a4e:	4313      	orrs	r3, r2
 8003a50:	634b      	str	r3, [r1, #52]	; 0x34
 8003a52:	7dfb      	ldrb	r3, [r7, #23]
 8003a54:	2b01      	cmp	r3, #1
 8003a56:	d105      	bne.n	8003a64 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
 8003a58:	4b05      	ldr	r3, [pc, #20]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8003a5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a5c:	4a04      	ldr	r2, [pc, #16]	; (8003a70 <HAL_RCCEx_PeriphCLKConfig+0x208>)
 8003a5e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003a62:	6253      	str	r3, [r2, #36]	; 0x24
 8003a64:	2300      	movs	r3, #0
 8003a66:	4618      	mov	r0, r3
 8003a68:	3718      	adds	r7, #24
 8003a6a:	46bd      	mov	sp, r7
 8003a6c:	bd80      	pop	{r7, pc}
 8003a6e:	bf00      	nop
 8003a70:	40023800 	.word	0x40023800
 8003a74:	40007000 	.word	0x40007000
 8003a78:	424706dc 	.word	0x424706dc

08003a7c <HAL_RTC_Init>:
 8003a7c:	b580      	push	{r7, lr}
 8003a7e:	b084      	sub	sp, #16
 8003a80:	af00      	add	r7, sp, #0
 8003a82:	6078      	str	r0, [r7, #4]
 8003a84:	2301      	movs	r3, #1
 8003a86:	73fb      	strb	r3, [r7, #15]
 8003a88:	687b      	ldr	r3, [r7, #4]
 8003a8a:	2b00      	cmp	r3, #0
 8003a8c:	d101      	bne.n	8003a92 <HAL_RTC_Init+0x16>
 8003a8e:	2301      	movs	r3, #1
 8003a90:	e073      	b.n	8003b7a <HAL_RTC_Init+0xfe>
 8003a92:	687b      	ldr	r3, [r7, #4]
 8003a94:	7f5b      	ldrb	r3, [r3, #29]
 8003a96:	b2db      	uxtb	r3, r3
 8003a98:	2b00      	cmp	r3, #0
 8003a9a:	d105      	bne.n	8003aa8 <HAL_RTC_Init+0x2c>
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	2200      	movs	r2, #0
 8003aa0:	771a      	strb	r2, [r3, #28]
 8003aa2:	6878      	ldr	r0, [r7, #4]
 8003aa4:	f7fd ff44 	bl	8001930 <HAL_RTC_MspInit>
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	2202      	movs	r2, #2
 8003aac:	775a      	strb	r2, [r3, #29]
 8003aae:	687b      	ldr	r3, [r7, #4]
 8003ab0:	681b      	ldr	r3, [r3, #0]
 8003ab2:	68db      	ldr	r3, [r3, #12]
 8003ab4:	f003 0310 	and.w	r3, r3, #16
 8003ab8:	2b10      	cmp	r3, #16
 8003aba:	d055      	beq.n	8003b68 <HAL_RTC_Init+0xec>
 8003abc:	687b      	ldr	r3, [r7, #4]
 8003abe:	681b      	ldr	r3, [r3, #0]
 8003ac0:	22ca      	movs	r2, #202	; 0xca
 8003ac2:	625a      	str	r2, [r3, #36]	; 0x24
 8003ac4:	687b      	ldr	r3, [r7, #4]
 8003ac6:	681b      	ldr	r3, [r3, #0]
 8003ac8:	2253      	movs	r2, #83	; 0x53
 8003aca:	625a      	str	r2, [r3, #36]	; 0x24
 8003acc:	6878      	ldr	r0, [r7, #4]
 8003ace:	f000 fa48 	bl	8003f62 <RTC_EnterInitMode>
 8003ad2:	4603      	mov	r3, r0
 8003ad4:	73fb      	strb	r3, [r7, #15]
 8003ad6:	7bfb      	ldrb	r3, [r7, #15]
 8003ad8:	2b00      	cmp	r3, #0
 8003ada:	d12c      	bne.n	8003b36 <HAL_RTC_Init+0xba>
 8003adc:	687b      	ldr	r3, [r7, #4]
 8003ade:	681b      	ldr	r3, [r3, #0]
 8003ae0:	689b      	ldr	r3, [r3, #8]
 8003ae2:	687a      	ldr	r2, [r7, #4]
 8003ae4:	6812      	ldr	r2, [r2, #0]
 8003ae6:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8003aea:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003aee:	6093      	str	r3, [r2, #8]
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	681b      	ldr	r3, [r3, #0]
 8003af4:	6899      	ldr	r1, [r3, #8]
 8003af6:	687b      	ldr	r3, [r7, #4]
 8003af8:	685a      	ldr	r2, [r3, #4]
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	691b      	ldr	r3, [r3, #16]
 8003afe:	431a      	orrs	r2, r3
 8003b00:	687b      	ldr	r3, [r7, #4]
 8003b02:	695b      	ldr	r3, [r3, #20]
 8003b04:	431a      	orrs	r2, r3
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	681b      	ldr	r3, [r3, #0]
 8003b0a:	430a      	orrs	r2, r1
 8003b0c:	609a      	str	r2, [r3, #8]
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	681b      	ldr	r3, [r3, #0]
 8003b12:	687a      	ldr	r2, [r7, #4]
 8003b14:	68d2      	ldr	r2, [r2, #12]
 8003b16:	611a      	str	r2, [r3, #16]
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	681b      	ldr	r3, [r3, #0]
 8003b1c:	6919      	ldr	r1, [r3, #16]
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	689b      	ldr	r3, [r3, #8]
 8003b22:	041a      	lsls	r2, r3, #16
 8003b24:	687b      	ldr	r3, [r7, #4]
 8003b26:	681b      	ldr	r3, [r3, #0]
 8003b28:	430a      	orrs	r2, r1
 8003b2a:	611a      	str	r2, [r3, #16]
 8003b2c:	6878      	ldr	r0, [r7, #4]
 8003b2e:	f000 fa4f 	bl	8003fd0 <RTC_ExitInitMode>
 8003b32:	4603      	mov	r3, r0
 8003b34:	73fb      	strb	r3, [r7, #15]
 8003b36:	7bfb      	ldrb	r3, [r7, #15]
 8003b38:	2b00      	cmp	r3, #0
 8003b3a:	d110      	bne.n	8003b5e <HAL_RTC_Init+0xe2>
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003b42:	687b      	ldr	r3, [r7, #4]
 8003b44:	681b      	ldr	r3, [r3, #0]
 8003b46:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003b4a:	641a      	str	r2, [r3, #64]	; 0x40
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	681b      	ldr	r3, [r3, #0]
 8003b50:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8003b52:	687b      	ldr	r3, [r7, #4]
 8003b54:	699a      	ldr	r2, [r3, #24]
 8003b56:	687b      	ldr	r3, [r7, #4]
 8003b58:	681b      	ldr	r3, [r3, #0]
 8003b5a:	430a      	orrs	r2, r1
 8003b5c:	641a      	str	r2, [r3, #64]	; 0x40
 8003b5e:	687b      	ldr	r3, [r7, #4]
 8003b60:	681b      	ldr	r3, [r3, #0]
 8003b62:	22ff      	movs	r2, #255	; 0xff
 8003b64:	625a      	str	r2, [r3, #36]	; 0x24
 8003b66:	e001      	b.n	8003b6c <HAL_RTC_Init+0xf0>
 8003b68:	2300      	movs	r3, #0
 8003b6a:	73fb      	strb	r3, [r7, #15]
 8003b6c:	7bfb      	ldrb	r3, [r7, #15]
 8003b6e:	2b00      	cmp	r3, #0
 8003b70:	d102      	bne.n	8003b78 <HAL_RTC_Init+0xfc>
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	2201      	movs	r2, #1
 8003b76:	775a      	strb	r2, [r3, #29]
 8003b78:	7bfb      	ldrb	r3, [r7, #15]
 8003b7a:	4618      	mov	r0, r3
 8003b7c:	3710      	adds	r7, #16
 8003b7e:	46bd      	mov	sp, r7
 8003b80:	bd80      	pop	{r7, pc}

08003b82 <HAL_RTC_SetTime>:
 8003b82:	b590      	push	{r4, r7, lr}
 8003b84:	b087      	sub	sp, #28
 8003b86:	af00      	add	r7, sp, #0
 8003b88:	60f8      	str	r0, [r7, #12]
 8003b8a:	60b9      	str	r1, [r7, #8]
 8003b8c:	607a      	str	r2, [r7, #4]
 8003b8e:	2300      	movs	r3, #0
 8003b90:	617b      	str	r3, [r7, #20]
 8003b92:	68fb      	ldr	r3, [r7, #12]
 8003b94:	7f1b      	ldrb	r3, [r3, #28]
 8003b96:	2b01      	cmp	r3, #1
 8003b98:	d101      	bne.n	8003b9e <HAL_RTC_SetTime+0x1c>
 8003b9a:	2302      	movs	r3, #2
 8003b9c:	e087      	b.n	8003cae <HAL_RTC_SetTime+0x12c>
 8003b9e:	68fb      	ldr	r3, [r7, #12]
 8003ba0:	2201      	movs	r2, #1
 8003ba2:	771a      	strb	r2, [r3, #28]
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	2202      	movs	r2, #2
 8003ba8:	775a      	strb	r2, [r3, #29]
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	2b00      	cmp	r3, #0
 8003bae:	d126      	bne.n	8003bfe <HAL_RTC_SetTime+0x7c>
 8003bb0:	68fb      	ldr	r3, [r7, #12]
 8003bb2:	681b      	ldr	r3, [r3, #0]
 8003bb4:	689b      	ldr	r3, [r3, #8]
 8003bb6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003bba:	2b00      	cmp	r3, #0
 8003bbc:	d102      	bne.n	8003bc4 <HAL_RTC_SetTime+0x42>
 8003bbe:	68bb      	ldr	r3, [r7, #8]
 8003bc0:	2200      	movs	r2, #0
 8003bc2:	70da      	strb	r2, [r3, #3]
 8003bc4:	68bb      	ldr	r3, [r7, #8]
 8003bc6:	781b      	ldrb	r3, [r3, #0]
 8003bc8:	4618      	mov	r0, r3
 8003bca:	f000 fa26 	bl	800401a <RTC_ByteToBcd2>
 8003bce:	4603      	mov	r3, r0
 8003bd0:	041c      	lsls	r4, r3, #16
 8003bd2:	68bb      	ldr	r3, [r7, #8]
 8003bd4:	785b      	ldrb	r3, [r3, #1]
 8003bd6:	4618      	mov	r0, r3
 8003bd8:	f000 fa1f 	bl	800401a <RTC_ByteToBcd2>
 8003bdc:	4603      	mov	r3, r0
 8003bde:	021b      	lsls	r3, r3, #8
 8003be0:	431c      	orrs	r4, r3
 8003be2:	68bb      	ldr	r3, [r7, #8]
 8003be4:	789b      	ldrb	r3, [r3, #2]
 8003be6:	4618      	mov	r0, r3
 8003be8:	f000 fa17 	bl	800401a <RTC_ByteToBcd2>
 8003bec:	4603      	mov	r3, r0
 8003bee:	ea44 0203 	orr.w	r2, r4, r3
 8003bf2:	68bb      	ldr	r3, [r7, #8]
 8003bf4:	78db      	ldrb	r3, [r3, #3]
 8003bf6:	059b      	lsls	r3, r3, #22
 8003bf8:	4313      	orrs	r3, r2
 8003bfa:	617b      	str	r3, [r7, #20]
 8003bfc:	e018      	b.n	8003c30 <HAL_RTC_SetTime+0xae>
 8003bfe:	68fb      	ldr	r3, [r7, #12]
 8003c00:	681b      	ldr	r3, [r3, #0]
 8003c02:	689b      	ldr	r3, [r3, #8]
 8003c04:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003c08:	2b00      	cmp	r3, #0
 8003c0a:	d102      	bne.n	8003c12 <HAL_RTC_SetTime+0x90>
 8003c0c:	68bb      	ldr	r3, [r7, #8]
 8003c0e:	2200      	movs	r2, #0
 8003c10:	70da      	strb	r2, [r3, #3]
 8003c12:	68bb      	ldr	r3, [r7, #8]
 8003c14:	781b      	ldrb	r3, [r3, #0]
 8003c16:	041a      	lsls	r2, r3, #16
 8003c18:	68bb      	ldr	r3, [r7, #8]
 8003c1a:	785b      	ldrb	r3, [r3, #1]
 8003c1c:	021b      	lsls	r3, r3, #8
 8003c1e:	4313      	orrs	r3, r2
 8003c20:	68ba      	ldr	r2, [r7, #8]
 8003c22:	7892      	ldrb	r2, [r2, #2]
 8003c24:	431a      	orrs	r2, r3
 8003c26:	68bb      	ldr	r3, [r7, #8]
 8003c28:	78db      	ldrb	r3, [r3, #3]
 8003c2a:	059b      	lsls	r3, r3, #22
 8003c2c:	4313      	orrs	r3, r2
 8003c2e:	617b      	str	r3, [r7, #20]
 8003c30:	68fb      	ldr	r3, [r7, #12]
 8003c32:	681b      	ldr	r3, [r3, #0]
 8003c34:	22ca      	movs	r2, #202	; 0xca
 8003c36:	625a      	str	r2, [r3, #36]	; 0x24
 8003c38:	68fb      	ldr	r3, [r7, #12]
 8003c3a:	681b      	ldr	r3, [r3, #0]
 8003c3c:	2253      	movs	r2, #83	; 0x53
 8003c3e:	625a      	str	r2, [r3, #36]	; 0x24
 8003c40:	68f8      	ldr	r0, [r7, #12]
 8003c42:	f000 f98e 	bl	8003f62 <RTC_EnterInitMode>
 8003c46:	4603      	mov	r3, r0
 8003c48:	74fb      	strb	r3, [r7, #19]
 8003c4a:	7cfb      	ldrb	r3, [r7, #19]
 8003c4c:	2b00      	cmp	r3, #0
 8003c4e:	d120      	bne.n	8003c92 <HAL_RTC_SetTime+0x110>
 8003c50:	68fb      	ldr	r3, [r7, #12]
 8003c52:	681a      	ldr	r2, [r3, #0]
 8003c54:	697b      	ldr	r3, [r7, #20]
 8003c56:	f003 337f 	and.w	r3, r3, #2139062143	; 0x7f7f7f7f
 8003c5a:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
 8003c5e:	6013      	str	r3, [r2, #0]
 8003c60:	68fb      	ldr	r3, [r7, #12]
 8003c62:	681b      	ldr	r3, [r3, #0]
 8003c64:	689a      	ldr	r2, [r3, #8]
 8003c66:	68fb      	ldr	r3, [r7, #12]
 8003c68:	681b      	ldr	r3, [r3, #0]
 8003c6a:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003c6e:	609a      	str	r2, [r3, #8]
 8003c70:	68fb      	ldr	r3, [r7, #12]
 8003c72:	681b      	ldr	r3, [r3, #0]
 8003c74:	6899      	ldr	r1, [r3, #8]
 8003c76:	68bb      	ldr	r3, [r7, #8]
 8003c78:	68da      	ldr	r2, [r3, #12]
 8003c7a:	68bb      	ldr	r3, [r7, #8]
 8003c7c:	691b      	ldr	r3, [r3, #16]
 8003c7e:	431a      	orrs	r2, r3
 8003c80:	68fb      	ldr	r3, [r7, #12]
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	430a      	orrs	r2, r1
 8003c86:	609a      	str	r2, [r3, #8]
 8003c88:	68f8      	ldr	r0, [r7, #12]
 8003c8a:	f000 f9a1 	bl	8003fd0 <RTC_ExitInitMode>
 8003c8e:	4603      	mov	r3, r0
 8003c90:	74fb      	strb	r3, [r7, #19]
 8003c92:	7cfb      	ldrb	r3, [r7, #19]
 8003c94:	2b00      	cmp	r3, #0
 8003c96:	d102      	bne.n	8003c9e <HAL_RTC_SetTime+0x11c>
 8003c98:	68fb      	ldr	r3, [r7, #12]
 8003c9a:	2201      	movs	r2, #1
 8003c9c:	775a      	strb	r2, [r3, #29]
 8003c9e:	68fb      	ldr	r3, [r7, #12]
 8003ca0:	681b      	ldr	r3, [r3, #0]
 8003ca2:	22ff      	movs	r2, #255	; 0xff
 8003ca4:	625a      	str	r2, [r3, #36]	; 0x24
 8003ca6:	68fb      	ldr	r3, [r7, #12]
 8003ca8:	2200      	movs	r2, #0
 8003caa:	771a      	strb	r2, [r3, #28]
 8003cac:	7cfb      	ldrb	r3, [r7, #19]
 8003cae:	4618      	mov	r0, r3
 8003cb0:	371c      	adds	r7, #28
 8003cb2:	46bd      	mov	sp, r7
 8003cb4:	bd90      	pop	{r4, r7, pc}

08003cb6 <HAL_RTC_GetTime>:
 8003cb6:	b580      	push	{r7, lr}
 8003cb8:	b086      	sub	sp, #24
 8003cba:	af00      	add	r7, sp, #0
 8003cbc:	60f8      	str	r0, [r7, #12]
 8003cbe:	60b9      	str	r1, [r7, #8]
 8003cc0:	607a      	str	r2, [r7, #4]
 8003cc2:	2300      	movs	r3, #0
 8003cc4:	617b      	str	r3, [r7, #20]
 8003cc6:	68fb      	ldr	r3, [r7, #12]
 8003cc8:	681b      	ldr	r3, [r3, #0]
 8003cca:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003ccc:	68bb      	ldr	r3, [r7, #8]
 8003cce:	605a      	str	r2, [r3, #4]
 8003cd0:	68fb      	ldr	r3, [r7, #12]
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	691b      	ldr	r3, [r3, #16]
 8003cd6:	f3c3 020e 	ubfx	r2, r3, #0, #15
 8003cda:	68bb      	ldr	r3, [r7, #8]
 8003cdc:	609a      	str	r2, [r3, #8]
 8003cde:	68fb      	ldr	r3, [r7, #12]
 8003ce0:	681b      	ldr	r3, [r3, #0]
 8003ce2:	681b      	ldr	r3, [r3, #0]
 8003ce4:	f003 337f 	and.w	r3, r3, #2139062143	; 0x7f7f7f7f
 8003ce8:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
 8003cec:	617b      	str	r3, [r7, #20]
 8003cee:	697b      	ldr	r3, [r7, #20]
 8003cf0:	0c1b      	lsrs	r3, r3, #16
 8003cf2:	b2db      	uxtb	r3, r3
 8003cf4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003cf8:	b2da      	uxtb	r2, r3
 8003cfa:	68bb      	ldr	r3, [r7, #8]
 8003cfc:	701a      	strb	r2, [r3, #0]
 8003cfe:	697b      	ldr	r3, [r7, #20]
 8003d00:	0a1b      	lsrs	r3, r3, #8
 8003d02:	b2db      	uxtb	r3, r3
 8003d04:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8003d08:	b2da      	uxtb	r2, r3
 8003d0a:	68bb      	ldr	r3, [r7, #8]
 8003d0c:	705a      	strb	r2, [r3, #1]
 8003d0e:	697b      	ldr	r3, [r7, #20]
 8003d10:	b2db      	uxtb	r3, r3
 8003d12:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8003d16:	b2da      	uxtb	r2, r3
 8003d18:	68bb      	ldr	r3, [r7, #8]
 8003d1a:	709a      	strb	r2, [r3, #2]
 8003d1c:	697b      	ldr	r3, [r7, #20]
 8003d1e:	0d9b      	lsrs	r3, r3, #22
 8003d20:	b2db      	uxtb	r3, r3
 8003d22:	f003 0301 	and.w	r3, r3, #1
 8003d26:	b2da      	uxtb	r2, r3
 8003d28:	68bb      	ldr	r3, [r7, #8]
 8003d2a:	70da      	strb	r2, [r3, #3]
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	2b00      	cmp	r3, #0
 8003d30:	d11a      	bne.n	8003d68 <HAL_RTC_GetTime+0xb2>
 8003d32:	68bb      	ldr	r3, [r7, #8]
 8003d34:	781b      	ldrb	r3, [r3, #0]
 8003d36:	4618      	mov	r0, r3
 8003d38:	f000 f98c 	bl	8004054 <RTC_Bcd2ToByte>
 8003d3c:	4603      	mov	r3, r0
 8003d3e:	461a      	mov	r2, r3
 8003d40:	68bb      	ldr	r3, [r7, #8]
 8003d42:	701a      	strb	r2, [r3, #0]
 8003d44:	68bb      	ldr	r3, [r7, #8]
 8003d46:	785b      	ldrb	r3, [r3, #1]
 8003d48:	4618      	mov	r0, r3
 8003d4a:	f000 f983 	bl	8004054 <RTC_Bcd2ToByte>
 8003d4e:	4603      	mov	r3, r0
 8003d50:	461a      	mov	r2, r3
 8003d52:	68bb      	ldr	r3, [r7, #8]
 8003d54:	705a      	strb	r2, [r3, #1]
 8003d56:	68bb      	ldr	r3, [r7, #8]
 8003d58:	789b      	ldrb	r3, [r3, #2]
 8003d5a:	4618      	mov	r0, r3
 8003d5c:	f000 f97a 	bl	8004054 <RTC_Bcd2ToByte>
 8003d60:	4603      	mov	r3, r0
 8003d62:	461a      	mov	r2, r3
 8003d64:	68bb      	ldr	r3, [r7, #8]
 8003d66:	709a      	strb	r2, [r3, #2]
 8003d68:	2300      	movs	r3, #0
 8003d6a:	4618      	mov	r0, r3
 8003d6c:	3718      	adds	r7, #24
 8003d6e:	46bd      	mov	sp, r7
 8003d70:	bd80      	pop	{r7, pc}

08003d72 <HAL_RTC_SetDate>:
 8003d72:	b590      	push	{r4, r7, lr}
 8003d74:	b087      	sub	sp, #28
 8003d76:	af00      	add	r7, sp, #0
 8003d78:	60f8      	str	r0, [r7, #12]
 8003d7a:	60b9      	str	r1, [r7, #8]
 8003d7c:	607a      	str	r2, [r7, #4]
 8003d7e:	2300      	movs	r3, #0
 8003d80:	617b      	str	r3, [r7, #20]
 8003d82:	68fb      	ldr	r3, [r7, #12]
 8003d84:	7f1b      	ldrb	r3, [r3, #28]
 8003d86:	2b01      	cmp	r3, #1
 8003d88:	d101      	bne.n	8003d8e <HAL_RTC_SetDate+0x1c>
 8003d8a:	2302      	movs	r3, #2
 8003d8c:	e071      	b.n	8003e72 <HAL_RTC_SetDate+0x100>
 8003d8e:	68fb      	ldr	r3, [r7, #12]
 8003d90:	2201      	movs	r2, #1
 8003d92:	771a      	strb	r2, [r3, #28]
 8003d94:	68fb      	ldr	r3, [r7, #12]
 8003d96:	2202      	movs	r2, #2
 8003d98:	775a      	strb	r2, [r3, #29]
 8003d9a:	687b      	ldr	r3, [r7, #4]
 8003d9c:	2b00      	cmp	r3, #0
 8003d9e:	d10e      	bne.n	8003dbe <HAL_RTC_SetDate+0x4c>
 8003da0:	68bb      	ldr	r3, [r7, #8]
 8003da2:	785b      	ldrb	r3, [r3, #1]
 8003da4:	f003 0310 	and.w	r3, r3, #16
 8003da8:	2b00      	cmp	r3, #0
 8003daa:	d008      	beq.n	8003dbe <HAL_RTC_SetDate+0x4c>
 8003dac:	68bb      	ldr	r3, [r7, #8]
 8003dae:	785b      	ldrb	r3, [r3, #1]
 8003db0:	f023 0310 	bic.w	r3, r3, #16
 8003db4:	b2db      	uxtb	r3, r3
 8003db6:	330a      	adds	r3, #10
 8003db8:	b2da      	uxtb	r2, r3
 8003dba:	68bb      	ldr	r3, [r7, #8]
 8003dbc:	705a      	strb	r2, [r3, #1]
 8003dbe:	687b      	ldr	r3, [r7, #4]
 8003dc0:	2b00      	cmp	r3, #0
 8003dc2:	d11c      	bne.n	8003dfe <HAL_RTC_SetDate+0x8c>
 8003dc4:	68bb      	ldr	r3, [r7, #8]
 8003dc6:	78db      	ldrb	r3, [r3, #3]
 8003dc8:	4618      	mov	r0, r3
 8003dca:	f000 f926 	bl	800401a <RTC_ByteToBcd2>
 8003dce:	4603      	mov	r3, r0
 8003dd0:	041c      	lsls	r4, r3, #16
 8003dd2:	68bb      	ldr	r3, [r7, #8]
 8003dd4:	785b      	ldrb	r3, [r3, #1]
 8003dd6:	4618      	mov	r0, r3
 8003dd8:	f000 f91f 	bl	800401a <RTC_ByteToBcd2>
 8003ddc:	4603      	mov	r3, r0
 8003dde:	021b      	lsls	r3, r3, #8
 8003de0:	431c      	orrs	r4, r3
 8003de2:	68bb      	ldr	r3, [r7, #8]
 8003de4:	789b      	ldrb	r3, [r3, #2]
 8003de6:	4618      	mov	r0, r3
 8003de8:	f000 f917 	bl	800401a <RTC_ByteToBcd2>
 8003dec:	4603      	mov	r3, r0
 8003dee:	ea44 0203 	orr.w	r2, r4, r3
 8003df2:	68bb      	ldr	r3, [r7, #8]
 8003df4:	781b      	ldrb	r3, [r3, #0]
 8003df6:	035b      	lsls	r3, r3, #13
 8003df8:	4313      	orrs	r3, r2
 8003dfa:	617b      	str	r3, [r7, #20]
 8003dfc:	e00e      	b.n	8003e1c <HAL_RTC_SetDate+0xaa>
 8003dfe:	68bb      	ldr	r3, [r7, #8]
 8003e00:	78db      	ldrb	r3, [r3, #3]
 8003e02:	041a      	lsls	r2, r3, #16
 8003e04:	68bb      	ldr	r3, [r7, #8]
 8003e06:	785b      	ldrb	r3, [r3, #1]
 8003e08:	021b      	lsls	r3, r3, #8
 8003e0a:	4313      	orrs	r3, r2
 8003e0c:	68ba      	ldr	r2, [r7, #8]
 8003e0e:	7892      	ldrb	r2, [r2, #2]
 8003e10:	431a      	orrs	r2, r3
 8003e12:	68bb      	ldr	r3, [r7, #8]
 8003e14:	781b      	ldrb	r3, [r3, #0]
 8003e16:	035b      	lsls	r3, r3, #13
 8003e18:	4313      	orrs	r3, r2
 8003e1a:	617b      	str	r3, [r7, #20]
 8003e1c:	68fb      	ldr	r3, [r7, #12]
 8003e1e:	681b      	ldr	r3, [r3, #0]
 8003e20:	22ca      	movs	r2, #202	; 0xca
 8003e22:	625a      	str	r2, [r3, #36]	; 0x24
 8003e24:	68fb      	ldr	r3, [r7, #12]
 8003e26:	681b      	ldr	r3, [r3, #0]
 8003e28:	2253      	movs	r2, #83	; 0x53
 8003e2a:	625a      	str	r2, [r3, #36]	; 0x24
 8003e2c:	68f8      	ldr	r0, [r7, #12]
 8003e2e:	f000 f898 	bl	8003f62 <RTC_EnterInitMode>
 8003e32:	4603      	mov	r3, r0
 8003e34:	74fb      	strb	r3, [r7, #19]
 8003e36:	7cfb      	ldrb	r3, [r7, #19]
 8003e38:	2b00      	cmp	r3, #0
 8003e3a:	d10c      	bne.n	8003e56 <HAL_RTC_SetDate+0xe4>
 8003e3c:	68fb      	ldr	r3, [r7, #12]
 8003e3e:	681a      	ldr	r2, [r3, #0]
 8003e40:	697b      	ldr	r3, [r7, #20]
 8003e42:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8003e46:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8003e4a:	6053      	str	r3, [r2, #4]
 8003e4c:	68f8      	ldr	r0, [r7, #12]
 8003e4e:	f000 f8bf 	bl	8003fd0 <RTC_ExitInitMode>
 8003e52:	4603      	mov	r3, r0
 8003e54:	74fb      	strb	r3, [r7, #19]
 8003e56:	7cfb      	ldrb	r3, [r7, #19]
 8003e58:	2b00      	cmp	r3, #0
 8003e5a:	d102      	bne.n	8003e62 <HAL_RTC_SetDate+0xf0>
 8003e5c:	68fb      	ldr	r3, [r7, #12]
 8003e5e:	2201      	movs	r2, #1
 8003e60:	775a      	strb	r2, [r3, #29]
 8003e62:	68fb      	ldr	r3, [r7, #12]
 8003e64:	681b      	ldr	r3, [r3, #0]
 8003e66:	22ff      	movs	r2, #255	; 0xff
 8003e68:	625a      	str	r2, [r3, #36]	; 0x24
 8003e6a:	68fb      	ldr	r3, [r7, #12]
 8003e6c:	2200      	movs	r2, #0
 8003e6e:	771a      	strb	r2, [r3, #28]
 8003e70:	7cfb      	ldrb	r3, [r7, #19]
 8003e72:	4618      	mov	r0, r3
 8003e74:	371c      	adds	r7, #28
 8003e76:	46bd      	mov	sp, r7
 8003e78:	bd90      	pop	{r4, r7, pc}

08003e7a <HAL_RTC_GetDate>:
 8003e7a:	b580      	push	{r7, lr}
 8003e7c:	b086      	sub	sp, #24
 8003e7e:	af00      	add	r7, sp, #0
 8003e80:	60f8      	str	r0, [r7, #12]
 8003e82:	60b9      	str	r1, [r7, #8]
 8003e84:	607a      	str	r2, [r7, #4]
 8003e86:	2300      	movs	r3, #0
 8003e88:	617b      	str	r3, [r7, #20]
 8003e8a:	68fb      	ldr	r3, [r7, #12]
 8003e8c:	681b      	ldr	r3, [r3, #0]
 8003e8e:	685b      	ldr	r3, [r3, #4]
 8003e90:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8003e94:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8003e98:	617b      	str	r3, [r7, #20]
 8003e9a:	697b      	ldr	r3, [r7, #20]
 8003e9c:	0c1b      	lsrs	r3, r3, #16
 8003e9e:	b2da      	uxtb	r2, r3
 8003ea0:	68bb      	ldr	r3, [r7, #8]
 8003ea2:	70da      	strb	r2, [r3, #3]
 8003ea4:	697b      	ldr	r3, [r7, #20]
 8003ea6:	0a1b      	lsrs	r3, r3, #8
 8003ea8:	b2db      	uxtb	r3, r3
 8003eaa:	f003 031f 	and.w	r3, r3, #31
 8003eae:	b2da      	uxtb	r2, r3
 8003eb0:	68bb      	ldr	r3, [r7, #8]
 8003eb2:	705a      	strb	r2, [r3, #1]
 8003eb4:	697b      	ldr	r3, [r7, #20]
 8003eb6:	b2db      	uxtb	r3, r3
 8003eb8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003ebc:	b2da      	uxtb	r2, r3
 8003ebe:	68bb      	ldr	r3, [r7, #8]
 8003ec0:	709a      	strb	r2, [r3, #2]
 8003ec2:	697b      	ldr	r3, [r7, #20]
 8003ec4:	0b5b      	lsrs	r3, r3, #13
 8003ec6:	b2db      	uxtb	r3, r3
 8003ec8:	f003 0307 	and.w	r3, r3, #7
 8003ecc:	b2da      	uxtb	r2, r3
 8003ece:	68bb      	ldr	r3, [r7, #8]
 8003ed0:	701a      	strb	r2, [r3, #0]
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	2b00      	cmp	r3, #0
 8003ed6:	d11a      	bne.n	8003f0e <HAL_RTC_GetDate+0x94>
 8003ed8:	68bb      	ldr	r3, [r7, #8]
 8003eda:	78db      	ldrb	r3, [r3, #3]
 8003edc:	4618      	mov	r0, r3
 8003ede:	f000 f8b9 	bl	8004054 <RTC_Bcd2ToByte>
 8003ee2:	4603      	mov	r3, r0
 8003ee4:	461a      	mov	r2, r3
 8003ee6:	68bb      	ldr	r3, [r7, #8]
 8003ee8:	70da      	strb	r2, [r3, #3]
 8003eea:	68bb      	ldr	r3, [r7, #8]
 8003eec:	785b      	ldrb	r3, [r3, #1]
 8003eee:	4618      	mov	r0, r3
 8003ef0:	f000 f8b0 	bl	8004054 <RTC_Bcd2ToByte>
 8003ef4:	4603      	mov	r3, r0
 8003ef6:	461a      	mov	r2, r3
 8003ef8:	68bb      	ldr	r3, [r7, #8]
 8003efa:	705a      	strb	r2, [r3, #1]
 8003efc:	68bb      	ldr	r3, [r7, #8]
 8003efe:	789b      	ldrb	r3, [r3, #2]
 8003f00:	4618      	mov	r0, r3
 8003f02:	f000 f8a7 	bl	8004054 <RTC_Bcd2ToByte>
 8003f06:	4603      	mov	r3, r0
 8003f08:	461a      	mov	r2, r3
 8003f0a:	68bb      	ldr	r3, [r7, #8]
 8003f0c:	709a      	strb	r2, [r3, #2]
 8003f0e:	2300      	movs	r3, #0
 8003f10:	4618      	mov	r0, r3
 8003f12:	3718      	adds	r7, #24
 8003f14:	46bd      	mov	sp, r7
 8003f16:	bd80      	pop	{r7, pc}

08003f18 <HAL_RTC_WaitForSynchro>:
 8003f18:	b580      	push	{r7, lr}
 8003f1a:	b084      	sub	sp, #16
 8003f1c:	af00      	add	r7, sp, #0
 8003f1e:	6078      	str	r0, [r7, #4]
 8003f20:	2300      	movs	r3, #0
 8003f22:	60fb      	str	r3, [r7, #12]
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	681b      	ldr	r3, [r3, #0]
 8003f28:	f64f 7257 	movw	r2, #65367	; 0xff57
 8003f2c:	60da      	str	r2, [r3, #12]
 8003f2e:	f7fd ff23 	bl	8001d78 <HAL_GetTick>
 8003f32:	60f8      	str	r0, [r7, #12]
 8003f34:	e009      	b.n	8003f4a <HAL_RTC_WaitForSynchro+0x32>
 8003f36:	f7fd ff1f 	bl	8001d78 <HAL_GetTick>
 8003f3a:	4602      	mov	r2, r0
 8003f3c:	68fb      	ldr	r3, [r7, #12]
 8003f3e:	1ad3      	subs	r3, r2, r3
 8003f40:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003f44:	d901      	bls.n	8003f4a <HAL_RTC_WaitForSynchro+0x32>
 8003f46:	2303      	movs	r3, #3
 8003f48:	e007      	b.n	8003f5a <HAL_RTC_WaitForSynchro+0x42>
 8003f4a:	687b      	ldr	r3, [r7, #4]
 8003f4c:	681b      	ldr	r3, [r3, #0]
 8003f4e:	68db      	ldr	r3, [r3, #12]
 8003f50:	f003 0320 	and.w	r3, r3, #32
 8003f54:	2b00      	cmp	r3, #0
 8003f56:	d0ee      	beq.n	8003f36 <HAL_RTC_WaitForSynchro+0x1e>
 8003f58:	2300      	movs	r3, #0
 8003f5a:	4618      	mov	r0, r3
 8003f5c:	3710      	adds	r7, #16
 8003f5e:	46bd      	mov	sp, r7
 8003f60:	bd80      	pop	{r7, pc}

08003f62 <RTC_EnterInitMode>:
 8003f62:	b580      	push	{r7, lr}
 8003f64:	b084      	sub	sp, #16
 8003f66:	af00      	add	r7, sp, #0
 8003f68:	6078      	str	r0, [r7, #4]
 8003f6a:	2300      	movs	r3, #0
 8003f6c:	60bb      	str	r3, [r7, #8]
 8003f6e:	2300      	movs	r3, #0
 8003f70:	73fb      	strb	r3, [r7, #15]
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	681b      	ldr	r3, [r3, #0]
 8003f76:	68db      	ldr	r3, [r3, #12]
 8003f78:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003f7c:	2b00      	cmp	r3, #0
 8003f7e:	d122      	bne.n	8003fc6 <RTC_EnterInitMode+0x64>
 8003f80:	687b      	ldr	r3, [r7, #4]
 8003f82:	681b      	ldr	r3, [r3, #0]
 8003f84:	68da      	ldr	r2, [r3, #12]
 8003f86:	687b      	ldr	r3, [r7, #4]
 8003f88:	681b      	ldr	r3, [r3, #0]
 8003f8a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003f8e:	60da      	str	r2, [r3, #12]
 8003f90:	f7fd fef2 	bl	8001d78 <HAL_GetTick>
 8003f94:	60b8      	str	r0, [r7, #8]
 8003f96:	e00c      	b.n	8003fb2 <RTC_EnterInitMode+0x50>
 8003f98:	f7fd feee 	bl	8001d78 <HAL_GetTick>
 8003f9c:	4602      	mov	r2, r0
 8003f9e:	68bb      	ldr	r3, [r7, #8]
 8003fa0:	1ad3      	subs	r3, r2, r3
 8003fa2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003fa6:	d904      	bls.n	8003fb2 <RTC_EnterInitMode+0x50>
 8003fa8:	687b      	ldr	r3, [r7, #4]
 8003faa:	2204      	movs	r2, #4
 8003fac:	775a      	strb	r2, [r3, #29]
 8003fae:	2301      	movs	r3, #1
 8003fb0:	73fb      	strb	r3, [r7, #15]
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	681b      	ldr	r3, [r3, #0]
 8003fb6:	68db      	ldr	r3, [r3, #12]
 8003fb8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003fbc:	2b00      	cmp	r3, #0
 8003fbe:	d102      	bne.n	8003fc6 <RTC_EnterInitMode+0x64>
 8003fc0:	7bfb      	ldrb	r3, [r7, #15]
 8003fc2:	2b01      	cmp	r3, #1
 8003fc4:	d1e8      	bne.n	8003f98 <RTC_EnterInitMode+0x36>
 8003fc6:	7bfb      	ldrb	r3, [r7, #15]
 8003fc8:	4618      	mov	r0, r3
 8003fca:	3710      	adds	r7, #16
 8003fcc:	46bd      	mov	sp, r7
 8003fce:	bd80      	pop	{r7, pc}

08003fd0 <RTC_ExitInitMode>:
 8003fd0:	b580      	push	{r7, lr}
 8003fd2:	b084      	sub	sp, #16
 8003fd4:	af00      	add	r7, sp, #0
 8003fd6:	6078      	str	r0, [r7, #4]
 8003fd8:	2300      	movs	r3, #0
 8003fda:	73fb      	strb	r3, [r7, #15]
 8003fdc:	687b      	ldr	r3, [r7, #4]
 8003fde:	681b      	ldr	r3, [r3, #0]
 8003fe0:	68da      	ldr	r2, [r3, #12]
 8003fe2:	687b      	ldr	r3, [r7, #4]
 8003fe4:	681b      	ldr	r3, [r3, #0]
 8003fe6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003fea:	60da      	str	r2, [r3, #12]
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	681b      	ldr	r3, [r3, #0]
 8003ff0:	689b      	ldr	r3, [r3, #8]
 8003ff2:	f003 0320 	and.w	r3, r3, #32
 8003ff6:	2b00      	cmp	r3, #0
 8003ff8:	d10a      	bne.n	8004010 <RTC_ExitInitMode+0x40>
 8003ffa:	6878      	ldr	r0, [r7, #4]
 8003ffc:	f7ff ff8c 	bl	8003f18 <HAL_RTC_WaitForSynchro>
 8004000:	4603      	mov	r3, r0
 8004002:	2b00      	cmp	r3, #0
 8004004:	d004      	beq.n	8004010 <RTC_ExitInitMode+0x40>
 8004006:	687b      	ldr	r3, [r7, #4]
 8004008:	2204      	movs	r2, #4
 800400a:	775a      	strb	r2, [r3, #29]
 800400c:	2301      	movs	r3, #1
 800400e:	73fb      	strb	r3, [r7, #15]
 8004010:	7bfb      	ldrb	r3, [r7, #15]
 8004012:	4618      	mov	r0, r3
 8004014:	3710      	adds	r7, #16
 8004016:	46bd      	mov	sp, r7
 8004018:	bd80      	pop	{r7, pc}

0800401a <RTC_ByteToBcd2>:
 800401a:	b480      	push	{r7}
 800401c:	b085      	sub	sp, #20
 800401e:	af00      	add	r7, sp, #0
 8004020:	4603      	mov	r3, r0
 8004022:	71fb      	strb	r3, [r7, #7]
 8004024:	2300      	movs	r3, #0
 8004026:	60fb      	str	r3, [r7, #12]
 8004028:	e005      	b.n	8004036 <RTC_ByteToBcd2+0x1c>
 800402a:	68fb      	ldr	r3, [r7, #12]
 800402c:	3301      	adds	r3, #1
 800402e:	60fb      	str	r3, [r7, #12]
 8004030:	79fb      	ldrb	r3, [r7, #7]
 8004032:	3b0a      	subs	r3, #10
 8004034:	71fb      	strb	r3, [r7, #7]
 8004036:	79fb      	ldrb	r3, [r7, #7]
 8004038:	2b09      	cmp	r3, #9
 800403a:	d8f6      	bhi.n	800402a <RTC_ByteToBcd2+0x10>
 800403c:	68fb      	ldr	r3, [r7, #12]
 800403e:	b2db      	uxtb	r3, r3
 8004040:	011b      	lsls	r3, r3, #4
 8004042:	b2da      	uxtb	r2, r3
 8004044:	79fb      	ldrb	r3, [r7, #7]
 8004046:	4313      	orrs	r3, r2
 8004048:	b2db      	uxtb	r3, r3
 800404a:	4618      	mov	r0, r3
 800404c:	3714      	adds	r7, #20
 800404e:	46bd      	mov	sp, r7
 8004050:	bc80      	pop	{r7}
 8004052:	4770      	bx	lr

08004054 <RTC_Bcd2ToByte>:
 8004054:	b480      	push	{r7}
 8004056:	b085      	sub	sp, #20
 8004058:	af00      	add	r7, sp, #0
 800405a:	4603      	mov	r3, r0
 800405c:	71fb      	strb	r3, [r7, #7]
 800405e:	2300      	movs	r3, #0
 8004060:	60fb      	str	r3, [r7, #12]
 8004062:	79fb      	ldrb	r3, [r7, #7]
 8004064:	091b      	lsrs	r3, r3, #4
 8004066:	b2db      	uxtb	r3, r3
 8004068:	461a      	mov	r2, r3
 800406a:	4613      	mov	r3, r2
 800406c:	009b      	lsls	r3, r3, #2
 800406e:	4413      	add	r3, r2
 8004070:	005b      	lsls	r3, r3, #1
 8004072:	60fb      	str	r3, [r7, #12]
 8004074:	68fb      	ldr	r3, [r7, #12]
 8004076:	b2da      	uxtb	r2, r3
 8004078:	79fb      	ldrb	r3, [r7, #7]
 800407a:	f003 030f 	and.w	r3, r3, #15
 800407e:	b2db      	uxtb	r3, r3
 8004080:	4413      	add	r3, r2
 8004082:	b2db      	uxtb	r3, r3
 8004084:	4618      	mov	r0, r3
 8004086:	3714      	adds	r7, #20
 8004088:	46bd      	mov	sp, r7
 800408a:	bc80      	pop	{r7}
 800408c:	4770      	bx	lr

0800408e <HAL_SPI_Init>:
 800408e:	b580      	push	{r7, lr}
 8004090:	b082      	sub	sp, #8
 8004092:	af00      	add	r7, sp, #0
 8004094:	6078      	str	r0, [r7, #4]
 8004096:	687b      	ldr	r3, [r7, #4]
 8004098:	2b00      	cmp	r3, #0
 800409a:	d101      	bne.n	80040a0 <HAL_SPI_Init+0x12>
 800409c:	2301      	movs	r3, #1
 800409e:	e07b      	b.n	8004198 <HAL_SPI_Init+0x10a>
 80040a0:	687b      	ldr	r3, [r7, #4]
 80040a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040a4:	2b00      	cmp	r3, #0
 80040a6:	d108      	bne.n	80040ba <HAL_SPI_Init+0x2c>
 80040a8:	687b      	ldr	r3, [r7, #4]
 80040aa:	685b      	ldr	r3, [r3, #4]
 80040ac:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80040b0:	d009      	beq.n	80040c6 <HAL_SPI_Init+0x38>
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	2200      	movs	r2, #0
 80040b6:	61da      	str	r2, [r3, #28]
 80040b8:	e005      	b.n	80040c6 <HAL_SPI_Init+0x38>
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	2200      	movs	r2, #0
 80040be:	611a      	str	r2, [r3, #16]
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	2200      	movs	r2, #0
 80040c4:	615a      	str	r2, [r3, #20]
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	2200      	movs	r2, #0
 80040ca:	629a      	str	r2, [r3, #40]	; 0x28
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80040d2:	b2db      	uxtb	r3, r3
 80040d4:	2b00      	cmp	r3, #0
 80040d6:	d106      	bne.n	80040e6 <HAL_SPI_Init+0x58>
 80040d8:	687b      	ldr	r3, [r7, #4]
 80040da:	2200      	movs	r2, #0
 80040dc:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80040e0:	6878      	ldr	r0, [r7, #4]
 80040e2:	f7fd fc3b 	bl	800195c <HAL_SPI_MspInit>
 80040e6:	687b      	ldr	r3, [r7, #4]
 80040e8:	2202      	movs	r2, #2
 80040ea:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80040ee:	687b      	ldr	r3, [r7, #4]
 80040f0:	681b      	ldr	r3, [r3, #0]
 80040f2:	681a      	ldr	r2, [r3, #0]
 80040f4:	687b      	ldr	r3, [r7, #4]
 80040f6:	681b      	ldr	r3, [r3, #0]
 80040f8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80040fc:	601a      	str	r2, [r3, #0]
 80040fe:	687b      	ldr	r3, [r7, #4]
 8004100:	685b      	ldr	r3, [r3, #4]
 8004102:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8004106:	687b      	ldr	r3, [r7, #4]
 8004108:	689b      	ldr	r3, [r3, #8]
 800410a:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 800410e:	431a      	orrs	r2, r3
 8004110:	687b      	ldr	r3, [r7, #4]
 8004112:	68db      	ldr	r3, [r3, #12]
 8004114:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004118:	431a      	orrs	r2, r3
 800411a:	687b      	ldr	r3, [r7, #4]
 800411c:	691b      	ldr	r3, [r3, #16]
 800411e:	f003 0302 	and.w	r3, r3, #2
 8004122:	431a      	orrs	r2, r3
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	695b      	ldr	r3, [r3, #20]
 8004128:	f003 0301 	and.w	r3, r3, #1
 800412c:	431a      	orrs	r2, r3
 800412e:	687b      	ldr	r3, [r7, #4]
 8004130:	699b      	ldr	r3, [r3, #24]
 8004132:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004136:	431a      	orrs	r2, r3
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	69db      	ldr	r3, [r3, #28]
 800413c:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8004140:	431a      	orrs	r2, r3
 8004142:	687b      	ldr	r3, [r7, #4]
 8004144:	6a1b      	ldr	r3, [r3, #32]
 8004146:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800414a:	ea42 0103 	orr.w	r1, r2, r3
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004152:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	681b      	ldr	r3, [r3, #0]
 800415a:	430a      	orrs	r2, r1
 800415c:	601a      	str	r2, [r3, #0]
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	699b      	ldr	r3, [r3, #24]
 8004162:	0c1b      	lsrs	r3, r3, #16
 8004164:	f003 0104 	and.w	r1, r3, #4
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800416c:	f003 0210 	and.w	r2, r3, #16
 8004170:	687b      	ldr	r3, [r7, #4]
 8004172:	681b      	ldr	r3, [r3, #0]
 8004174:	430a      	orrs	r2, r1
 8004176:	605a      	str	r2, [r3, #4]
 8004178:	687b      	ldr	r3, [r7, #4]
 800417a:	681b      	ldr	r3, [r3, #0]
 800417c:	69da      	ldr	r2, [r3, #28]
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	681b      	ldr	r3, [r3, #0]
 8004182:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004186:	61da      	str	r2, [r3, #28]
 8004188:	687b      	ldr	r3, [r7, #4]
 800418a:	2200      	movs	r2, #0
 800418c:	655a      	str	r2, [r3, #84]	; 0x54
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	2201      	movs	r2, #1
 8004192:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004196:	2300      	movs	r3, #0
 8004198:	4618      	mov	r0, r3
 800419a:	3708      	adds	r7, #8
 800419c:	46bd      	mov	sp, r7
 800419e:	bd80      	pop	{r7, pc}

080041a0 <HAL_SPI_Transmit>:
 80041a0:	b580      	push	{r7, lr}
 80041a2:	b088      	sub	sp, #32
 80041a4:	af00      	add	r7, sp, #0
 80041a6:	60f8      	str	r0, [r7, #12]
 80041a8:	60b9      	str	r1, [r7, #8]
 80041aa:	603b      	str	r3, [r7, #0]
 80041ac:	4613      	mov	r3, r2
 80041ae:	80fb      	strh	r3, [r7, #6]
 80041b0:	2300      	movs	r3, #0
 80041b2:	77fb      	strb	r3, [r7, #31]
 80041b4:	68fb      	ldr	r3, [r7, #12]
 80041b6:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80041ba:	2b01      	cmp	r3, #1
 80041bc:	d101      	bne.n	80041c2 <HAL_SPI_Transmit+0x22>
 80041be:	2302      	movs	r3, #2
 80041c0:	e12d      	b.n	800441e <HAL_SPI_Transmit+0x27e>
 80041c2:	68fb      	ldr	r3, [r7, #12]
 80041c4:	2201      	movs	r2, #1
 80041c6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80041ca:	f7fd fdd5 	bl	8001d78 <HAL_GetTick>
 80041ce:	61b8      	str	r0, [r7, #24]
 80041d0:	88fb      	ldrh	r3, [r7, #6]
 80041d2:	82fb      	strh	r3, [r7, #22]
 80041d4:	68fb      	ldr	r3, [r7, #12]
 80041d6:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80041da:	b2db      	uxtb	r3, r3
 80041dc:	2b01      	cmp	r3, #1
 80041de:	d002      	beq.n	80041e6 <HAL_SPI_Transmit+0x46>
 80041e0:	2302      	movs	r3, #2
 80041e2:	77fb      	strb	r3, [r7, #31]
 80041e4:	e116      	b.n	8004414 <HAL_SPI_Transmit+0x274>
 80041e6:	68bb      	ldr	r3, [r7, #8]
 80041e8:	2b00      	cmp	r3, #0
 80041ea:	d002      	beq.n	80041f2 <HAL_SPI_Transmit+0x52>
 80041ec:	88fb      	ldrh	r3, [r7, #6]
 80041ee:	2b00      	cmp	r3, #0
 80041f0:	d102      	bne.n	80041f8 <HAL_SPI_Transmit+0x58>
 80041f2:	2301      	movs	r3, #1
 80041f4:	77fb      	strb	r3, [r7, #31]
 80041f6:	e10d      	b.n	8004414 <HAL_SPI_Transmit+0x274>
 80041f8:	68fb      	ldr	r3, [r7, #12]
 80041fa:	2203      	movs	r2, #3
 80041fc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004200:	68fb      	ldr	r3, [r7, #12]
 8004202:	2200      	movs	r2, #0
 8004204:	655a      	str	r2, [r3, #84]	; 0x54
 8004206:	68fb      	ldr	r3, [r7, #12]
 8004208:	68ba      	ldr	r2, [r7, #8]
 800420a:	631a      	str	r2, [r3, #48]	; 0x30
 800420c:	68fb      	ldr	r3, [r7, #12]
 800420e:	88fa      	ldrh	r2, [r7, #6]
 8004210:	869a      	strh	r2, [r3, #52]	; 0x34
 8004212:	68fb      	ldr	r3, [r7, #12]
 8004214:	88fa      	ldrh	r2, [r7, #6]
 8004216:	86da      	strh	r2, [r3, #54]	; 0x36
 8004218:	68fb      	ldr	r3, [r7, #12]
 800421a:	2200      	movs	r2, #0
 800421c:	639a      	str	r2, [r3, #56]	; 0x38
 800421e:	68fb      	ldr	r3, [r7, #12]
 8004220:	2200      	movs	r2, #0
 8004222:	879a      	strh	r2, [r3, #60]	; 0x3c
 8004224:	68fb      	ldr	r3, [r7, #12]
 8004226:	2200      	movs	r2, #0
 8004228:	87da      	strh	r2, [r3, #62]	; 0x3e
 800422a:	68fb      	ldr	r3, [r7, #12]
 800422c:	2200      	movs	r2, #0
 800422e:	645a      	str	r2, [r3, #68]	; 0x44
 8004230:	68fb      	ldr	r3, [r7, #12]
 8004232:	2200      	movs	r2, #0
 8004234:	641a      	str	r2, [r3, #64]	; 0x40
 8004236:	68fb      	ldr	r3, [r7, #12]
 8004238:	689b      	ldr	r3, [r3, #8]
 800423a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800423e:	d10f      	bne.n	8004260 <HAL_SPI_Transmit+0xc0>
 8004240:	68fb      	ldr	r3, [r7, #12]
 8004242:	681b      	ldr	r3, [r3, #0]
 8004244:	681a      	ldr	r2, [r3, #0]
 8004246:	68fb      	ldr	r3, [r7, #12]
 8004248:	681b      	ldr	r3, [r3, #0]
 800424a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800424e:	601a      	str	r2, [r3, #0]
 8004250:	68fb      	ldr	r3, [r7, #12]
 8004252:	681b      	ldr	r3, [r3, #0]
 8004254:	681a      	ldr	r2, [r3, #0]
 8004256:	68fb      	ldr	r3, [r7, #12]
 8004258:	681b      	ldr	r3, [r3, #0]
 800425a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800425e:	601a      	str	r2, [r3, #0]
 8004260:	68fb      	ldr	r3, [r7, #12]
 8004262:	681b      	ldr	r3, [r3, #0]
 8004264:	681b      	ldr	r3, [r3, #0]
 8004266:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800426a:	2b40      	cmp	r3, #64	; 0x40
 800426c:	d007      	beq.n	800427e <HAL_SPI_Transmit+0xde>
 800426e:	68fb      	ldr	r3, [r7, #12]
 8004270:	681b      	ldr	r3, [r3, #0]
 8004272:	681a      	ldr	r2, [r3, #0]
 8004274:	68fb      	ldr	r3, [r7, #12]
 8004276:	681b      	ldr	r3, [r3, #0]
 8004278:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800427c:	601a      	str	r2, [r3, #0]
 800427e:	68fb      	ldr	r3, [r7, #12]
 8004280:	68db      	ldr	r3, [r3, #12]
 8004282:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004286:	d14f      	bne.n	8004328 <HAL_SPI_Transmit+0x188>
 8004288:	68fb      	ldr	r3, [r7, #12]
 800428a:	685b      	ldr	r3, [r3, #4]
 800428c:	2b00      	cmp	r3, #0
 800428e:	d002      	beq.n	8004296 <HAL_SPI_Transmit+0xf6>
 8004290:	8afb      	ldrh	r3, [r7, #22]
 8004292:	2b01      	cmp	r3, #1
 8004294:	d142      	bne.n	800431c <HAL_SPI_Transmit+0x17c>
 8004296:	68fb      	ldr	r3, [r7, #12]
 8004298:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800429a:	881a      	ldrh	r2, [r3, #0]
 800429c:	68fb      	ldr	r3, [r7, #12]
 800429e:	681b      	ldr	r3, [r3, #0]
 80042a0:	60da      	str	r2, [r3, #12]
 80042a2:	68fb      	ldr	r3, [r7, #12]
 80042a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80042a6:	1c9a      	adds	r2, r3, #2
 80042a8:	68fb      	ldr	r3, [r7, #12]
 80042aa:	631a      	str	r2, [r3, #48]	; 0x30
 80042ac:	68fb      	ldr	r3, [r7, #12]
 80042ae:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80042b0:	b29b      	uxth	r3, r3
 80042b2:	3b01      	subs	r3, #1
 80042b4:	b29a      	uxth	r2, r3
 80042b6:	68fb      	ldr	r3, [r7, #12]
 80042b8:	86da      	strh	r2, [r3, #54]	; 0x36
 80042ba:	e02f      	b.n	800431c <HAL_SPI_Transmit+0x17c>
 80042bc:	68fb      	ldr	r3, [r7, #12]
 80042be:	681b      	ldr	r3, [r3, #0]
 80042c0:	689b      	ldr	r3, [r3, #8]
 80042c2:	f003 0302 	and.w	r3, r3, #2
 80042c6:	2b02      	cmp	r3, #2
 80042c8:	d112      	bne.n	80042f0 <HAL_SPI_Transmit+0x150>
 80042ca:	68fb      	ldr	r3, [r7, #12]
 80042cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80042ce:	881a      	ldrh	r2, [r3, #0]
 80042d0:	68fb      	ldr	r3, [r7, #12]
 80042d2:	681b      	ldr	r3, [r3, #0]
 80042d4:	60da      	str	r2, [r3, #12]
 80042d6:	68fb      	ldr	r3, [r7, #12]
 80042d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80042da:	1c9a      	adds	r2, r3, #2
 80042dc:	68fb      	ldr	r3, [r7, #12]
 80042de:	631a      	str	r2, [r3, #48]	; 0x30
 80042e0:	68fb      	ldr	r3, [r7, #12]
 80042e2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80042e4:	b29b      	uxth	r3, r3
 80042e6:	3b01      	subs	r3, #1
 80042e8:	b29a      	uxth	r2, r3
 80042ea:	68fb      	ldr	r3, [r7, #12]
 80042ec:	86da      	strh	r2, [r3, #54]	; 0x36
 80042ee:	e015      	b.n	800431c <HAL_SPI_Transmit+0x17c>
 80042f0:	f7fd fd42 	bl	8001d78 <HAL_GetTick>
 80042f4:	4602      	mov	r2, r0
 80042f6:	69bb      	ldr	r3, [r7, #24]
 80042f8:	1ad3      	subs	r3, r2, r3
 80042fa:	683a      	ldr	r2, [r7, #0]
 80042fc:	429a      	cmp	r2, r3
 80042fe:	d803      	bhi.n	8004308 <HAL_SPI_Transmit+0x168>
 8004300:	683b      	ldr	r3, [r7, #0]
 8004302:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004306:	d102      	bne.n	800430e <HAL_SPI_Transmit+0x16e>
 8004308:	683b      	ldr	r3, [r7, #0]
 800430a:	2b00      	cmp	r3, #0
 800430c:	d106      	bne.n	800431c <HAL_SPI_Transmit+0x17c>
 800430e:	2303      	movs	r3, #3
 8004310:	77fb      	strb	r3, [r7, #31]
 8004312:	68fb      	ldr	r3, [r7, #12]
 8004314:	2201      	movs	r2, #1
 8004316:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800431a:	e07b      	b.n	8004414 <HAL_SPI_Transmit+0x274>
 800431c:	68fb      	ldr	r3, [r7, #12]
 800431e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004320:	b29b      	uxth	r3, r3
 8004322:	2b00      	cmp	r3, #0
 8004324:	d1ca      	bne.n	80042bc <HAL_SPI_Transmit+0x11c>
 8004326:	e050      	b.n	80043ca <HAL_SPI_Transmit+0x22a>
 8004328:	68fb      	ldr	r3, [r7, #12]
 800432a:	685b      	ldr	r3, [r3, #4]
 800432c:	2b00      	cmp	r3, #0
 800432e:	d002      	beq.n	8004336 <HAL_SPI_Transmit+0x196>
 8004330:	8afb      	ldrh	r3, [r7, #22]
 8004332:	2b01      	cmp	r3, #1
 8004334:	d144      	bne.n	80043c0 <HAL_SPI_Transmit+0x220>
 8004336:	68fb      	ldr	r3, [r7, #12]
 8004338:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800433a:	68fb      	ldr	r3, [r7, #12]
 800433c:	681b      	ldr	r3, [r3, #0]
 800433e:	330c      	adds	r3, #12
 8004340:	7812      	ldrb	r2, [r2, #0]
 8004342:	701a      	strb	r2, [r3, #0]
 8004344:	68fb      	ldr	r3, [r7, #12]
 8004346:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004348:	1c5a      	adds	r2, r3, #1
 800434a:	68fb      	ldr	r3, [r7, #12]
 800434c:	631a      	str	r2, [r3, #48]	; 0x30
 800434e:	68fb      	ldr	r3, [r7, #12]
 8004350:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004352:	b29b      	uxth	r3, r3
 8004354:	3b01      	subs	r3, #1
 8004356:	b29a      	uxth	r2, r3
 8004358:	68fb      	ldr	r3, [r7, #12]
 800435a:	86da      	strh	r2, [r3, #54]	; 0x36
 800435c:	e030      	b.n	80043c0 <HAL_SPI_Transmit+0x220>
 800435e:	68fb      	ldr	r3, [r7, #12]
 8004360:	681b      	ldr	r3, [r3, #0]
 8004362:	689b      	ldr	r3, [r3, #8]
 8004364:	f003 0302 	and.w	r3, r3, #2
 8004368:	2b02      	cmp	r3, #2
 800436a:	d113      	bne.n	8004394 <HAL_SPI_Transmit+0x1f4>
 800436c:	68fb      	ldr	r3, [r7, #12]
 800436e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004370:	68fb      	ldr	r3, [r7, #12]
 8004372:	681b      	ldr	r3, [r3, #0]
 8004374:	330c      	adds	r3, #12
 8004376:	7812      	ldrb	r2, [r2, #0]
 8004378:	701a      	strb	r2, [r3, #0]
 800437a:	68fb      	ldr	r3, [r7, #12]
 800437c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800437e:	1c5a      	adds	r2, r3, #1
 8004380:	68fb      	ldr	r3, [r7, #12]
 8004382:	631a      	str	r2, [r3, #48]	; 0x30
 8004384:	68fb      	ldr	r3, [r7, #12]
 8004386:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004388:	b29b      	uxth	r3, r3
 800438a:	3b01      	subs	r3, #1
 800438c:	b29a      	uxth	r2, r3
 800438e:	68fb      	ldr	r3, [r7, #12]
 8004390:	86da      	strh	r2, [r3, #54]	; 0x36
 8004392:	e015      	b.n	80043c0 <HAL_SPI_Transmit+0x220>
 8004394:	f7fd fcf0 	bl	8001d78 <HAL_GetTick>
 8004398:	4602      	mov	r2, r0
 800439a:	69bb      	ldr	r3, [r7, #24]
 800439c:	1ad3      	subs	r3, r2, r3
 800439e:	683a      	ldr	r2, [r7, #0]
 80043a0:	429a      	cmp	r2, r3
 80043a2:	d803      	bhi.n	80043ac <HAL_SPI_Transmit+0x20c>
 80043a4:	683b      	ldr	r3, [r7, #0]
 80043a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80043aa:	d102      	bne.n	80043b2 <HAL_SPI_Transmit+0x212>
 80043ac:	683b      	ldr	r3, [r7, #0]
 80043ae:	2b00      	cmp	r3, #0
 80043b0:	d106      	bne.n	80043c0 <HAL_SPI_Transmit+0x220>
 80043b2:	2303      	movs	r3, #3
 80043b4:	77fb      	strb	r3, [r7, #31]
 80043b6:	68fb      	ldr	r3, [r7, #12]
 80043b8:	2201      	movs	r2, #1
 80043ba:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80043be:	e029      	b.n	8004414 <HAL_SPI_Transmit+0x274>
 80043c0:	68fb      	ldr	r3, [r7, #12]
 80043c2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80043c4:	b29b      	uxth	r3, r3
 80043c6:	2b00      	cmp	r3, #0
 80043c8:	d1c9      	bne.n	800435e <HAL_SPI_Transmit+0x1be>
 80043ca:	69ba      	ldr	r2, [r7, #24]
 80043cc:	6839      	ldr	r1, [r7, #0]
 80043ce:	68f8      	ldr	r0, [r7, #12]
 80043d0:	f000 f8b2 	bl	8004538 <SPI_EndRxTxTransaction>
 80043d4:	4603      	mov	r3, r0
 80043d6:	2b00      	cmp	r3, #0
 80043d8:	d002      	beq.n	80043e0 <HAL_SPI_Transmit+0x240>
 80043da:	68fb      	ldr	r3, [r7, #12]
 80043dc:	2220      	movs	r2, #32
 80043de:	655a      	str	r2, [r3, #84]	; 0x54
 80043e0:	68fb      	ldr	r3, [r7, #12]
 80043e2:	689b      	ldr	r3, [r3, #8]
 80043e4:	2b00      	cmp	r3, #0
 80043e6:	d10a      	bne.n	80043fe <HAL_SPI_Transmit+0x25e>
 80043e8:	2300      	movs	r3, #0
 80043ea:	613b      	str	r3, [r7, #16]
 80043ec:	68fb      	ldr	r3, [r7, #12]
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	68db      	ldr	r3, [r3, #12]
 80043f2:	613b      	str	r3, [r7, #16]
 80043f4:	68fb      	ldr	r3, [r7, #12]
 80043f6:	681b      	ldr	r3, [r3, #0]
 80043f8:	689b      	ldr	r3, [r3, #8]
 80043fa:	613b      	str	r3, [r7, #16]
 80043fc:	693b      	ldr	r3, [r7, #16]
 80043fe:	68fb      	ldr	r3, [r7, #12]
 8004400:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004402:	2b00      	cmp	r3, #0
 8004404:	d002      	beq.n	800440c <HAL_SPI_Transmit+0x26c>
 8004406:	2301      	movs	r3, #1
 8004408:	77fb      	strb	r3, [r7, #31]
 800440a:	e003      	b.n	8004414 <HAL_SPI_Transmit+0x274>
 800440c:	68fb      	ldr	r3, [r7, #12]
 800440e:	2201      	movs	r2, #1
 8004410:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004414:	68fb      	ldr	r3, [r7, #12]
 8004416:	2200      	movs	r2, #0
 8004418:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800441c:	7ffb      	ldrb	r3, [r7, #31]
 800441e:	4618      	mov	r0, r3
 8004420:	3720      	adds	r7, #32
 8004422:	46bd      	mov	sp, r7
 8004424:	bd80      	pop	{r7, pc}
	...

08004428 <SPI_WaitFlagStateUntilTimeout>:
 8004428:	b580      	push	{r7, lr}
 800442a:	b088      	sub	sp, #32
 800442c:	af00      	add	r7, sp, #0
 800442e:	60f8      	str	r0, [r7, #12]
 8004430:	60b9      	str	r1, [r7, #8]
 8004432:	603b      	str	r3, [r7, #0]
 8004434:	4613      	mov	r3, r2
 8004436:	71fb      	strb	r3, [r7, #7]
 8004438:	f7fd fc9e 	bl	8001d78 <HAL_GetTick>
 800443c:	4602      	mov	r2, r0
 800443e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004440:	1a9b      	subs	r3, r3, r2
 8004442:	683a      	ldr	r2, [r7, #0]
 8004444:	4413      	add	r3, r2
 8004446:	61fb      	str	r3, [r7, #28]
 8004448:	f7fd fc96 	bl	8001d78 <HAL_GetTick>
 800444c:	61b8      	str	r0, [r7, #24]
 800444e:	4b39      	ldr	r3, [pc, #228]	; (8004534 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8004450:	681b      	ldr	r3, [r3, #0]
 8004452:	015b      	lsls	r3, r3, #5
 8004454:	0d1b      	lsrs	r3, r3, #20
 8004456:	69fa      	ldr	r2, [r7, #28]
 8004458:	fb02 f303 	mul.w	r3, r2, r3
 800445c:	617b      	str	r3, [r7, #20]
 800445e:	e054      	b.n	800450a <SPI_WaitFlagStateUntilTimeout+0xe2>
 8004460:	683b      	ldr	r3, [r7, #0]
 8004462:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004466:	d050      	beq.n	800450a <SPI_WaitFlagStateUntilTimeout+0xe2>
 8004468:	f7fd fc86 	bl	8001d78 <HAL_GetTick>
 800446c:	4602      	mov	r2, r0
 800446e:	69bb      	ldr	r3, [r7, #24]
 8004470:	1ad3      	subs	r3, r2, r3
 8004472:	69fa      	ldr	r2, [r7, #28]
 8004474:	429a      	cmp	r2, r3
 8004476:	d902      	bls.n	800447e <SPI_WaitFlagStateUntilTimeout+0x56>
 8004478:	69fb      	ldr	r3, [r7, #28]
 800447a:	2b00      	cmp	r3, #0
 800447c:	d13d      	bne.n	80044fa <SPI_WaitFlagStateUntilTimeout+0xd2>
 800447e:	68fb      	ldr	r3, [r7, #12]
 8004480:	681b      	ldr	r3, [r3, #0]
 8004482:	685a      	ldr	r2, [r3, #4]
 8004484:	68fb      	ldr	r3, [r7, #12]
 8004486:	681b      	ldr	r3, [r3, #0]
 8004488:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800448c:	605a      	str	r2, [r3, #4]
 800448e:	68fb      	ldr	r3, [r7, #12]
 8004490:	685b      	ldr	r3, [r3, #4]
 8004492:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004496:	d111      	bne.n	80044bc <SPI_WaitFlagStateUntilTimeout+0x94>
 8004498:	68fb      	ldr	r3, [r7, #12]
 800449a:	689b      	ldr	r3, [r3, #8]
 800449c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80044a0:	d004      	beq.n	80044ac <SPI_WaitFlagStateUntilTimeout+0x84>
 80044a2:	68fb      	ldr	r3, [r7, #12]
 80044a4:	689b      	ldr	r3, [r3, #8]
 80044a6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80044aa:	d107      	bne.n	80044bc <SPI_WaitFlagStateUntilTimeout+0x94>
 80044ac:	68fb      	ldr	r3, [r7, #12]
 80044ae:	681b      	ldr	r3, [r3, #0]
 80044b0:	681a      	ldr	r2, [r3, #0]
 80044b2:	68fb      	ldr	r3, [r7, #12]
 80044b4:	681b      	ldr	r3, [r3, #0]
 80044b6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80044ba:	601a      	str	r2, [r3, #0]
 80044bc:	68fb      	ldr	r3, [r7, #12]
 80044be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80044c0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80044c4:	d10f      	bne.n	80044e6 <SPI_WaitFlagStateUntilTimeout+0xbe>
 80044c6:	68fb      	ldr	r3, [r7, #12]
 80044c8:	681b      	ldr	r3, [r3, #0]
 80044ca:	681a      	ldr	r2, [r3, #0]
 80044cc:	68fb      	ldr	r3, [r7, #12]
 80044ce:	681b      	ldr	r3, [r3, #0]
 80044d0:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80044d4:	601a      	str	r2, [r3, #0]
 80044d6:	68fb      	ldr	r3, [r7, #12]
 80044d8:	681b      	ldr	r3, [r3, #0]
 80044da:	681a      	ldr	r2, [r3, #0]
 80044dc:	68fb      	ldr	r3, [r7, #12]
 80044de:	681b      	ldr	r3, [r3, #0]
 80044e0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80044e4:	601a      	str	r2, [r3, #0]
 80044e6:	68fb      	ldr	r3, [r7, #12]
 80044e8:	2201      	movs	r2, #1
 80044ea:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80044ee:	68fb      	ldr	r3, [r7, #12]
 80044f0:	2200      	movs	r2, #0
 80044f2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80044f6:	2303      	movs	r3, #3
 80044f8:	e017      	b.n	800452a <SPI_WaitFlagStateUntilTimeout+0x102>
 80044fa:	697b      	ldr	r3, [r7, #20]
 80044fc:	2b00      	cmp	r3, #0
 80044fe:	d101      	bne.n	8004504 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8004500:	2300      	movs	r3, #0
 8004502:	61fb      	str	r3, [r7, #28]
 8004504:	697b      	ldr	r3, [r7, #20]
 8004506:	3b01      	subs	r3, #1
 8004508:	617b      	str	r3, [r7, #20]
 800450a:	68fb      	ldr	r3, [r7, #12]
 800450c:	681b      	ldr	r3, [r3, #0]
 800450e:	689a      	ldr	r2, [r3, #8]
 8004510:	68bb      	ldr	r3, [r7, #8]
 8004512:	4013      	ands	r3, r2
 8004514:	68ba      	ldr	r2, [r7, #8]
 8004516:	429a      	cmp	r2, r3
 8004518:	bf0c      	ite	eq
 800451a:	2301      	moveq	r3, #1
 800451c:	2300      	movne	r3, #0
 800451e:	b2db      	uxtb	r3, r3
 8004520:	461a      	mov	r2, r3
 8004522:	79fb      	ldrb	r3, [r7, #7]
 8004524:	429a      	cmp	r2, r3
 8004526:	d19b      	bne.n	8004460 <SPI_WaitFlagStateUntilTimeout+0x38>
 8004528:	2300      	movs	r3, #0
 800452a:	4618      	mov	r0, r3
 800452c:	3720      	adds	r7, #32
 800452e:	46bd      	mov	sp, r7
 8004530:	bd80      	pop	{r7, pc}
 8004532:	bf00      	nop
 8004534:	20000030 	.word	0x20000030

08004538 <SPI_EndRxTxTransaction>:
 8004538:	b580      	push	{r7, lr}
 800453a:	b088      	sub	sp, #32
 800453c:	af02      	add	r7, sp, #8
 800453e:	60f8      	str	r0, [r7, #12]
 8004540:	60b9      	str	r1, [r7, #8]
 8004542:	607a      	str	r2, [r7, #4]
 8004544:	4b1b      	ldr	r3, [pc, #108]	; (80045b4 <SPI_EndRxTxTransaction+0x7c>)
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	4a1b      	ldr	r2, [pc, #108]	; (80045b8 <SPI_EndRxTxTransaction+0x80>)
 800454a:	fba2 2303 	umull	r2, r3, r2, r3
 800454e:	0d5b      	lsrs	r3, r3, #21
 8004550:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004554:	fb02 f303 	mul.w	r3, r2, r3
 8004558:	617b      	str	r3, [r7, #20]
 800455a:	68fb      	ldr	r3, [r7, #12]
 800455c:	685b      	ldr	r3, [r3, #4]
 800455e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004562:	d112      	bne.n	800458a <SPI_EndRxTxTransaction+0x52>
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	9300      	str	r3, [sp, #0]
 8004568:	68bb      	ldr	r3, [r7, #8]
 800456a:	2200      	movs	r2, #0
 800456c:	2180      	movs	r1, #128	; 0x80
 800456e:	68f8      	ldr	r0, [r7, #12]
 8004570:	f7ff ff5a 	bl	8004428 <SPI_WaitFlagStateUntilTimeout>
 8004574:	4603      	mov	r3, r0
 8004576:	2b00      	cmp	r3, #0
 8004578:	d016      	beq.n	80045a8 <SPI_EndRxTxTransaction+0x70>
 800457a:	68fb      	ldr	r3, [r7, #12]
 800457c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800457e:	f043 0220 	orr.w	r2, r3, #32
 8004582:	68fb      	ldr	r3, [r7, #12]
 8004584:	655a      	str	r2, [r3, #84]	; 0x54
 8004586:	2303      	movs	r3, #3
 8004588:	e00f      	b.n	80045aa <SPI_EndRxTxTransaction+0x72>
 800458a:	697b      	ldr	r3, [r7, #20]
 800458c:	2b00      	cmp	r3, #0
 800458e:	d00a      	beq.n	80045a6 <SPI_EndRxTxTransaction+0x6e>
 8004590:	697b      	ldr	r3, [r7, #20]
 8004592:	3b01      	subs	r3, #1
 8004594:	617b      	str	r3, [r7, #20]
 8004596:	68fb      	ldr	r3, [r7, #12]
 8004598:	681b      	ldr	r3, [r3, #0]
 800459a:	689b      	ldr	r3, [r3, #8]
 800459c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80045a0:	2b80      	cmp	r3, #128	; 0x80
 80045a2:	d0f2      	beq.n	800458a <SPI_EndRxTxTransaction+0x52>
 80045a4:	e000      	b.n	80045a8 <SPI_EndRxTxTransaction+0x70>
 80045a6:	bf00      	nop
 80045a8:	2300      	movs	r3, #0
 80045aa:	4618      	mov	r0, r3
 80045ac:	3718      	adds	r7, #24
 80045ae:	46bd      	mov	sp, r7
 80045b0:	bd80      	pop	{r7, pc}
 80045b2:	bf00      	nop
 80045b4:	20000030 	.word	0x20000030
 80045b8:	165e9f81 	.word	0x165e9f81

080045bc <HAL_TIM_Base_Init>:
 80045bc:	b580      	push	{r7, lr}
 80045be:	b082      	sub	sp, #8
 80045c0:	af00      	add	r7, sp, #0
 80045c2:	6078      	str	r0, [r7, #4]
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	2b00      	cmp	r3, #0
 80045c8:	d101      	bne.n	80045ce <HAL_TIM_Base_Init+0x12>
 80045ca:	2301      	movs	r3, #1
 80045cc:	e031      	b.n	8004632 <HAL_TIM_Base_Init+0x76>
 80045ce:	687b      	ldr	r3, [r7, #4]
 80045d0:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80045d4:	b2db      	uxtb	r3, r3
 80045d6:	2b00      	cmp	r3, #0
 80045d8:	d106      	bne.n	80045e8 <HAL_TIM_Base_Init+0x2c>
 80045da:	687b      	ldr	r3, [r7, #4]
 80045dc:	2200      	movs	r2, #0
 80045de:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80045e2:	6878      	ldr	r0, [r7, #4]
 80045e4:	f7fd f9fe 	bl	80019e4 <HAL_TIM_Base_MspInit>
 80045e8:	687b      	ldr	r3, [r7, #4]
 80045ea:	2202      	movs	r2, #2
 80045ec:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80045f0:	687b      	ldr	r3, [r7, #4]
 80045f2:	681a      	ldr	r2, [r3, #0]
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	3304      	adds	r3, #4
 80045f8:	4619      	mov	r1, r3
 80045fa:	4610      	mov	r0, r2
 80045fc:	f000 fc16 	bl	8004e2c <TIM_Base_SetConfig>
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	2201      	movs	r2, #1
 8004604:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004608:	687b      	ldr	r3, [r7, #4]
 800460a:	2201      	movs	r2, #1
 800460c:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8004610:	687b      	ldr	r3, [r7, #4]
 8004612:	2201      	movs	r2, #1
 8004614:	f883 203b 	strb.w	r2, [r3, #59]	; 0x3b
 8004618:	687b      	ldr	r3, [r7, #4]
 800461a:	2201      	movs	r2, #1
 800461c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004620:	687b      	ldr	r3, [r7, #4]
 8004622:	2201      	movs	r2, #1
 8004624:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004628:	687b      	ldr	r3, [r7, #4]
 800462a:	2201      	movs	r2, #1
 800462c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8004630:	2300      	movs	r3, #0
 8004632:	4618      	mov	r0, r3
 8004634:	3708      	adds	r7, #8
 8004636:	46bd      	mov	sp, r7
 8004638:	bd80      	pop	{r7, pc}
	...

0800463c <HAL_TIM_Base_Start>:
 800463c:	b480      	push	{r7}
 800463e:	b085      	sub	sp, #20
 8004640:	af00      	add	r7, sp, #0
 8004642:	6078      	str	r0, [r7, #4]
 8004644:	687b      	ldr	r3, [r7, #4]
 8004646:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800464a:	b2db      	uxtb	r3, r3
 800464c:	2b01      	cmp	r3, #1
 800464e:	d001      	beq.n	8004654 <HAL_TIM_Base_Start+0x18>
 8004650:	2301      	movs	r3, #1
 8004652:	e032      	b.n	80046ba <HAL_TIM_Base_Start+0x7e>
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	2202      	movs	r2, #2
 8004658:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	681b      	ldr	r3, [r3, #0]
 8004660:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004664:	d00e      	beq.n	8004684 <HAL_TIM_Base_Start+0x48>
 8004666:	687b      	ldr	r3, [r7, #4]
 8004668:	681b      	ldr	r3, [r3, #0]
 800466a:	4a16      	ldr	r2, [pc, #88]	; (80046c4 <HAL_TIM_Base_Start+0x88>)
 800466c:	4293      	cmp	r3, r2
 800466e:	d009      	beq.n	8004684 <HAL_TIM_Base_Start+0x48>
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	681b      	ldr	r3, [r3, #0]
 8004674:	4a14      	ldr	r2, [pc, #80]	; (80046c8 <HAL_TIM_Base_Start+0x8c>)
 8004676:	4293      	cmp	r3, r2
 8004678:	d004      	beq.n	8004684 <HAL_TIM_Base_Start+0x48>
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	681b      	ldr	r3, [r3, #0]
 800467e:	4a13      	ldr	r2, [pc, #76]	; (80046cc <HAL_TIM_Base_Start+0x90>)
 8004680:	4293      	cmp	r3, r2
 8004682:	d111      	bne.n	80046a8 <HAL_TIM_Base_Start+0x6c>
 8004684:	687b      	ldr	r3, [r7, #4]
 8004686:	681b      	ldr	r3, [r3, #0]
 8004688:	689b      	ldr	r3, [r3, #8]
 800468a:	f003 0307 	and.w	r3, r3, #7
 800468e:	60fb      	str	r3, [r7, #12]
 8004690:	68fb      	ldr	r3, [r7, #12]
 8004692:	2b06      	cmp	r3, #6
 8004694:	d010      	beq.n	80046b8 <HAL_TIM_Base_Start+0x7c>
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	681b      	ldr	r3, [r3, #0]
 800469a:	681a      	ldr	r2, [r3, #0]
 800469c:	687b      	ldr	r3, [r7, #4]
 800469e:	681b      	ldr	r3, [r3, #0]
 80046a0:	f042 0201 	orr.w	r2, r2, #1
 80046a4:	601a      	str	r2, [r3, #0]
 80046a6:	e007      	b.n	80046b8 <HAL_TIM_Base_Start+0x7c>
 80046a8:	687b      	ldr	r3, [r7, #4]
 80046aa:	681b      	ldr	r3, [r3, #0]
 80046ac:	681a      	ldr	r2, [r3, #0]
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	681b      	ldr	r3, [r3, #0]
 80046b2:	f042 0201 	orr.w	r2, r2, #1
 80046b6:	601a      	str	r2, [r3, #0]
 80046b8:	2300      	movs	r3, #0
 80046ba:	4618      	mov	r0, r3
 80046bc:	3714      	adds	r7, #20
 80046be:	46bd      	mov	sp, r7
 80046c0:	bc80      	pop	{r7}
 80046c2:	4770      	bx	lr
 80046c4:	40000400 	.word	0x40000400
 80046c8:	40000800 	.word	0x40000800
 80046cc:	40010800 	.word	0x40010800

080046d0 <HAL_TIM_PWM_Init>:
 80046d0:	b580      	push	{r7, lr}
 80046d2:	b082      	sub	sp, #8
 80046d4:	af00      	add	r7, sp, #0
 80046d6:	6078      	str	r0, [r7, #4]
 80046d8:	687b      	ldr	r3, [r7, #4]
 80046da:	2b00      	cmp	r3, #0
 80046dc:	d101      	bne.n	80046e2 <HAL_TIM_PWM_Init+0x12>
 80046de:	2301      	movs	r3, #1
 80046e0:	e031      	b.n	8004746 <HAL_TIM_PWM_Init+0x76>
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80046e8:	b2db      	uxtb	r3, r3
 80046ea:	2b00      	cmp	r3, #0
 80046ec:	d106      	bne.n	80046fc <HAL_TIM_PWM_Init+0x2c>
 80046ee:	687b      	ldr	r3, [r7, #4]
 80046f0:	2200      	movs	r2, #0
 80046f2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80046f6:	6878      	ldr	r0, [r7, #4]
 80046f8:	f000 f829 	bl	800474e <HAL_TIM_PWM_MspInit>
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	2202      	movs	r2, #2
 8004700:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8004704:	687b      	ldr	r3, [r7, #4]
 8004706:	681a      	ldr	r2, [r3, #0]
 8004708:	687b      	ldr	r3, [r7, #4]
 800470a:	3304      	adds	r3, #4
 800470c:	4619      	mov	r1, r3
 800470e:	4610      	mov	r0, r2
 8004710:	f000 fb8c 	bl	8004e2c <TIM_Base_SetConfig>
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	2201      	movs	r2, #1
 8004718:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	2201      	movs	r2, #1
 8004720:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8004724:	687b      	ldr	r3, [r7, #4]
 8004726:	2201      	movs	r2, #1
 8004728:	f883 203b 	strb.w	r2, [r3, #59]	; 0x3b
 800472c:	687b      	ldr	r3, [r7, #4]
 800472e:	2201      	movs	r2, #1
 8004730:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004734:	687b      	ldr	r3, [r7, #4]
 8004736:	2201      	movs	r2, #1
 8004738:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800473c:	687b      	ldr	r3, [r7, #4]
 800473e:	2201      	movs	r2, #1
 8004740:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8004744:	2300      	movs	r3, #0
 8004746:	4618      	mov	r0, r3
 8004748:	3708      	adds	r7, #8
 800474a:	46bd      	mov	sp, r7
 800474c:	bd80      	pop	{r7, pc}

0800474e <HAL_TIM_PWM_MspInit>:
 800474e:	b480      	push	{r7}
 8004750:	b083      	sub	sp, #12
 8004752:	af00      	add	r7, sp, #0
 8004754:	6078      	str	r0, [r7, #4]
 8004756:	bf00      	nop
 8004758:	370c      	adds	r7, #12
 800475a:	46bd      	mov	sp, r7
 800475c:	bc80      	pop	{r7}
 800475e:	4770      	bx	lr

08004760 <HAL_TIM_PWM_Start>:
 8004760:	b580      	push	{r7, lr}
 8004762:	b084      	sub	sp, #16
 8004764:	af00      	add	r7, sp, #0
 8004766:	6078      	str	r0, [r7, #4]
 8004768:	6039      	str	r1, [r7, #0]
 800476a:	683b      	ldr	r3, [r7, #0]
 800476c:	2b00      	cmp	r3, #0
 800476e:	d109      	bne.n	8004784 <HAL_TIM_PWM_Start+0x24>
 8004770:	687b      	ldr	r3, [r7, #4]
 8004772:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8004776:	b2db      	uxtb	r3, r3
 8004778:	2b01      	cmp	r3, #1
 800477a:	bf14      	ite	ne
 800477c:	2301      	movne	r3, #1
 800477e:	2300      	moveq	r3, #0
 8004780:	b2db      	uxtb	r3, r3
 8004782:	e022      	b.n	80047ca <HAL_TIM_PWM_Start+0x6a>
 8004784:	683b      	ldr	r3, [r7, #0]
 8004786:	2b04      	cmp	r3, #4
 8004788:	d109      	bne.n	800479e <HAL_TIM_PWM_Start+0x3e>
 800478a:	687b      	ldr	r3, [r7, #4]
 800478c:	f893 303b 	ldrb.w	r3, [r3, #59]	; 0x3b
 8004790:	b2db      	uxtb	r3, r3
 8004792:	2b01      	cmp	r3, #1
 8004794:	bf14      	ite	ne
 8004796:	2301      	movne	r3, #1
 8004798:	2300      	moveq	r3, #0
 800479a:	b2db      	uxtb	r3, r3
 800479c:	e015      	b.n	80047ca <HAL_TIM_PWM_Start+0x6a>
 800479e:	683b      	ldr	r3, [r7, #0]
 80047a0:	2b08      	cmp	r3, #8
 80047a2:	d109      	bne.n	80047b8 <HAL_TIM_PWM_Start+0x58>
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80047aa:	b2db      	uxtb	r3, r3
 80047ac:	2b01      	cmp	r3, #1
 80047ae:	bf14      	ite	ne
 80047b0:	2301      	movne	r3, #1
 80047b2:	2300      	moveq	r3, #0
 80047b4:	b2db      	uxtb	r3, r3
 80047b6:	e008      	b.n	80047ca <HAL_TIM_PWM_Start+0x6a>
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80047be:	b2db      	uxtb	r3, r3
 80047c0:	2b01      	cmp	r3, #1
 80047c2:	bf14      	ite	ne
 80047c4:	2301      	movne	r3, #1
 80047c6:	2300      	moveq	r3, #0
 80047c8:	b2db      	uxtb	r3, r3
 80047ca:	2b00      	cmp	r3, #0
 80047cc:	d001      	beq.n	80047d2 <HAL_TIM_PWM_Start+0x72>
 80047ce:	2301      	movs	r3, #1
 80047d0:	e051      	b.n	8004876 <HAL_TIM_PWM_Start+0x116>
 80047d2:	683b      	ldr	r3, [r7, #0]
 80047d4:	2b00      	cmp	r3, #0
 80047d6:	d104      	bne.n	80047e2 <HAL_TIM_PWM_Start+0x82>
 80047d8:	687b      	ldr	r3, [r7, #4]
 80047da:	2202      	movs	r2, #2
 80047dc:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80047e0:	e013      	b.n	800480a <HAL_TIM_PWM_Start+0xaa>
 80047e2:	683b      	ldr	r3, [r7, #0]
 80047e4:	2b04      	cmp	r3, #4
 80047e6:	d104      	bne.n	80047f2 <HAL_TIM_PWM_Start+0x92>
 80047e8:	687b      	ldr	r3, [r7, #4]
 80047ea:	2202      	movs	r2, #2
 80047ec:	f883 203b 	strb.w	r2, [r3, #59]	; 0x3b
 80047f0:	e00b      	b.n	800480a <HAL_TIM_PWM_Start+0xaa>
 80047f2:	683b      	ldr	r3, [r7, #0]
 80047f4:	2b08      	cmp	r3, #8
 80047f6:	d104      	bne.n	8004802 <HAL_TIM_PWM_Start+0xa2>
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	2202      	movs	r2, #2
 80047fc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004800:	e003      	b.n	800480a <HAL_TIM_PWM_Start+0xaa>
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	2202      	movs	r2, #2
 8004806:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800480a:	687b      	ldr	r3, [r7, #4]
 800480c:	681b      	ldr	r3, [r3, #0]
 800480e:	2201      	movs	r2, #1
 8004810:	6839      	ldr	r1, [r7, #0]
 8004812:	4618      	mov	r0, r3
 8004814:	f000 fd05 	bl	8005222 <TIM_CCxChannelCmd>
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004820:	d00e      	beq.n	8004840 <HAL_TIM_PWM_Start+0xe0>
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	681b      	ldr	r3, [r3, #0]
 8004826:	4a16      	ldr	r2, [pc, #88]	; (8004880 <HAL_TIM_PWM_Start+0x120>)
 8004828:	4293      	cmp	r3, r2
 800482a:	d009      	beq.n	8004840 <HAL_TIM_PWM_Start+0xe0>
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	681b      	ldr	r3, [r3, #0]
 8004830:	4a14      	ldr	r2, [pc, #80]	; (8004884 <HAL_TIM_PWM_Start+0x124>)
 8004832:	4293      	cmp	r3, r2
 8004834:	d004      	beq.n	8004840 <HAL_TIM_PWM_Start+0xe0>
 8004836:	687b      	ldr	r3, [r7, #4]
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	4a13      	ldr	r2, [pc, #76]	; (8004888 <HAL_TIM_PWM_Start+0x128>)
 800483c:	4293      	cmp	r3, r2
 800483e:	d111      	bne.n	8004864 <HAL_TIM_PWM_Start+0x104>
 8004840:	687b      	ldr	r3, [r7, #4]
 8004842:	681b      	ldr	r3, [r3, #0]
 8004844:	689b      	ldr	r3, [r3, #8]
 8004846:	f003 0307 	and.w	r3, r3, #7
 800484a:	60fb      	str	r3, [r7, #12]
 800484c:	68fb      	ldr	r3, [r7, #12]
 800484e:	2b06      	cmp	r3, #6
 8004850:	d010      	beq.n	8004874 <HAL_TIM_PWM_Start+0x114>
 8004852:	687b      	ldr	r3, [r7, #4]
 8004854:	681b      	ldr	r3, [r3, #0]
 8004856:	681a      	ldr	r2, [r3, #0]
 8004858:	687b      	ldr	r3, [r7, #4]
 800485a:	681b      	ldr	r3, [r3, #0]
 800485c:	f042 0201 	orr.w	r2, r2, #1
 8004860:	601a      	str	r2, [r3, #0]
 8004862:	e007      	b.n	8004874 <HAL_TIM_PWM_Start+0x114>
 8004864:	687b      	ldr	r3, [r7, #4]
 8004866:	681b      	ldr	r3, [r3, #0]
 8004868:	681a      	ldr	r2, [r3, #0]
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	f042 0201 	orr.w	r2, r2, #1
 8004872:	601a      	str	r2, [r3, #0]
 8004874:	2300      	movs	r3, #0
 8004876:	4618      	mov	r0, r3
 8004878:	3710      	adds	r7, #16
 800487a:	46bd      	mov	sp, r7
 800487c:	bd80      	pop	{r7, pc}
 800487e:	bf00      	nop
 8004880:	40000400 	.word	0x40000400
 8004884:	40000800 	.word	0x40000800
 8004888:	40010800 	.word	0x40010800

0800488c <HAL_TIM_PWM_Stop>:
 800488c:	b580      	push	{r7, lr}
 800488e:	b082      	sub	sp, #8
 8004890:	af00      	add	r7, sp, #0
 8004892:	6078      	str	r0, [r7, #4]
 8004894:	6039      	str	r1, [r7, #0]
 8004896:	687b      	ldr	r3, [r7, #4]
 8004898:	681b      	ldr	r3, [r3, #0]
 800489a:	2200      	movs	r2, #0
 800489c:	6839      	ldr	r1, [r7, #0]
 800489e:	4618      	mov	r0, r3
 80048a0:	f000 fcbf 	bl	8005222 <TIM_CCxChannelCmd>
 80048a4:	687b      	ldr	r3, [r7, #4]
 80048a6:	681b      	ldr	r3, [r3, #0]
 80048a8:	6a1a      	ldr	r2, [r3, #32]
 80048aa:	f241 1311 	movw	r3, #4369	; 0x1111
 80048ae:	4013      	ands	r3, r2
 80048b0:	2b00      	cmp	r3, #0
 80048b2:	d107      	bne.n	80048c4 <HAL_TIM_PWM_Stop+0x38>
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	681b      	ldr	r3, [r3, #0]
 80048b8:	681a      	ldr	r2, [r3, #0]
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	681b      	ldr	r3, [r3, #0]
 80048be:	f022 0201 	bic.w	r2, r2, #1
 80048c2:	601a      	str	r2, [r3, #0]
 80048c4:	683b      	ldr	r3, [r7, #0]
 80048c6:	2b00      	cmp	r3, #0
 80048c8:	d104      	bne.n	80048d4 <HAL_TIM_PWM_Stop+0x48>
 80048ca:	687b      	ldr	r3, [r7, #4]
 80048cc:	2201      	movs	r2, #1
 80048ce:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80048d2:	e013      	b.n	80048fc <HAL_TIM_PWM_Stop+0x70>
 80048d4:	683b      	ldr	r3, [r7, #0]
 80048d6:	2b04      	cmp	r3, #4
 80048d8:	d104      	bne.n	80048e4 <HAL_TIM_PWM_Stop+0x58>
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	2201      	movs	r2, #1
 80048de:	f883 203b 	strb.w	r2, [r3, #59]	; 0x3b
 80048e2:	e00b      	b.n	80048fc <HAL_TIM_PWM_Stop+0x70>
 80048e4:	683b      	ldr	r3, [r7, #0]
 80048e6:	2b08      	cmp	r3, #8
 80048e8:	d104      	bne.n	80048f4 <HAL_TIM_PWM_Stop+0x68>
 80048ea:	687b      	ldr	r3, [r7, #4]
 80048ec:	2201      	movs	r2, #1
 80048ee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80048f2:	e003      	b.n	80048fc <HAL_TIM_PWM_Stop+0x70>
 80048f4:	687b      	ldr	r3, [r7, #4]
 80048f6:	2201      	movs	r2, #1
 80048f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80048fc:	2300      	movs	r3, #0
 80048fe:	4618      	mov	r0, r3
 8004900:	3708      	adds	r7, #8
 8004902:	46bd      	mov	sp, r7
 8004904:	bd80      	pop	{r7, pc}

08004906 <HAL_TIM_IRQHandler>:
 8004906:	b580      	push	{r7, lr}
 8004908:	b082      	sub	sp, #8
 800490a:	af00      	add	r7, sp, #0
 800490c:	6078      	str	r0, [r7, #4]
 800490e:	687b      	ldr	r3, [r7, #4]
 8004910:	681b      	ldr	r3, [r3, #0]
 8004912:	691b      	ldr	r3, [r3, #16]
 8004914:	f003 0302 	and.w	r3, r3, #2
 8004918:	2b02      	cmp	r3, #2
 800491a:	d122      	bne.n	8004962 <HAL_TIM_IRQHandler+0x5c>
 800491c:	687b      	ldr	r3, [r7, #4]
 800491e:	681b      	ldr	r3, [r3, #0]
 8004920:	68db      	ldr	r3, [r3, #12]
 8004922:	f003 0302 	and.w	r3, r3, #2
 8004926:	2b02      	cmp	r3, #2
 8004928:	d11b      	bne.n	8004962 <HAL_TIM_IRQHandler+0x5c>
 800492a:	687b      	ldr	r3, [r7, #4]
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	f06f 0202 	mvn.w	r2, #2
 8004932:	611a      	str	r2, [r3, #16]
 8004934:	687b      	ldr	r3, [r7, #4]
 8004936:	2201      	movs	r2, #1
 8004938:	761a      	strb	r2, [r3, #24]
 800493a:	687b      	ldr	r3, [r7, #4]
 800493c:	681b      	ldr	r3, [r3, #0]
 800493e:	699b      	ldr	r3, [r3, #24]
 8004940:	f003 0303 	and.w	r3, r3, #3
 8004944:	2b00      	cmp	r3, #0
 8004946:	d003      	beq.n	8004950 <HAL_TIM_IRQHandler+0x4a>
 8004948:	6878      	ldr	r0, [r7, #4]
 800494a:	f000 fa54 	bl	8004df6 <HAL_TIM_IC_CaptureCallback>
 800494e:	e005      	b.n	800495c <HAL_TIM_IRQHandler+0x56>
 8004950:	6878      	ldr	r0, [r7, #4]
 8004952:	f000 fa47 	bl	8004de4 <HAL_TIM_OC_DelayElapsedCallback>
 8004956:	6878      	ldr	r0, [r7, #4]
 8004958:	f000 fa56 	bl	8004e08 <HAL_TIM_PWM_PulseFinishedCallback>
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	2200      	movs	r2, #0
 8004960:	761a      	strb	r2, [r3, #24]
 8004962:	687b      	ldr	r3, [r7, #4]
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	691b      	ldr	r3, [r3, #16]
 8004968:	f003 0304 	and.w	r3, r3, #4
 800496c:	2b04      	cmp	r3, #4
 800496e:	d122      	bne.n	80049b6 <HAL_TIM_IRQHandler+0xb0>
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	681b      	ldr	r3, [r3, #0]
 8004974:	68db      	ldr	r3, [r3, #12]
 8004976:	f003 0304 	and.w	r3, r3, #4
 800497a:	2b04      	cmp	r3, #4
 800497c:	d11b      	bne.n	80049b6 <HAL_TIM_IRQHandler+0xb0>
 800497e:	687b      	ldr	r3, [r7, #4]
 8004980:	681b      	ldr	r3, [r3, #0]
 8004982:	f06f 0204 	mvn.w	r2, #4
 8004986:	611a      	str	r2, [r3, #16]
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	2202      	movs	r2, #2
 800498c:	761a      	strb	r2, [r3, #24]
 800498e:	687b      	ldr	r3, [r7, #4]
 8004990:	681b      	ldr	r3, [r3, #0]
 8004992:	699b      	ldr	r3, [r3, #24]
 8004994:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004998:	2b00      	cmp	r3, #0
 800499a:	d003      	beq.n	80049a4 <HAL_TIM_IRQHandler+0x9e>
 800499c:	6878      	ldr	r0, [r7, #4]
 800499e:	f000 fa2a 	bl	8004df6 <HAL_TIM_IC_CaptureCallback>
 80049a2:	e005      	b.n	80049b0 <HAL_TIM_IRQHandler+0xaa>
 80049a4:	6878      	ldr	r0, [r7, #4]
 80049a6:	f000 fa1d 	bl	8004de4 <HAL_TIM_OC_DelayElapsedCallback>
 80049aa:	6878      	ldr	r0, [r7, #4]
 80049ac:	f000 fa2c 	bl	8004e08 <HAL_TIM_PWM_PulseFinishedCallback>
 80049b0:	687b      	ldr	r3, [r7, #4]
 80049b2:	2200      	movs	r2, #0
 80049b4:	761a      	strb	r2, [r3, #24]
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	691b      	ldr	r3, [r3, #16]
 80049bc:	f003 0308 	and.w	r3, r3, #8
 80049c0:	2b08      	cmp	r3, #8
 80049c2:	d122      	bne.n	8004a0a <HAL_TIM_IRQHandler+0x104>
 80049c4:	687b      	ldr	r3, [r7, #4]
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	68db      	ldr	r3, [r3, #12]
 80049ca:	f003 0308 	and.w	r3, r3, #8
 80049ce:	2b08      	cmp	r3, #8
 80049d0:	d11b      	bne.n	8004a0a <HAL_TIM_IRQHandler+0x104>
 80049d2:	687b      	ldr	r3, [r7, #4]
 80049d4:	681b      	ldr	r3, [r3, #0]
 80049d6:	f06f 0208 	mvn.w	r2, #8
 80049da:	611a      	str	r2, [r3, #16]
 80049dc:	687b      	ldr	r3, [r7, #4]
 80049de:	2204      	movs	r2, #4
 80049e0:	761a      	strb	r2, [r3, #24]
 80049e2:	687b      	ldr	r3, [r7, #4]
 80049e4:	681b      	ldr	r3, [r3, #0]
 80049e6:	69db      	ldr	r3, [r3, #28]
 80049e8:	f003 0303 	and.w	r3, r3, #3
 80049ec:	2b00      	cmp	r3, #0
 80049ee:	d003      	beq.n	80049f8 <HAL_TIM_IRQHandler+0xf2>
 80049f0:	6878      	ldr	r0, [r7, #4]
 80049f2:	f000 fa00 	bl	8004df6 <HAL_TIM_IC_CaptureCallback>
 80049f6:	e005      	b.n	8004a04 <HAL_TIM_IRQHandler+0xfe>
 80049f8:	6878      	ldr	r0, [r7, #4]
 80049fa:	f000 f9f3 	bl	8004de4 <HAL_TIM_OC_DelayElapsedCallback>
 80049fe:	6878      	ldr	r0, [r7, #4]
 8004a00:	f000 fa02 	bl	8004e08 <HAL_TIM_PWM_PulseFinishedCallback>
 8004a04:	687b      	ldr	r3, [r7, #4]
 8004a06:	2200      	movs	r2, #0
 8004a08:	761a      	strb	r2, [r3, #24]
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	691b      	ldr	r3, [r3, #16]
 8004a10:	f003 0310 	and.w	r3, r3, #16
 8004a14:	2b10      	cmp	r3, #16
 8004a16:	d122      	bne.n	8004a5e <HAL_TIM_IRQHandler+0x158>
 8004a18:	687b      	ldr	r3, [r7, #4]
 8004a1a:	681b      	ldr	r3, [r3, #0]
 8004a1c:	68db      	ldr	r3, [r3, #12]
 8004a1e:	f003 0310 	and.w	r3, r3, #16
 8004a22:	2b10      	cmp	r3, #16
 8004a24:	d11b      	bne.n	8004a5e <HAL_TIM_IRQHandler+0x158>
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	681b      	ldr	r3, [r3, #0]
 8004a2a:	f06f 0210 	mvn.w	r2, #16
 8004a2e:	611a      	str	r2, [r3, #16]
 8004a30:	687b      	ldr	r3, [r7, #4]
 8004a32:	2208      	movs	r2, #8
 8004a34:	761a      	strb	r2, [r3, #24]
 8004a36:	687b      	ldr	r3, [r7, #4]
 8004a38:	681b      	ldr	r3, [r3, #0]
 8004a3a:	69db      	ldr	r3, [r3, #28]
 8004a3c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004a40:	2b00      	cmp	r3, #0
 8004a42:	d003      	beq.n	8004a4c <HAL_TIM_IRQHandler+0x146>
 8004a44:	6878      	ldr	r0, [r7, #4]
 8004a46:	f000 f9d6 	bl	8004df6 <HAL_TIM_IC_CaptureCallback>
 8004a4a:	e005      	b.n	8004a58 <HAL_TIM_IRQHandler+0x152>
 8004a4c:	6878      	ldr	r0, [r7, #4]
 8004a4e:	f000 f9c9 	bl	8004de4 <HAL_TIM_OC_DelayElapsedCallback>
 8004a52:	6878      	ldr	r0, [r7, #4]
 8004a54:	f000 f9d8 	bl	8004e08 <HAL_TIM_PWM_PulseFinishedCallback>
 8004a58:	687b      	ldr	r3, [r7, #4]
 8004a5a:	2200      	movs	r2, #0
 8004a5c:	761a      	strb	r2, [r3, #24]
 8004a5e:	687b      	ldr	r3, [r7, #4]
 8004a60:	681b      	ldr	r3, [r3, #0]
 8004a62:	691b      	ldr	r3, [r3, #16]
 8004a64:	f003 0301 	and.w	r3, r3, #1
 8004a68:	2b01      	cmp	r3, #1
 8004a6a:	d10e      	bne.n	8004a8a <HAL_TIM_IRQHandler+0x184>
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	681b      	ldr	r3, [r3, #0]
 8004a70:	68db      	ldr	r3, [r3, #12]
 8004a72:	f003 0301 	and.w	r3, r3, #1
 8004a76:	2b01      	cmp	r3, #1
 8004a78:	d107      	bne.n	8004a8a <HAL_TIM_IRQHandler+0x184>
 8004a7a:	687b      	ldr	r3, [r7, #4]
 8004a7c:	681b      	ldr	r3, [r3, #0]
 8004a7e:	f06f 0201 	mvn.w	r2, #1
 8004a82:	611a      	str	r2, [r3, #16]
 8004a84:	6878      	ldr	r0, [r7, #4]
 8004a86:	f000 f9a4 	bl	8004dd2 <HAL_TIM_PeriodElapsedCallback>
 8004a8a:	687b      	ldr	r3, [r7, #4]
 8004a8c:	681b      	ldr	r3, [r3, #0]
 8004a8e:	691b      	ldr	r3, [r3, #16]
 8004a90:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004a94:	2b40      	cmp	r3, #64	; 0x40
 8004a96:	d10e      	bne.n	8004ab6 <HAL_TIM_IRQHandler+0x1b0>
 8004a98:	687b      	ldr	r3, [r7, #4]
 8004a9a:	681b      	ldr	r3, [r3, #0]
 8004a9c:	68db      	ldr	r3, [r3, #12]
 8004a9e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004aa2:	2b40      	cmp	r3, #64	; 0x40
 8004aa4:	d107      	bne.n	8004ab6 <HAL_TIM_IRQHandler+0x1b0>
 8004aa6:	687b      	ldr	r3, [r7, #4]
 8004aa8:	681b      	ldr	r3, [r3, #0]
 8004aaa:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8004aae:	611a      	str	r2, [r3, #16]
 8004ab0:	6878      	ldr	r0, [r7, #4]
 8004ab2:	f000 f9b2 	bl	8004e1a <HAL_TIM_TriggerCallback>
 8004ab6:	bf00      	nop
 8004ab8:	3708      	adds	r7, #8
 8004aba:	46bd      	mov	sp, r7
 8004abc:	bd80      	pop	{r7, pc}
	...

08004ac0 <HAL_TIM_PWM_ConfigChannel>:
 8004ac0:	b580      	push	{r7, lr}
 8004ac2:	b086      	sub	sp, #24
 8004ac4:	af00      	add	r7, sp, #0
 8004ac6:	60f8      	str	r0, [r7, #12]
 8004ac8:	60b9      	str	r1, [r7, #8]
 8004aca:	607a      	str	r2, [r7, #4]
 8004acc:	2300      	movs	r3, #0
 8004ace:	75fb      	strb	r3, [r7, #23]
 8004ad0:	68fb      	ldr	r3, [r7, #12]
 8004ad2:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8004ad6:	2b01      	cmp	r3, #1
 8004ad8:	d101      	bne.n	8004ade <HAL_TIM_PWM_ConfigChannel+0x1e>
 8004ada:	2302      	movs	r3, #2
 8004adc:	e0ae      	b.n	8004c3c <HAL_TIM_PWM_ConfigChannel+0x17c>
 8004ade:	68fb      	ldr	r3, [r7, #12]
 8004ae0:	2201      	movs	r2, #1
 8004ae2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8004ae6:	687b      	ldr	r3, [r7, #4]
 8004ae8:	2b0c      	cmp	r3, #12
 8004aea:	f200 809f 	bhi.w	8004c2c <HAL_TIM_PWM_ConfigChannel+0x16c>
 8004aee:	a201      	add	r2, pc, #4	; (adr r2, 8004af4 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8004af0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004af4:	08004b29 	.word	0x08004b29
 8004af8:	08004c2d 	.word	0x08004c2d
 8004afc:	08004c2d 	.word	0x08004c2d
 8004b00:	08004c2d 	.word	0x08004c2d
 8004b04:	08004b69 	.word	0x08004b69
 8004b08:	08004c2d 	.word	0x08004c2d
 8004b0c:	08004c2d 	.word	0x08004c2d
 8004b10:	08004c2d 	.word	0x08004c2d
 8004b14:	08004bab 	.word	0x08004bab
 8004b18:	08004c2d 	.word	0x08004c2d
 8004b1c:	08004c2d 	.word	0x08004c2d
 8004b20:	08004c2d 	.word	0x08004c2d
 8004b24:	08004beb 	.word	0x08004beb
 8004b28:	68fb      	ldr	r3, [r7, #12]
 8004b2a:	681b      	ldr	r3, [r3, #0]
 8004b2c:	68b9      	ldr	r1, [r7, #8]
 8004b2e:	4618      	mov	r0, r3
 8004b30:	f000 f9ec 	bl	8004f0c <TIM_OC1_SetConfig>
 8004b34:	68fb      	ldr	r3, [r7, #12]
 8004b36:	681b      	ldr	r3, [r3, #0]
 8004b38:	699a      	ldr	r2, [r3, #24]
 8004b3a:	68fb      	ldr	r3, [r7, #12]
 8004b3c:	681b      	ldr	r3, [r3, #0]
 8004b3e:	f042 0208 	orr.w	r2, r2, #8
 8004b42:	619a      	str	r2, [r3, #24]
 8004b44:	68fb      	ldr	r3, [r7, #12]
 8004b46:	681b      	ldr	r3, [r3, #0]
 8004b48:	699a      	ldr	r2, [r3, #24]
 8004b4a:	68fb      	ldr	r3, [r7, #12]
 8004b4c:	681b      	ldr	r3, [r3, #0]
 8004b4e:	f022 0204 	bic.w	r2, r2, #4
 8004b52:	619a      	str	r2, [r3, #24]
 8004b54:	68fb      	ldr	r3, [r7, #12]
 8004b56:	681b      	ldr	r3, [r3, #0]
 8004b58:	6999      	ldr	r1, [r3, #24]
 8004b5a:	68bb      	ldr	r3, [r7, #8]
 8004b5c:	68da      	ldr	r2, [r3, #12]
 8004b5e:	68fb      	ldr	r3, [r7, #12]
 8004b60:	681b      	ldr	r3, [r3, #0]
 8004b62:	430a      	orrs	r2, r1
 8004b64:	619a      	str	r2, [r3, #24]
 8004b66:	e064      	b.n	8004c32 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004b68:	68fb      	ldr	r3, [r7, #12]
 8004b6a:	681b      	ldr	r3, [r3, #0]
 8004b6c:	68b9      	ldr	r1, [r7, #8]
 8004b6e:	4618      	mov	r0, r3
 8004b70:	f000 fa08 	bl	8004f84 <TIM_OC2_SetConfig>
 8004b74:	68fb      	ldr	r3, [r7, #12]
 8004b76:	681b      	ldr	r3, [r3, #0]
 8004b78:	699a      	ldr	r2, [r3, #24]
 8004b7a:	68fb      	ldr	r3, [r7, #12]
 8004b7c:	681b      	ldr	r3, [r3, #0]
 8004b7e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004b82:	619a      	str	r2, [r3, #24]
 8004b84:	68fb      	ldr	r3, [r7, #12]
 8004b86:	681b      	ldr	r3, [r3, #0]
 8004b88:	699a      	ldr	r2, [r3, #24]
 8004b8a:	68fb      	ldr	r3, [r7, #12]
 8004b8c:	681b      	ldr	r3, [r3, #0]
 8004b8e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004b92:	619a      	str	r2, [r3, #24]
 8004b94:	68fb      	ldr	r3, [r7, #12]
 8004b96:	681b      	ldr	r3, [r3, #0]
 8004b98:	6999      	ldr	r1, [r3, #24]
 8004b9a:	68bb      	ldr	r3, [r7, #8]
 8004b9c:	68db      	ldr	r3, [r3, #12]
 8004b9e:	021a      	lsls	r2, r3, #8
 8004ba0:	68fb      	ldr	r3, [r7, #12]
 8004ba2:	681b      	ldr	r3, [r3, #0]
 8004ba4:	430a      	orrs	r2, r1
 8004ba6:	619a      	str	r2, [r3, #24]
 8004ba8:	e043      	b.n	8004c32 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004baa:	68fb      	ldr	r3, [r7, #12]
 8004bac:	681b      	ldr	r3, [r3, #0]
 8004bae:	68b9      	ldr	r1, [r7, #8]
 8004bb0:	4618      	mov	r0, r3
 8004bb2:	f000 fa25 	bl	8005000 <TIM_OC3_SetConfig>
 8004bb6:	68fb      	ldr	r3, [r7, #12]
 8004bb8:	681b      	ldr	r3, [r3, #0]
 8004bba:	69da      	ldr	r2, [r3, #28]
 8004bbc:	68fb      	ldr	r3, [r7, #12]
 8004bbe:	681b      	ldr	r3, [r3, #0]
 8004bc0:	f042 0208 	orr.w	r2, r2, #8
 8004bc4:	61da      	str	r2, [r3, #28]
 8004bc6:	68fb      	ldr	r3, [r7, #12]
 8004bc8:	681b      	ldr	r3, [r3, #0]
 8004bca:	69da      	ldr	r2, [r3, #28]
 8004bcc:	68fb      	ldr	r3, [r7, #12]
 8004bce:	681b      	ldr	r3, [r3, #0]
 8004bd0:	f022 0204 	bic.w	r2, r2, #4
 8004bd4:	61da      	str	r2, [r3, #28]
 8004bd6:	68fb      	ldr	r3, [r7, #12]
 8004bd8:	681b      	ldr	r3, [r3, #0]
 8004bda:	69d9      	ldr	r1, [r3, #28]
 8004bdc:	68bb      	ldr	r3, [r7, #8]
 8004bde:	68da      	ldr	r2, [r3, #12]
 8004be0:	68fb      	ldr	r3, [r7, #12]
 8004be2:	681b      	ldr	r3, [r3, #0]
 8004be4:	430a      	orrs	r2, r1
 8004be6:	61da      	str	r2, [r3, #28]
 8004be8:	e023      	b.n	8004c32 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004bea:	68fb      	ldr	r3, [r7, #12]
 8004bec:	681b      	ldr	r3, [r3, #0]
 8004bee:	68b9      	ldr	r1, [r7, #8]
 8004bf0:	4618      	mov	r0, r3
 8004bf2:	f000 fa42 	bl	800507a <TIM_OC4_SetConfig>
 8004bf6:	68fb      	ldr	r3, [r7, #12]
 8004bf8:	681b      	ldr	r3, [r3, #0]
 8004bfa:	69da      	ldr	r2, [r3, #28]
 8004bfc:	68fb      	ldr	r3, [r7, #12]
 8004bfe:	681b      	ldr	r3, [r3, #0]
 8004c00:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004c04:	61da      	str	r2, [r3, #28]
 8004c06:	68fb      	ldr	r3, [r7, #12]
 8004c08:	681b      	ldr	r3, [r3, #0]
 8004c0a:	69da      	ldr	r2, [r3, #28]
 8004c0c:	68fb      	ldr	r3, [r7, #12]
 8004c0e:	681b      	ldr	r3, [r3, #0]
 8004c10:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004c14:	61da      	str	r2, [r3, #28]
 8004c16:	68fb      	ldr	r3, [r7, #12]
 8004c18:	681b      	ldr	r3, [r3, #0]
 8004c1a:	69d9      	ldr	r1, [r3, #28]
 8004c1c:	68bb      	ldr	r3, [r7, #8]
 8004c1e:	68db      	ldr	r3, [r3, #12]
 8004c20:	021a      	lsls	r2, r3, #8
 8004c22:	68fb      	ldr	r3, [r7, #12]
 8004c24:	681b      	ldr	r3, [r3, #0]
 8004c26:	430a      	orrs	r2, r1
 8004c28:	61da      	str	r2, [r3, #28]
 8004c2a:	e002      	b.n	8004c32 <HAL_TIM_PWM_ConfigChannel+0x172>
 8004c2c:	2301      	movs	r3, #1
 8004c2e:	75fb      	strb	r3, [r7, #23]
 8004c30:	bf00      	nop
 8004c32:	68fb      	ldr	r3, [r7, #12]
 8004c34:	2200      	movs	r2, #0
 8004c36:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8004c3a:	7dfb      	ldrb	r3, [r7, #23]
 8004c3c:	4618      	mov	r0, r3
 8004c3e:	3718      	adds	r7, #24
 8004c40:	46bd      	mov	sp, r7
 8004c42:	bd80      	pop	{r7, pc}

08004c44 <HAL_TIM_ConfigClockSource>:
 8004c44:	b580      	push	{r7, lr}
 8004c46:	b084      	sub	sp, #16
 8004c48:	af00      	add	r7, sp, #0
 8004c4a:	6078      	str	r0, [r7, #4]
 8004c4c:	6039      	str	r1, [r7, #0]
 8004c4e:	2300      	movs	r3, #0
 8004c50:	73fb      	strb	r3, [r7, #15]
 8004c52:	687b      	ldr	r3, [r7, #4]
 8004c54:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8004c58:	2b01      	cmp	r3, #1
 8004c5a:	d101      	bne.n	8004c60 <HAL_TIM_ConfigClockSource+0x1c>
 8004c5c:	2302      	movs	r3, #2
 8004c5e:	e0b4      	b.n	8004dca <HAL_TIM_ConfigClockSource+0x186>
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	2201      	movs	r2, #1
 8004c64:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	2202      	movs	r2, #2
 8004c6c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8004c70:	687b      	ldr	r3, [r7, #4]
 8004c72:	681b      	ldr	r3, [r3, #0]
 8004c74:	689b      	ldr	r3, [r3, #8]
 8004c76:	60bb      	str	r3, [r7, #8]
 8004c78:	68bb      	ldr	r3, [r7, #8]
 8004c7a:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8004c7e:	60bb      	str	r3, [r7, #8]
 8004c80:	68bb      	ldr	r3, [r7, #8]
 8004c82:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8004c86:	60bb      	str	r3, [r7, #8]
 8004c88:	687b      	ldr	r3, [r7, #4]
 8004c8a:	681b      	ldr	r3, [r3, #0]
 8004c8c:	68ba      	ldr	r2, [r7, #8]
 8004c8e:	609a      	str	r2, [r3, #8]
 8004c90:	683b      	ldr	r3, [r7, #0]
 8004c92:	681b      	ldr	r3, [r3, #0]
 8004c94:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004c98:	d03e      	beq.n	8004d18 <HAL_TIM_ConfigClockSource+0xd4>
 8004c9a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004c9e:	f200 8087 	bhi.w	8004db0 <HAL_TIM_ConfigClockSource+0x16c>
 8004ca2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004ca6:	f000 8086 	beq.w	8004db6 <HAL_TIM_ConfigClockSource+0x172>
 8004caa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004cae:	d87f      	bhi.n	8004db0 <HAL_TIM_ConfigClockSource+0x16c>
 8004cb0:	2b70      	cmp	r3, #112	; 0x70
 8004cb2:	d01a      	beq.n	8004cea <HAL_TIM_ConfigClockSource+0xa6>
 8004cb4:	2b70      	cmp	r3, #112	; 0x70
 8004cb6:	d87b      	bhi.n	8004db0 <HAL_TIM_ConfigClockSource+0x16c>
 8004cb8:	2b60      	cmp	r3, #96	; 0x60
 8004cba:	d050      	beq.n	8004d5e <HAL_TIM_ConfigClockSource+0x11a>
 8004cbc:	2b60      	cmp	r3, #96	; 0x60
 8004cbe:	d877      	bhi.n	8004db0 <HAL_TIM_ConfigClockSource+0x16c>
 8004cc0:	2b50      	cmp	r3, #80	; 0x50
 8004cc2:	d03c      	beq.n	8004d3e <HAL_TIM_ConfigClockSource+0xfa>
 8004cc4:	2b50      	cmp	r3, #80	; 0x50
 8004cc6:	d873      	bhi.n	8004db0 <HAL_TIM_ConfigClockSource+0x16c>
 8004cc8:	2b40      	cmp	r3, #64	; 0x40
 8004cca:	d058      	beq.n	8004d7e <HAL_TIM_ConfigClockSource+0x13a>
 8004ccc:	2b40      	cmp	r3, #64	; 0x40
 8004cce:	d86f      	bhi.n	8004db0 <HAL_TIM_ConfigClockSource+0x16c>
 8004cd0:	2b30      	cmp	r3, #48	; 0x30
 8004cd2:	d064      	beq.n	8004d9e <HAL_TIM_ConfigClockSource+0x15a>
 8004cd4:	2b30      	cmp	r3, #48	; 0x30
 8004cd6:	d86b      	bhi.n	8004db0 <HAL_TIM_ConfigClockSource+0x16c>
 8004cd8:	2b20      	cmp	r3, #32
 8004cda:	d060      	beq.n	8004d9e <HAL_TIM_ConfigClockSource+0x15a>
 8004cdc:	2b20      	cmp	r3, #32
 8004cde:	d867      	bhi.n	8004db0 <HAL_TIM_ConfigClockSource+0x16c>
 8004ce0:	2b00      	cmp	r3, #0
 8004ce2:	d05c      	beq.n	8004d9e <HAL_TIM_ConfigClockSource+0x15a>
 8004ce4:	2b10      	cmp	r3, #16
 8004ce6:	d05a      	beq.n	8004d9e <HAL_TIM_ConfigClockSource+0x15a>
 8004ce8:	e062      	b.n	8004db0 <HAL_TIM_ConfigClockSource+0x16c>
 8004cea:	687b      	ldr	r3, [r7, #4]
 8004cec:	6818      	ldr	r0, [r3, #0]
 8004cee:	683b      	ldr	r3, [r7, #0]
 8004cf0:	6899      	ldr	r1, [r3, #8]
 8004cf2:	683b      	ldr	r3, [r7, #0]
 8004cf4:	685a      	ldr	r2, [r3, #4]
 8004cf6:	683b      	ldr	r3, [r7, #0]
 8004cf8:	68db      	ldr	r3, [r3, #12]
 8004cfa:	f000 fa73 	bl	80051e4 <TIM_ETR_SetConfig>
 8004cfe:	687b      	ldr	r3, [r7, #4]
 8004d00:	681b      	ldr	r3, [r3, #0]
 8004d02:	689b      	ldr	r3, [r3, #8]
 8004d04:	60bb      	str	r3, [r7, #8]
 8004d06:	68bb      	ldr	r3, [r7, #8]
 8004d08:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8004d0c:	60bb      	str	r3, [r7, #8]
 8004d0e:	687b      	ldr	r3, [r7, #4]
 8004d10:	681b      	ldr	r3, [r3, #0]
 8004d12:	68ba      	ldr	r2, [r7, #8]
 8004d14:	609a      	str	r2, [r3, #8]
 8004d16:	e04f      	b.n	8004db8 <HAL_TIM_ConfigClockSource+0x174>
 8004d18:	687b      	ldr	r3, [r7, #4]
 8004d1a:	6818      	ldr	r0, [r3, #0]
 8004d1c:	683b      	ldr	r3, [r7, #0]
 8004d1e:	6899      	ldr	r1, [r3, #8]
 8004d20:	683b      	ldr	r3, [r7, #0]
 8004d22:	685a      	ldr	r2, [r3, #4]
 8004d24:	683b      	ldr	r3, [r7, #0]
 8004d26:	68db      	ldr	r3, [r3, #12]
 8004d28:	f000 fa5c 	bl	80051e4 <TIM_ETR_SetConfig>
 8004d2c:	687b      	ldr	r3, [r7, #4]
 8004d2e:	681b      	ldr	r3, [r3, #0]
 8004d30:	689a      	ldr	r2, [r3, #8]
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	681b      	ldr	r3, [r3, #0]
 8004d36:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004d3a:	609a      	str	r2, [r3, #8]
 8004d3c:	e03c      	b.n	8004db8 <HAL_TIM_ConfigClockSource+0x174>
 8004d3e:	687b      	ldr	r3, [r7, #4]
 8004d40:	6818      	ldr	r0, [r3, #0]
 8004d42:	683b      	ldr	r3, [r7, #0]
 8004d44:	6859      	ldr	r1, [r3, #4]
 8004d46:	683b      	ldr	r3, [r7, #0]
 8004d48:	68db      	ldr	r3, [r3, #12]
 8004d4a:	461a      	mov	r2, r3
 8004d4c:	f000 f9d3 	bl	80050f6 <TIM_TI1_ConfigInputStage>
 8004d50:	687b      	ldr	r3, [r7, #4]
 8004d52:	681b      	ldr	r3, [r3, #0]
 8004d54:	2150      	movs	r1, #80	; 0x50
 8004d56:	4618      	mov	r0, r3
 8004d58:	f000 fa2a 	bl	80051b0 <TIM_ITRx_SetConfig>
 8004d5c:	e02c      	b.n	8004db8 <HAL_TIM_ConfigClockSource+0x174>
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	6818      	ldr	r0, [r3, #0]
 8004d62:	683b      	ldr	r3, [r7, #0]
 8004d64:	6859      	ldr	r1, [r3, #4]
 8004d66:	683b      	ldr	r3, [r7, #0]
 8004d68:	68db      	ldr	r3, [r3, #12]
 8004d6a:	461a      	mov	r2, r3
 8004d6c:	f000 f9f1 	bl	8005152 <TIM_TI2_ConfigInputStage>
 8004d70:	687b      	ldr	r3, [r7, #4]
 8004d72:	681b      	ldr	r3, [r3, #0]
 8004d74:	2160      	movs	r1, #96	; 0x60
 8004d76:	4618      	mov	r0, r3
 8004d78:	f000 fa1a 	bl	80051b0 <TIM_ITRx_SetConfig>
 8004d7c:	e01c      	b.n	8004db8 <HAL_TIM_ConfigClockSource+0x174>
 8004d7e:	687b      	ldr	r3, [r7, #4]
 8004d80:	6818      	ldr	r0, [r3, #0]
 8004d82:	683b      	ldr	r3, [r7, #0]
 8004d84:	6859      	ldr	r1, [r3, #4]
 8004d86:	683b      	ldr	r3, [r7, #0]
 8004d88:	68db      	ldr	r3, [r3, #12]
 8004d8a:	461a      	mov	r2, r3
 8004d8c:	f000 f9b3 	bl	80050f6 <TIM_TI1_ConfigInputStage>
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	681b      	ldr	r3, [r3, #0]
 8004d94:	2140      	movs	r1, #64	; 0x40
 8004d96:	4618      	mov	r0, r3
 8004d98:	f000 fa0a 	bl	80051b0 <TIM_ITRx_SetConfig>
 8004d9c:	e00c      	b.n	8004db8 <HAL_TIM_ConfigClockSource+0x174>
 8004d9e:	687b      	ldr	r3, [r7, #4]
 8004da0:	681a      	ldr	r2, [r3, #0]
 8004da2:	683b      	ldr	r3, [r7, #0]
 8004da4:	681b      	ldr	r3, [r3, #0]
 8004da6:	4619      	mov	r1, r3
 8004da8:	4610      	mov	r0, r2
 8004daa:	f000 fa01 	bl	80051b0 <TIM_ITRx_SetConfig>
 8004dae:	e003      	b.n	8004db8 <HAL_TIM_ConfigClockSource+0x174>
 8004db0:	2301      	movs	r3, #1
 8004db2:	73fb      	strb	r3, [r7, #15]
 8004db4:	e000      	b.n	8004db8 <HAL_TIM_ConfigClockSource+0x174>
 8004db6:	bf00      	nop
 8004db8:	687b      	ldr	r3, [r7, #4]
 8004dba:	2201      	movs	r2, #1
 8004dbc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	2200      	movs	r2, #0
 8004dc4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8004dc8:	7bfb      	ldrb	r3, [r7, #15]
 8004dca:	4618      	mov	r0, r3
 8004dcc:	3710      	adds	r7, #16
 8004dce:	46bd      	mov	sp, r7
 8004dd0:	bd80      	pop	{r7, pc}

08004dd2 <HAL_TIM_PeriodElapsedCallback>:
 8004dd2:	b480      	push	{r7}
 8004dd4:	b083      	sub	sp, #12
 8004dd6:	af00      	add	r7, sp, #0
 8004dd8:	6078      	str	r0, [r7, #4]
 8004dda:	bf00      	nop
 8004ddc:	370c      	adds	r7, #12
 8004dde:	46bd      	mov	sp, r7
 8004de0:	bc80      	pop	{r7}
 8004de2:	4770      	bx	lr

08004de4 <HAL_TIM_OC_DelayElapsedCallback>:
 8004de4:	b480      	push	{r7}
 8004de6:	b083      	sub	sp, #12
 8004de8:	af00      	add	r7, sp, #0
 8004dea:	6078      	str	r0, [r7, #4]
 8004dec:	bf00      	nop
 8004dee:	370c      	adds	r7, #12
 8004df0:	46bd      	mov	sp, r7
 8004df2:	bc80      	pop	{r7}
 8004df4:	4770      	bx	lr

08004df6 <HAL_TIM_IC_CaptureCallback>:
 8004df6:	b480      	push	{r7}
 8004df8:	b083      	sub	sp, #12
 8004dfa:	af00      	add	r7, sp, #0
 8004dfc:	6078      	str	r0, [r7, #4]
 8004dfe:	bf00      	nop
 8004e00:	370c      	adds	r7, #12
 8004e02:	46bd      	mov	sp, r7
 8004e04:	bc80      	pop	{r7}
 8004e06:	4770      	bx	lr

08004e08 <HAL_TIM_PWM_PulseFinishedCallback>:
 8004e08:	b480      	push	{r7}
 8004e0a:	b083      	sub	sp, #12
 8004e0c:	af00      	add	r7, sp, #0
 8004e0e:	6078      	str	r0, [r7, #4]
 8004e10:	bf00      	nop
 8004e12:	370c      	adds	r7, #12
 8004e14:	46bd      	mov	sp, r7
 8004e16:	bc80      	pop	{r7}
 8004e18:	4770      	bx	lr

08004e1a <HAL_TIM_TriggerCallback>:
 8004e1a:	b480      	push	{r7}
 8004e1c:	b083      	sub	sp, #12
 8004e1e:	af00      	add	r7, sp, #0
 8004e20:	6078      	str	r0, [r7, #4]
 8004e22:	bf00      	nop
 8004e24:	370c      	adds	r7, #12
 8004e26:	46bd      	mov	sp, r7
 8004e28:	bc80      	pop	{r7}
 8004e2a:	4770      	bx	lr

08004e2c <TIM_Base_SetConfig>:
 8004e2c:	b480      	push	{r7}
 8004e2e:	b085      	sub	sp, #20
 8004e30:	af00      	add	r7, sp, #0
 8004e32:	6078      	str	r0, [r7, #4]
 8004e34:	6039      	str	r1, [r7, #0]
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	681b      	ldr	r3, [r3, #0]
 8004e3a:	60fb      	str	r3, [r7, #12]
 8004e3c:	687b      	ldr	r3, [r7, #4]
 8004e3e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004e42:	d00f      	beq.n	8004e64 <TIM_Base_SetConfig+0x38>
 8004e44:	687b      	ldr	r3, [r7, #4]
 8004e46:	4a2b      	ldr	r2, [pc, #172]	; (8004ef4 <TIM_Base_SetConfig+0xc8>)
 8004e48:	4293      	cmp	r3, r2
 8004e4a:	d00b      	beq.n	8004e64 <TIM_Base_SetConfig+0x38>
 8004e4c:	687b      	ldr	r3, [r7, #4]
 8004e4e:	4a2a      	ldr	r2, [pc, #168]	; (8004ef8 <TIM_Base_SetConfig+0xcc>)
 8004e50:	4293      	cmp	r3, r2
 8004e52:	d007      	beq.n	8004e64 <TIM_Base_SetConfig+0x38>
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	4a29      	ldr	r2, [pc, #164]	; (8004efc <TIM_Base_SetConfig+0xd0>)
 8004e58:	4293      	cmp	r3, r2
 8004e5a:	d003      	beq.n	8004e64 <TIM_Base_SetConfig+0x38>
 8004e5c:	687b      	ldr	r3, [r7, #4]
 8004e5e:	4a28      	ldr	r2, [pc, #160]	; (8004f00 <TIM_Base_SetConfig+0xd4>)
 8004e60:	4293      	cmp	r3, r2
 8004e62:	d108      	bne.n	8004e76 <TIM_Base_SetConfig+0x4a>
 8004e64:	68fb      	ldr	r3, [r7, #12]
 8004e66:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004e6a:	60fb      	str	r3, [r7, #12]
 8004e6c:	683b      	ldr	r3, [r7, #0]
 8004e6e:	685b      	ldr	r3, [r3, #4]
 8004e70:	68fa      	ldr	r2, [r7, #12]
 8004e72:	4313      	orrs	r3, r2
 8004e74:	60fb      	str	r3, [r7, #12]
 8004e76:	687b      	ldr	r3, [r7, #4]
 8004e78:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004e7c:	d017      	beq.n	8004eae <TIM_Base_SetConfig+0x82>
 8004e7e:	687b      	ldr	r3, [r7, #4]
 8004e80:	4a1c      	ldr	r2, [pc, #112]	; (8004ef4 <TIM_Base_SetConfig+0xc8>)
 8004e82:	4293      	cmp	r3, r2
 8004e84:	d013      	beq.n	8004eae <TIM_Base_SetConfig+0x82>
 8004e86:	687b      	ldr	r3, [r7, #4]
 8004e88:	4a1b      	ldr	r2, [pc, #108]	; (8004ef8 <TIM_Base_SetConfig+0xcc>)
 8004e8a:	4293      	cmp	r3, r2
 8004e8c:	d00f      	beq.n	8004eae <TIM_Base_SetConfig+0x82>
 8004e8e:	687b      	ldr	r3, [r7, #4]
 8004e90:	4a1a      	ldr	r2, [pc, #104]	; (8004efc <TIM_Base_SetConfig+0xd0>)
 8004e92:	4293      	cmp	r3, r2
 8004e94:	d00b      	beq.n	8004eae <TIM_Base_SetConfig+0x82>
 8004e96:	687b      	ldr	r3, [r7, #4]
 8004e98:	4a19      	ldr	r2, [pc, #100]	; (8004f00 <TIM_Base_SetConfig+0xd4>)
 8004e9a:	4293      	cmp	r3, r2
 8004e9c:	d007      	beq.n	8004eae <TIM_Base_SetConfig+0x82>
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	4a18      	ldr	r2, [pc, #96]	; (8004f04 <TIM_Base_SetConfig+0xd8>)
 8004ea2:	4293      	cmp	r3, r2
 8004ea4:	d003      	beq.n	8004eae <TIM_Base_SetConfig+0x82>
 8004ea6:	687b      	ldr	r3, [r7, #4]
 8004ea8:	4a17      	ldr	r2, [pc, #92]	; (8004f08 <TIM_Base_SetConfig+0xdc>)
 8004eaa:	4293      	cmp	r3, r2
 8004eac:	d108      	bne.n	8004ec0 <TIM_Base_SetConfig+0x94>
 8004eae:	68fb      	ldr	r3, [r7, #12]
 8004eb0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004eb4:	60fb      	str	r3, [r7, #12]
 8004eb6:	683b      	ldr	r3, [r7, #0]
 8004eb8:	68db      	ldr	r3, [r3, #12]
 8004eba:	68fa      	ldr	r2, [r7, #12]
 8004ebc:	4313      	orrs	r3, r2
 8004ebe:	60fb      	str	r3, [r7, #12]
 8004ec0:	68fb      	ldr	r3, [r7, #12]
 8004ec2:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8004ec6:	683b      	ldr	r3, [r7, #0]
 8004ec8:	691b      	ldr	r3, [r3, #16]
 8004eca:	4313      	orrs	r3, r2
 8004ecc:	60fb      	str	r3, [r7, #12]
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	68fa      	ldr	r2, [r7, #12]
 8004ed2:	601a      	str	r2, [r3, #0]
 8004ed4:	683b      	ldr	r3, [r7, #0]
 8004ed6:	689a      	ldr	r2, [r3, #8]
 8004ed8:	687b      	ldr	r3, [r7, #4]
 8004eda:	62da      	str	r2, [r3, #44]	; 0x2c
 8004edc:	683b      	ldr	r3, [r7, #0]
 8004ede:	681a      	ldr	r2, [r3, #0]
 8004ee0:	687b      	ldr	r3, [r7, #4]
 8004ee2:	629a      	str	r2, [r3, #40]	; 0x28
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	2201      	movs	r2, #1
 8004ee8:	615a      	str	r2, [r3, #20]
 8004eea:	bf00      	nop
 8004eec:	3714      	adds	r7, #20
 8004eee:	46bd      	mov	sp, r7
 8004ef0:	bc80      	pop	{r7}
 8004ef2:	4770      	bx	lr
 8004ef4:	40000400 	.word	0x40000400
 8004ef8:	40000800 	.word	0x40000800
 8004efc:	40000c00 	.word	0x40000c00
 8004f00:	40010800 	.word	0x40010800
 8004f04:	40010c00 	.word	0x40010c00
 8004f08:	40011000 	.word	0x40011000

08004f0c <TIM_OC1_SetConfig>:
 8004f0c:	b480      	push	{r7}
 8004f0e:	b087      	sub	sp, #28
 8004f10:	af00      	add	r7, sp, #0
 8004f12:	6078      	str	r0, [r7, #4]
 8004f14:	6039      	str	r1, [r7, #0]
 8004f16:	687b      	ldr	r3, [r7, #4]
 8004f18:	6a1b      	ldr	r3, [r3, #32]
 8004f1a:	617b      	str	r3, [r7, #20]
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	6a1b      	ldr	r3, [r3, #32]
 8004f20:	f023 0201 	bic.w	r2, r3, #1
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	621a      	str	r2, [r3, #32]
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	685b      	ldr	r3, [r3, #4]
 8004f2c:	613b      	str	r3, [r7, #16]
 8004f2e:	687b      	ldr	r3, [r7, #4]
 8004f30:	699b      	ldr	r3, [r3, #24]
 8004f32:	60fb      	str	r3, [r7, #12]
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004f3a:	60fb      	str	r3, [r7, #12]
 8004f3c:	68fb      	ldr	r3, [r7, #12]
 8004f3e:	f023 0303 	bic.w	r3, r3, #3
 8004f42:	60fb      	str	r3, [r7, #12]
 8004f44:	683b      	ldr	r3, [r7, #0]
 8004f46:	681b      	ldr	r3, [r3, #0]
 8004f48:	68fa      	ldr	r2, [r7, #12]
 8004f4a:	4313      	orrs	r3, r2
 8004f4c:	60fb      	str	r3, [r7, #12]
 8004f4e:	697b      	ldr	r3, [r7, #20]
 8004f50:	f023 0302 	bic.w	r3, r3, #2
 8004f54:	617b      	str	r3, [r7, #20]
 8004f56:	683b      	ldr	r3, [r7, #0]
 8004f58:	689b      	ldr	r3, [r3, #8]
 8004f5a:	697a      	ldr	r2, [r7, #20]
 8004f5c:	4313      	orrs	r3, r2
 8004f5e:	617b      	str	r3, [r7, #20]
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	693a      	ldr	r2, [r7, #16]
 8004f64:	605a      	str	r2, [r3, #4]
 8004f66:	687b      	ldr	r3, [r7, #4]
 8004f68:	68fa      	ldr	r2, [r7, #12]
 8004f6a:	619a      	str	r2, [r3, #24]
 8004f6c:	683b      	ldr	r3, [r7, #0]
 8004f6e:	685a      	ldr	r2, [r3, #4]
 8004f70:	687b      	ldr	r3, [r7, #4]
 8004f72:	635a      	str	r2, [r3, #52]	; 0x34
 8004f74:	687b      	ldr	r3, [r7, #4]
 8004f76:	697a      	ldr	r2, [r7, #20]
 8004f78:	621a      	str	r2, [r3, #32]
 8004f7a:	bf00      	nop
 8004f7c:	371c      	adds	r7, #28
 8004f7e:	46bd      	mov	sp, r7
 8004f80:	bc80      	pop	{r7}
 8004f82:	4770      	bx	lr

08004f84 <TIM_OC2_SetConfig>:
 8004f84:	b480      	push	{r7}
 8004f86:	b087      	sub	sp, #28
 8004f88:	af00      	add	r7, sp, #0
 8004f8a:	6078      	str	r0, [r7, #4]
 8004f8c:	6039      	str	r1, [r7, #0]
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	6a1b      	ldr	r3, [r3, #32]
 8004f92:	617b      	str	r3, [r7, #20]
 8004f94:	687b      	ldr	r3, [r7, #4]
 8004f96:	6a1b      	ldr	r3, [r3, #32]
 8004f98:	f023 0210 	bic.w	r2, r3, #16
 8004f9c:	687b      	ldr	r3, [r7, #4]
 8004f9e:	621a      	str	r2, [r3, #32]
 8004fa0:	687b      	ldr	r3, [r7, #4]
 8004fa2:	685b      	ldr	r3, [r3, #4]
 8004fa4:	613b      	str	r3, [r7, #16]
 8004fa6:	687b      	ldr	r3, [r7, #4]
 8004fa8:	699b      	ldr	r3, [r3, #24]
 8004faa:	60fb      	str	r3, [r7, #12]
 8004fac:	68fb      	ldr	r3, [r7, #12]
 8004fae:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004fb2:	60fb      	str	r3, [r7, #12]
 8004fb4:	68fb      	ldr	r3, [r7, #12]
 8004fb6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004fba:	60fb      	str	r3, [r7, #12]
 8004fbc:	683b      	ldr	r3, [r7, #0]
 8004fbe:	681b      	ldr	r3, [r3, #0]
 8004fc0:	021b      	lsls	r3, r3, #8
 8004fc2:	68fa      	ldr	r2, [r7, #12]
 8004fc4:	4313      	orrs	r3, r2
 8004fc6:	60fb      	str	r3, [r7, #12]
 8004fc8:	697b      	ldr	r3, [r7, #20]
 8004fca:	f023 0320 	bic.w	r3, r3, #32
 8004fce:	617b      	str	r3, [r7, #20]
 8004fd0:	683b      	ldr	r3, [r7, #0]
 8004fd2:	689b      	ldr	r3, [r3, #8]
 8004fd4:	011b      	lsls	r3, r3, #4
 8004fd6:	697a      	ldr	r2, [r7, #20]
 8004fd8:	4313      	orrs	r3, r2
 8004fda:	617b      	str	r3, [r7, #20]
 8004fdc:	687b      	ldr	r3, [r7, #4]
 8004fde:	693a      	ldr	r2, [r7, #16]
 8004fe0:	605a      	str	r2, [r3, #4]
 8004fe2:	687b      	ldr	r3, [r7, #4]
 8004fe4:	68fa      	ldr	r2, [r7, #12]
 8004fe6:	619a      	str	r2, [r3, #24]
 8004fe8:	683b      	ldr	r3, [r7, #0]
 8004fea:	685a      	ldr	r2, [r3, #4]
 8004fec:	687b      	ldr	r3, [r7, #4]
 8004fee:	639a      	str	r2, [r3, #56]	; 0x38
 8004ff0:	687b      	ldr	r3, [r7, #4]
 8004ff2:	697a      	ldr	r2, [r7, #20]
 8004ff4:	621a      	str	r2, [r3, #32]
 8004ff6:	bf00      	nop
 8004ff8:	371c      	adds	r7, #28
 8004ffa:	46bd      	mov	sp, r7
 8004ffc:	bc80      	pop	{r7}
 8004ffe:	4770      	bx	lr

08005000 <TIM_OC3_SetConfig>:
 8005000:	b480      	push	{r7}
 8005002:	b087      	sub	sp, #28
 8005004:	af00      	add	r7, sp, #0
 8005006:	6078      	str	r0, [r7, #4]
 8005008:	6039      	str	r1, [r7, #0]
 800500a:	687b      	ldr	r3, [r7, #4]
 800500c:	6a1b      	ldr	r3, [r3, #32]
 800500e:	617b      	str	r3, [r7, #20]
 8005010:	687b      	ldr	r3, [r7, #4]
 8005012:	6a1b      	ldr	r3, [r3, #32]
 8005014:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8005018:	687b      	ldr	r3, [r7, #4]
 800501a:	621a      	str	r2, [r3, #32]
 800501c:	687b      	ldr	r3, [r7, #4]
 800501e:	685b      	ldr	r3, [r3, #4]
 8005020:	613b      	str	r3, [r7, #16]
 8005022:	687b      	ldr	r3, [r7, #4]
 8005024:	69db      	ldr	r3, [r3, #28]
 8005026:	60fb      	str	r3, [r7, #12]
 8005028:	68fb      	ldr	r3, [r7, #12]
 800502a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800502e:	60fb      	str	r3, [r7, #12]
 8005030:	68fb      	ldr	r3, [r7, #12]
 8005032:	f023 0303 	bic.w	r3, r3, #3
 8005036:	60fb      	str	r3, [r7, #12]
 8005038:	683b      	ldr	r3, [r7, #0]
 800503a:	681b      	ldr	r3, [r3, #0]
 800503c:	68fa      	ldr	r2, [r7, #12]
 800503e:	4313      	orrs	r3, r2
 8005040:	60fb      	str	r3, [r7, #12]
 8005042:	697b      	ldr	r3, [r7, #20]
 8005044:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8005048:	617b      	str	r3, [r7, #20]
 800504a:	683b      	ldr	r3, [r7, #0]
 800504c:	689b      	ldr	r3, [r3, #8]
 800504e:	021b      	lsls	r3, r3, #8
 8005050:	697a      	ldr	r2, [r7, #20]
 8005052:	4313      	orrs	r3, r2
 8005054:	617b      	str	r3, [r7, #20]
 8005056:	687b      	ldr	r3, [r7, #4]
 8005058:	693a      	ldr	r2, [r7, #16]
 800505a:	605a      	str	r2, [r3, #4]
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	68fa      	ldr	r2, [r7, #12]
 8005060:	61da      	str	r2, [r3, #28]
 8005062:	683b      	ldr	r3, [r7, #0]
 8005064:	685a      	ldr	r2, [r3, #4]
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	63da      	str	r2, [r3, #60]	; 0x3c
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	697a      	ldr	r2, [r7, #20]
 800506e:	621a      	str	r2, [r3, #32]
 8005070:	bf00      	nop
 8005072:	371c      	adds	r7, #28
 8005074:	46bd      	mov	sp, r7
 8005076:	bc80      	pop	{r7}
 8005078:	4770      	bx	lr

0800507a <TIM_OC4_SetConfig>:
 800507a:	b480      	push	{r7}
 800507c:	b087      	sub	sp, #28
 800507e:	af00      	add	r7, sp, #0
 8005080:	6078      	str	r0, [r7, #4]
 8005082:	6039      	str	r1, [r7, #0]
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	6a1b      	ldr	r3, [r3, #32]
 8005088:	617b      	str	r3, [r7, #20]
 800508a:	687b      	ldr	r3, [r7, #4]
 800508c:	6a1b      	ldr	r3, [r3, #32]
 800508e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8005092:	687b      	ldr	r3, [r7, #4]
 8005094:	621a      	str	r2, [r3, #32]
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	685b      	ldr	r3, [r3, #4]
 800509a:	613b      	str	r3, [r7, #16]
 800509c:	687b      	ldr	r3, [r7, #4]
 800509e:	69db      	ldr	r3, [r3, #28]
 80050a0:	60fb      	str	r3, [r7, #12]
 80050a2:	68fb      	ldr	r3, [r7, #12]
 80050a4:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80050a8:	60fb      	str	r3, [r7, #12]
 80050aa:	68fb      	ldr	r3, [r7, #12]
 80050ac:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80050b0:	60fb      	str	r3, [r7, #12]
 80050b2:	683b      	ldr	r3, [r7, #0]
 80050b4:	681b      	ldr	r3, [r3, #0]
 80050b6:	021b      	lsls	r3, r3, #8
 80050b8:	68fa      	ldr	r2, [r7, #12]
 80050ba:	4313      	orrs	r3, r2
 80050bc:	60fb      	str	r3, [r7, #12]
 80050be:	697b      	ldr	r3, [r7, #20]
 80050c0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80050c4:	617b      	str	r3, [r7, #20]
 80050c6:	683b      	ldr	r3, [r7, #0]
 80050c8:	689b      	ldr	r3, [r3, #8]
 80050ca:	031b      	lsls	r3, r3, #12
 80050cc:	697a      	ldr	r2, [r7, #20]
 80050ce:	4313      	orrs	r3, r2
 80050d0:	617b      	str	r3, [r7, #20]
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	693a      	ldr	r2, [r7, #16]
 80050d6:	605a      	str	r2, [r3, #4]
 80050d8:	687b      	ldr	r3, [r7, #4]
 80050da:	68fa      	ldr	r2, [r7, #12]
 80050dc:	61da      	str	r2, [r3, #28]
 80050de:	683b      	ldr	r3, [r7, #0]
 80050e0:	685a      	ldr	r2, [r3, #4]
 80050e2:	687b      	ldr	r3, [r7, #4]
 80050e4:	641a      	str	r2, [r3, #64]	; 0x40
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	697a      	ldr	r2, [r7, #20]
 80050ea:	621a      	str	r2, [r3, #32]
 80050ec:	bf00      	nop
 80050ee:	371c      	adds	r7, #28
 80050f0:	46bd      	mov	sp, r7
 80050f2:	bc80      	pop	{r7}
 80050f4:	4770      	bx	lr

080050f6 <TIM_TI1_ConfigInputStage>:
 80050f6:	b480      	push	{r7}
 80050f8:	b087      	sub	sp, #28
 80050fa:	af00      	add	r7, sp, #0
 80050fc:	60f8      	str	r0, [r7, #12]
 80050fe:	60b9      	str	r1, [r7, #8]
 8005100:	607a      	str	r2, [r7, #4]
 8005102:	68fb      	ldr	r3, [r7, #12]
 8005104:	6a1b      	ldr	r3, [r3, #32]
 8005106:	617b      	str	r3, [r7, #20]
 8005108:	68fb      	ldr	r3, [r7, #12]
 800510a:	6a1b      	ldr	r3, [r3, #32]
 800510c:	f023 0201 	bic.w	r2, r3, #1
 8005110:	68fb      	ldr	r3, [r7, #12]
 8005112:	621a      	str	r2, [r3, #32]
 8005114:	68fb      	ldr	r3, [r7, #12]
 8005116:	699b      	ldr	r3, [r3, #24]
 8005118:	613b      	str	r3, [r7, #16]
 800511a:	693b      	ldr	r3, [r7, #16]
 800511c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005120:	613b      	str	r3, [r7, #16]
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	011b      	lsls	r3, r3, #4
 8005126:	693a      	ldr	r2, [r7, #16]
 8005128:	4313      	orrs	r3, r2
 800512a:	613b      	str	r3, [r7, #16]
 800512c:	697b      	ldr	r3, [r7, #20]
 800512e:	f023 030a 	bic.w	r3, r3, #10
 8005132:	617b      	str	r3, [r7, #20]
 8005134:	697a      	ldr	r2, [r7, #20]
 8005136:	68bb      	ldr	r3, [r7, #8]
 8005138:	4313      	orrs	r3, r2
 800513a:	617b      	str	r3, [r7, #20]
 800513c:	68fb      	ldr	r3, [r7, #12]
 800513e:	693a      	ldr	r2, [r7, #16]
 8005140:	619a      	str	r2, [r3, #24]
 8005142:	68fb      	ldr	r3, [r7, #12]
 8005144:	697a      	ldr	r2, [r7, #20]
 8005146:	621a      	str	r2, [r3, #32]
 8005148:	bf00      	nop
 800514a:	371c      	adds	r7, #28
 800514c:	46bd      	mov	sp, r7
 800514e:	bc80      	pop	{r7}
 8005150:	4770      	bx	lr

08005152 <TIM_TI2_ConfigInputStage>:
 8005152:	b480      	push	{r7}
 8005154:	b087      	sub	sp, #28
 8005156:	af00      	add	r7, sp, #0
 8005158:	60f8      	str	r0, [r7, #12]
 800515a:	60b9      	str	r1, [r7, #8]
 800515c:	607a      	str	r2, [r7, #4]
 800515e:	68fb      	ldr	r3, [r7, #12]
 8005160:	6a1b      	ldr	r3, [r3, #32]
 8005162:	617b      	str	r3, [r7, #20]
 8005164:	68fb      	ldr	r3, [r7, #12]
 8005166:	6a1b      	ldr	r3, [r3, #32]
 8005168:	f023 0210 	bic.w	r2, r3, #16
 800516c:	68fb      	ldr	r3, [r7, #12]
 800516e:	621a      	str	r2, [r3, #32]
 8005170:	68fb      	ldr	r3, [r7, #12]
 8005172:	699b      	ldr	r3, [r3, #24]
 8005174:	613b      	str	r3, [r7, #16]
 8005176:	693b      	ldr	r3, [r7, #16]
 8005178:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800517c:	613b      	str	r3, [r7, #16]
 800517e:	687b      	ldr	r3, [r7, #4]
 8005180:	031b      	lsls	r3, r3, #12
 8005182:	693a      	ldr	r2, [r7, #16]
 8005184:	4313      	orrs	r3, r2
 8005186:	613b      	str	r3, [r7, #16]
 8005188:	697b      	ldr	r3, [r7, #20]
 800518a:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800518e:	617b      	str	r3, [r7, #20]
 8005190:	68bb      	ldr	r3, [r7, #8]
 8005192:	011b      	lsls	r3, r3, #4
 8005194:	697a      	ldr	r2, [r7, #20]
 8005196:	4313      	orrs	r3, r2
 8005198:	617b      	str	r3, [r7, #20]
 800519a:	68fb      	ldr	r3, [r7, #12]
 800519c:	693a      	ldr	r2, [r7, #16]
 800519e:	619a      	str	r2, [r3, #24]
 80051a0:	68fb      	ldr	r3, [r7, #12]
 80051a2:	697a      	ldr	r2, [r7, #20]
 80051a4:	621a      	str	r2, [r3, #32]
 80051a6:	bf00      	nop
 80051a8:	371c      	adds	r7, #28
 80051aa:	46bd      	mov	sp, r7
 80051ac:	bc80      	pop	{r7}
 80051ae:	4770      	bx	lr

080051b0 <TIM_ITRx_SetConfig>:
 80051b0:	b480      	push	{r7}
 80051b2:	b085      	sub	sp, #20
 80051b4:	af00      	add	r7, sp, #0
 80051b6:	6078      	str	r0, [r7, #4]
 80051b8:	6039      	str	r1, [r7, #0]
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	689b      	ldr	r3, [r3, #8]
 80051be:	60fb      	str	r3, [r7, #12]
 80051c0:	68fb      	ldr	r3, [r7, #12]
 80051c2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80051c6:	60fb      	str	r3, [r7, #12]
 80051c8:	683a      	ldr	r2, [r7, #0]
 80051ca:	68fb      	ldr	r3, [r7, #12]
 80051cc:	4313      	orrs	r3, r2
 80051ce:	f043 0307 	orr.w	r3, r3, #7
 80051d2:	60fb      	str	r3, [r7, #12]
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	68fa      	ldr	r2, [r7, #12]
 80051d8:	609a      	str	r2, [r3, #8]
 80051da:	bf00      	nop
 80051dc:	3714      	adds	r7, #20
 80051de:	46bd      	mov	sp, r7
 80051e0:	bc80      	pop	{r7}
 80051e2:	4770      	bx	lr

080051e4 <TIM_ETR_SetConfig>:
 80051e4:	b480      	push	{r7}
 80051e6:	b087      	sub	sp, #28
 80051e8:	af00      	add	r7, sp, #0
 80051ea:	60f8      	str	r0, [r7, #12]
 80051ec:	60b9      	str	r1, [r7, #8]
 80051ee:	607a      	str	r2, [r7, #4]
 80051f0:	603b      	str	r3, [r7, #0]
 80051f2:	68fb      	ldr	r3, [r7, #12]
 80051f4:	689b      	ldr	r3, [r3, #8]
 80051f6:	617b      	str	r3, [r7, #20]
 80051f8:	697b      	ldr	r3, [r7, #20]
 80051fa:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80051fe:	617b      	str	r3, [r7, #20]
 8005200:	683b      	ldr	r3, [r7, #0]
 8005202:	021a      	lsls	r2, r3, #8
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	431a      	orrs	r2, r3
 8005208:	68bb      	ldr	r3, [r7, #8]
 800520a:	4313      	orrs	r3, r2
 800520c:	697a      	ldr	r2, [r7, #20]
 800520e:	4313      	orrs	r3, r2
 8005210:	617b      	str	r3, [r7, #20]
 8005212:	68fb      	ldr	r3, [r7, #12]
 8005214:	697a      	ldr	r2, [r7, #20]
 8005216:	609a      	str	r2, [r3, #8]
 8005218:	bf00      	nop
 800521a:	371c      	adds	r7, #28
 800521c:	46bd      	mov	sp, r7
 800521e:	bc80      	pop	{r7}
 8005220:	4770      	bx	lr

08005222 <TIM_CCxChannelCmd>:
 8005222:	b480      	push	{r7}
 8005224:	b087      	sub	sp, #28
 8005226:	af00      	add	r7, sp, #0
 8005228:	60f8      	str	r0, [r7, #12]
 800522a:	60b9      	str	r1, [r7, #8]
 800522c:	607a      	str	r2, [r7, #4]
 800522e:	68bb      	ldr	r3, [r7, #8]
 8005230:	f003 031f 	and.w	r3, r3, #31
 8005234:	2201      	movs	r2, #1
 8005236:	fa02 f303 	lsl.w	r3, r2, r3
 800523a:	617b      	str	r3, [r7, #20]
 800523c:	68fb      	ldr	r3, [r7, #12]
 800523e:	6a1a      	ldr	r2, [r3, #32]
 8005240:	697b      	ldr	r3, [r7, #20]
 8005242:	43db      	mvns	r3, r3
 8005244:	401a      	ands	r2, r3
 8005246:	68fb      	ldr	r3, [r7, #12]
 8005248:	621a      	str	r2, [r3, #32]
 800524a:	68fb      	ldr	r3, [r7, #12]
 800524c:	6a1a      	ldr	r2, [r3, #32]
 800524e:	68bb      	ldr	r3, [r7, #8]
 8005250:	f003 031f 	and.w	r3, r3, #31
 8005254:	6879      	ldr	r1, [r7, #4]
 8005256:	fa01 f303 	lsl.w	r3, r1, r3
 800525a:	431a      	orrs	r2, r3
 800525c:	68fb      	ldr	r3, [r7, #12]
 800525e:	621a      	str	r2, [r3, #32]
 8005260:	bf00      	nop
 8005262:	371c      	adds	r7, #28
 8005264:	46bd      	mov	sp, r7
 8005266:	bc80      	pop	{r7}
 8005268:	4770      	bx	lr
	...

0800526c <HAL_TIMEx_MasterConfigSynchronization>:
 800526c:	b480      	push	{r7}
 800526e:	b085      	sub	sp, #20
 8005270:	af00      	add	r7, sp, #0
 8005272:	6078      	str	r0, [r7, #4]
 8005274:	6039      	str	r1, [r7, #0]
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800527c:	2b01      	cmp	r3, #1
 800527e:	d101      	bne.n	8005284 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005280:	2302      	movs	r3, #2
 8005282:	e046      	b.n	8005312 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8005284:	687b      	ldr	r3, [r7, #4]
 8005286:	2201      	movs	r2, #1
 8005288:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800528c:	687b      	ldr	r3, [r7, #4]
 800528e:	2202      	movs	r2, #2
 8005290:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005294:	687b      	ldr	r3, [r7, #4]
 8005296:	681b      	ldr	r3, [r3, #0]
 8005298:	685b      	ldr	r3, [r3, #4]
 800529a:	60fb      	str	r3, [r7, #12]
 800529c:	687b      	ldr	r3, [r7, #4]
 800529e:	681b      	ldr	r3, [r3, #0]
 80052a0:	689b      	ldr	r3, [r3, #8]
 80052a2:	60bb      	str	r3, [r7, #8]
 80052a4:	68fb      	ldr	r3, [r7, #12]
 80052a6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80052aa:	60fb      	str	r3, [r7, #12]
 80052ac:	683b      	ldr	r3, [r7, #0]
 80052ae:	681b      	ldr	r3, [r3, #0]
 80052b0:	68fa      	ldr	r2, [r7, #12]
 80052b2:	4313      	orrs	r3, r2
 80052b4:	60fb      	str	r3, [r7, #12]
 80052b6:	687b      	ldr	r3, [r7, #4]
 80052b8:	681b      	ldr	r3, [r3, #0]
 80052ba:	68fa      	ldr	r2, [r7, #12]
 80052bc:	605a      	str	r2, [r3, #4]
 80052be:	687b      	ldr	r3, [r7, #4]
 80052c0:	681b      	ldr	r3, [r3, #0]
 80052c2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80052c6:	d00e      	beq.n	80052e6 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80052c8:	687b      	ldr	r3, [r7, #4]
 80052ca:	681b      	ldr	r3, [r3, #0]
 80052cc:	4a13      	ldr	r2, [pc, #76]	; (800531c <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 80052ce:	4293      	cmp	r3, r2
 80052d0:	d009      	beq.n	80052e6 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80052d2:	687b      	ldr	r3, [r7, #4]
 80052d4:	681b      	ldr	r3, [r3, #0]
 80052d6:	4a12      	ldr	r2, [pc, #72]	; (8005320 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 80052d8:	4293      	cmp	r3, r2
 80052da:	d004      	beq.n	80052e6 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80052dc:	687b      	ldr	r3, [r7, #4]
 80052de:	681b      	ldr	r3, [r3, #0]
 80052e0:	4a10      	ldr	r2, [pc, #64]	; (8005324 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 80052e2:	4293      	cmp	r3, r2
 80052e4:	d10c      	bne.n	8005300 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 80052e6:	68bb      	ldr	r3, [r7, #8]
 80052e8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80052ec:	60bb      	str	r3, [r7, #8]
 80052ee:	683b      	ldr	r3, [r7, #0]
 80052f0:	685b      	ldr	r3, [r3, #4]
 80052f2:	68ba      	ldr	r2, [r7, #8]
 80052f4:	4313      	orrs	r3, r2
 80052f6:	60bb      	str	r3, [r7, #8]
 80052f8:	687b      	ldr	r3, [r7, #4]
 80052fa:	681b      	ldr	r3, [r3, #0]
 80052fc:	68ba      	ldr	r2, [r7, #8]
 80052fe:	609a      	str	r2, [r3, #8]
 8005300:	687b      	ldr	r3, [r7, #4]
 8005302:	2201      	movs	r2, #1
 8005304:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8005308:	687b      	ldr	r3, [r7, #4]
 800530a:	2200      	movs	r2, #0
 800530c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8005310:	2300      	movs	r3, #0
 8005312:	4618      	mov	r0, r3
 8005314:	3714      	adds	r7, #20
 8005316:	46bd      	mov	sp, r7
 8005318:	bc80      	pop	{r7}
 800531a:	4770      	bx	lr
 800531c:	40000400 	.word	0x40000400
 8005320:	40000800 	.word	0x40000800
 8005324:	40010800 	.word	0x40010800

08005328 <SPI_CS_High>:
#define LOAD_0()      SPI_CS_High()
#define LOAD_1()      SPI_CS_Low()


 void SPI_CS_High()
{
 8005328:	b580      	push	{r7, lr}
 800532a:	af00      	add	r7, sp, #0

	HAL_GPIO_WritePin(SPI_CS_GPIO_Port, SPI_CS_Pin, GPIO_PIN_SET);
 800532c:	2201      	movs	r2, #1
 800532e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8005332:	4802      	ldr	r0, [pc, #8]	; (800533c <SPI_CS_High+0x14>)
 8005334:	f7fd fce5 	bl	8002d02 <HAL_GPIO_WritePin>
}
 8005338:	bf00      	nop
 800533a:	bd80      	pop	{r7, pc}
 800533c:	40020000 	.word	0x40020000

08005340 <SPI_CS_Low>:

 void SPI_CS_Low()
{
 8005340:	b580      	push	{r7, lr}
 8005342:	af00      	add	r7, sp, #0

	HAL_GPIO_WritePin(SPI_CS_GPIO_Port, SPI_CS_Pin, GPIO_PIN_RESET);
 8005344:	2200      	movs	r2, #0
 8005346:	f44f 7180 	mov.w	r1, #256	; 0x100
 800534a:	4802      	ldr	r0, [pc, #8]	; (8005354 <SPI_CS_Low+0x14>)
 800534c:	f7fd fcd9 	bl	8002d02 <HAL_GPIO_WritePin>
}
 8005350:	bf00      	nop
 8005352:	bd80      	pop	{r7, pc}
 8005354:	40020000 	.word	0x40020000

08005358 <MAX7219_Init>:
* Arguments  : none
* Returns    : none
*********************************************************************************************************
*/
void MAX7219_Init (void)
{
 8005358:	b580      	push	{r7, lr}
 800535a:	af00      	add	r7, sp, #0
  //DATA_DDR |= DATA_BIT;                               // configure "DATA" as output
  //CLK_DDR  |= CLK_BIT;                                // configure "CLK"  as output
  //LOAD_DDR |= LOAD_BIT;                               // configure "LOAD" as output

  MAX7219_Write(REG_SCAN_LIMIT, 7);                   // set up to scan all eight digits
 800535c:	2107      	movs	r1, #7
 800535e:	200b      	movs	r0, #11
 8005360:	f000 f896 	bl	8005490 <MAX7219_Write>
  MAX7219_Write(REG_DECODE, 0x00);                    // set to "no decode" for all digits
 8005364:	2100      	movs	r1, #0
 8005366:	2009      	movs	r0, #9
 8005368:	f000 f892 	bl	8005490 <MAX7219_Write>
  MAX7219_ShutdownStop();                             // select normal operation (i.e. not shutdown)
 800536c:	f000 f809 	bl	8005382 <MAX7219_ShutdownStop>
  MAX7219_DisplayTestStop();                          // select normal operation (i.e. not test mode)
 8005370:	f000 f80f 	bl	8005392 <MAX7219_DisplayTestStop>
  MAX7219_Clear();                                    // clear all digits
 8005374:	f000 f827 	bl	80053c6 <MAX7219_Clear>
  MAX7219_SetBrightness(INTENSITY_MAX);               // set to maximum intensity
 8005378:	200f      	movs	r0, #15
 800537a:	f000 f812 	bl	80053a2 <MAX7219_SetBrightness>
}
 800537e:	bf00      	nop
 8005380:	bd80      	pop	{r7, pc}

08005382 <MAX7219_ShutdownStop>:
* Arguments  : none
* Returns    : none
*********************************************************************************************************
*/
void MAX7219_ShutdownStop (void)
{
 8005382:	b580      	push	{r7, lr}
 8005384:	af00      	add	r7, sp, #0
  MAX7219_Write(REG_SHUTDOWN, 1);                     // put MAX7219 into "normal" mode
 8005386:	2101      	movs	r1, #1
 8005388:	200c      	movs	r0, #12
 800538a:	f000 f881 	bl	8005490 <MAX7219_Write>
}
 800538e:	bf00      	nop
 8005390:	bd80      	pop	{r7, pc}

08005392 <MAX7219_DisplayTestStop>:
* Arguments  : none
* Returns    : none
*********************************************************************************************************
*/
void MAX7219_DisplayTestStop (void)
{
 8005392:	b580      	push	{r7, lr}
 8005394:	af00      	add	r7, sp, #0
  MAX7219_Write(REG_DISPLAY_TEST, 0);                 // put MAX7219 into "normal" mode
 8005396:	2100      	movs	r1, #0
 8005398:	200f      	movs	r0, #15
 800539a:	f000 f879 	bl	8005490 <MAX7219_Write>
}
 800539e:	bf00      	nop
 80053a0:	bd80      	pop	{r7, pc}

080053a2 <MAX7219_SetBrightness>:
* Arguments  : brightness (0-15)
* Returns    : none
*********************************************************************************************************
*/
void MAX7219_SetBrightness (char brightness)
{
 80053a2:	b580      	push	{r7, lr}
 80053a4:	b082      	sub	sp, #8
 80053a6:	af00      	add	r7, sp, #0
 80053a8:	4603      	mov	r3, r0
 80053aa:	71fb      	strb	r3, [r7, #7]
  brightness &= 0x0f;                                 // mask off extra bits
 80053ac:	79fb      	ldrb	r3, [r7, #7]
 80053ae:	f003 030f 	and.w	r3, r3, #15
 80053b2:	71fb      	strb	r3, [r7, #7]
  MAX7219_Write(REG_INTENSITY, brightness);           // set brightness
 80053b4:	79fb      	ldrb	r3, [r7, #7]
 80053b6:	4619      	mov	r1, r3
 80053b8:	200a      	movs	r0, #10
 80053ba:	f000 f869 	bl	8005490 <MAX7219_Write>
}
 80053be:	bf00      	nop
 80053c0:	3708      	adds	r7, #8
 80053c2:	46bd      	mov	sp, r7
 80053c4:	bd80      	pop	{r7, pc}

080053c6 <MAX7219_Clear>:
* Arguments  : none
* Returns    : none
*********************************************************************************************************
*/
void MAX7219_Clear (void)
{
 80053c6:	b580      	push	{r7, lr}
 80053c8:	b082      	sub	sp, #8
 80053ca:	af00      	add	r7, sp, #0
  char i;
  for (i=0; i < 8; i++)
 80053cc:	2300      	movs	r3, #0
 80053ce:	71fb      	strb	r3, [r7, #7]
 80053d0:	e007      	b.n	80053e2 <MAX7219_Clear+0x1c>
    MAX7219_Write(i, 0x00);                           // turn all segments off
 80053d2:	79fb      	ldrb	r3, [r7, #7]
 80053d4:	2100      	movs	r1, #0
 80053d6:	4618      	mov	r0, r3
 80053d8:	f000 f85a 	bl	8005490 <MAX7219_Write>
  for (i=0; i < 8; i++)
 80053dc:	79fb      	ldrb	r3, [r7, #7]
 80053de:	3301      	adds	r3, #1
 80053e0:	71fb      	strb	r3, [r7, #7]
 80053e2:	79fb      	ldrb	r3, [r7, #7]
 80053e4:	2b07      	cmp	r3, #7
 80053e6:	d9f4      	bls.n	80053d2 <MAX7219_Clear+0xc>
}
 80053e8:	bf00      	nop
 80053ea:	bf00      	nop
 80053ec:	3708      	adds	r7, #8
 80053ee:	46bd      	mov	sp, r7
 80053f0:	bd80      	pop	{r7, pc}

080053f2 <MAX7219_DisplayChar>:
* Arguments  : digit = digit number (0-7)
*              character = character to display (0-9, A-Z)
* Returns    : none
*********************************************************************************************************
*/
void MAX7219_DisplayChar (char digit, char character, char dp) {
 80053f2:	b580      	push	{r7, lr}
 80053f4:	b082      	sub	sp, #8
 80053f6:	af00      	add	r7, sp, #0
 80053f8:	4603      	mov	r3, r0
 80053fa:	71fb      	strb	r3, [r7, #7]
 80053fc:	460b      	mov	r3, r1
 80053fe:	71bb      	strb	r3, [r7, #6]
 8005400:	4613      	mov	r3, r2
 8005402:	717b      	strb	r3, [r7, #5]
    if (dp) {
 8005404:	797b      	ldrb	r3, [r7, #5]
 8005406:	2b00      	cmp	r3, #0
 8005408:	d00d      	beq.n	8005426 <MAX7219_DisplayChar+0x34>
        MAX7219_Write(digit, MAX7219_LookupCode(character) | 0x80); // Active le bit 7 pour le point décimal
 800540a:	79bb      	ldrb	r3, [r7, #6]
 800540c:	4618      	mov	r0, r3
 800540e:	f000 f819 	bl	8005444 <MAX7219_LookupCode>
 8005412:	4603      	mov	r3, r0
 8005414:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8005418:	b2da      	uxtb	r2, r3
 800541a:	79fb      	ldrb	r3, [r7, #7]
 800541c:	4611      	mov	r1, r2
 800541e:	4618      	mov	r0, r3
 8005420:	f000 f836 	bl	8005490 <MAX7219_Write>
    } else {
        MAX7219_Write(digit, MAX7219_LookupCode(character)); // Pas de point décimal
    }
}
 8005424:	e00a      	b.n	800543c <MAX7219_DisplayChar+0x4a>
        MAX7219_Write(digit, MAX7219_LookupCode(character)); // Pas de point décimal
 8005426:	79bb      	ldrb	r3, [r7, #6]
 8005428:	4618      	mov	r0, r3
 800542a:	f000 f80b 	bl	8005444 <MAX7219_LookupCode>
 800542e:	4603      	mov	r3, r0
 8005430:	461a      	mov	r2, r3
 8005432:	79fb      	ldrb	r3, [r7, #7]
 8005434:	4611      	mov	r1, r2
 8005436:	4618      	mov	r0, r3
 8005438:	f000 f82a 	bl	8005490 <MAX7219_Write>
}
 800543c:	bf00      	nop
 800543e:	3708      	adds	r7, #8
 8005440:	46bd      	mov	sp, r7
 8005442:	bd80      	pop	{r7, pc}

08005444 <MAX7219_LookupCode>:
* Arguments  : character to display
* Returns    : segment code
*********************************************************************************************************
*/
static unsigned char MAX7219_LookupCode (char character)
{
 8005444:	b480      	push	{r7}
 8005446:	b085      	sub	sp, #20
 8005448:	af00      	add	r7, sp, #0
 800544a:	4603      	mov	r3, r0
 800544c:	71fb      	strb	r3, [r7, #7]
  char i;
  for (i = 0; MAX7219_Font[i].ascii; i++)             // scan font table for ascii code
 800544e:	2300      	movs	r3, #0
 8005450:	73fb      	strb	r3, [r7, #15]
 8005452:	e00f      	b.n	8005474 <MAX7219_LookupCode+0x30>
    if (character == MAX7219_Font[i].ascii)
 8005454:	7bfb      	ldrb	r3, [r7, #15]
 8005456:	4a0d      	ldr	r2, [pc, #52]	; (800548c <MAX7219_LookupCode+0x48>)
 8005458:	f812 3013 	ldrb.w	r3, [r2, r3, lsl #1]
 800545c:	79fa      	ldrb	r2, [r7, #7]
 800545e:	429a      	cmp	r2, r3
 8005460:	d105      	bne.n	800546e <MAX7219_LookupCode+0x2a>
      return MAX7219_Font[i].segs;                    // return segments code
 8005462:	7bfb      	ldrb	r3, [r7, #15]
 8005464:	4a09      	ldr	r2, [pc, #36]	; (800548c <MAX7219_LookupCode+0x48>)
 8005466:	005b      	lsls	r3, r3, #1
 8005468:	4413      	add	r3, r2
 800546a:	785b      	ldrb	r3, [r3, #1]
 800546c:	e009      	b.n	8005482 <MAX7219_LookupCode+0x3e>
  for (i = 0; MAX7219_Font[i].ascii; i++)             // scan font table for ascii code
 800546e:	7bfb      	ldrb	r3, [r7, #15]
 8005470:	3301      	adds	r3, #1
 8005472:	73fb      	strb	r3, [r7, #15]
 8005474:	7bfb      	ldrb	r3, [r7, #15]
 8005476:	4a05      	ldr	r2, [pc, #20]	; (800548c <MAX7219_LookupCode+0x48>)
 8005478:	f812 3013 	ldrb.w	r3, [r2, r3, lsl #1]
 800547c:	2b00      	cmp	r3, #0
 800547e:	d1e9      	bne.n	8005454 <MAX7219_LookupCode+0x10>
  return 0;                                           // code not found, return null (blank)
 8005480:	2300      	movs	r3, #0
}
 8005482:	4618      	mov	r0, r3
 8005484:	3714      	adds	r7, #20
 8005486:	46bd      	mov	sp, r7
 8005488:	bc80      	pop	{r7}
 800548a:	4770      	bx	lr
 800548c:	080065a0 	.word	0x080065a0

08005490 <MAX7219_Write>:
*              dataout = data to write to MAX7219
* Returns    : none
*********************************************************************************************************
*/
static void MAX7219_Write (unsigned char reg_number, unsigned char dataout)
{
 8005490:	b580      	push	{r7, lr}
 8005492:	b082      	sub	sp, #8
 8005494:	af00      	add	r7, sp, #0
 8005496:	4603      	mov	r3, r0
 8005498:	460a      	mov	r2, r1
 800549a:	71fb      	strb	r3, [r7, #7]
 800549c:	4613      	mov	r3, r2
 800549e:	71bb      	strb	r3, [r7, #6]
  LOAD_1();                                           // take LOAD high to begin
 80054a0:	f7ff ff4e 	bl	8005340 <SPI_CS_Low>
  MAX7219_SendByte(reg_number);                       // write register number to MAX7219
 80054a4:	79fb      	ldrb	r3, [r7, #7]
 80054a6:	4618      	mov	r0, r3
 80054a8:	f000 f80c 	bl	80054c4 <MAX7219_SendByte>
  MAX7219_SendByte(dataout);                          // write data to MAX7219
 80054ac:	79bb      	ldrb	r3, [r7, #6]
 80054ae:	4618      	mov	r0, r3
 80054b0:	f000 f808 	bl	80054c4 <MAX7219_SendByte>
  LOAD_0();                                           // take LOAD low to latch in data
 80054b4:	f7ff ff38 	bl	8005328 <SPI_CS_High>
  LOAD_1();                                           // take LOAD high to end
 80054b8:	f7ff ff42 	bl	8005340 <SPI_CS_Low>
}
 80054bc:	bf00      	nop
 80054be:	3708      	adds	r7, #8
 80054c0:	46bd      	mov	sp, r7
 80054c2:	bd80      	pop	{r7, pc}

080054c4 <MAX7219_SendByte>:
      DATA_0();                                       //  "0"
    CLK_1();                                          // bring CLK high
	}
}*/
static void MAX7219_SendByte (unsigned char dataout)
{
 80054c4:	b580      	push	{r7, lr}
 80054c6:	b082      	sub	sp, #8
 80054c8:	af00      	add	r7, sp, #0
 80054ca:	4603      	mov	r3, r0
 80054cc:	71fb      	strb	r3, [r7, #7]
	HAL_SPI_Transmit(&hspi1, &dataout, 1, 1000);
 80054ce:	1df9      	adds	r1, r7, #7
 80054d0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80054d4:	2201      	movs	r2, #1
 80054d6:	4803      	ldr	r0, [pc, #12]	; (80054e4 <MAX7219_SendByte+0x20>)
 80054d8:	f7fe fe62 	bl	80041a0 <HAL_SPI_Transmit>
}
 80054dc:	bf00      	nop
 80054de:	3708      	adds	r7, #8
 80054e0:	46bd      	mov	sp, r7
 80054e2:	bd80      	pop	{r7, pc}
 80054e4:	20000128 	.word	0x20000128

080054e8 <std>:
 80054e8:	2300      	movs	r3, #0
 80054ea:	b510      	push	{r4, lr}
 80054ec:	4604      	mov	r4, r0
 80054ee:	e9c0 3300 	strd	r3, r3, [r0]
 80054f2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80054f6:	6083      	str	r3, [r0, #8]
 80054f8:	8181      	strh	r1, [r0, #12]
 80054fa:	6643      	str	r3, [r0, #100]	; 0x64
 80054fc:	81c2      	strh	r2, [r0, #14]
 80054fe:	6183      	str	r3, [r0, #24]
 8005500:	4619      	mov	r1, r3
 8005502:	2208      	movs	r2, #8
 8005504:	305c      	adds	r0, #92	; 0x5c
 8005506:	f000 f9f7 	bl	80058f8 <memset>
 800550a:	4b0d      	ldr	r3, [pc, #52]	; (8005540 <std+0x58>)
 800550c:	6224      	str	r4, [r4, #32]
 800550e:	6263      	str	r3, [r4, #36]	; 0x24
 8005510:	4b0c      	ldr	r3, [pc, #48]	; (8005544 <std+0x5c>)
 8005512:	62a3      	str	r3, [r4, #40]	; 0x28
 8005514:	4b0c      	ldr	r3, [pc, #48]	; (8005548 <std+0x60>)
 8005516:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005518:	4b0c      	ldr	r3, [pc, #48]	; (800554c <std+0x64>)
 800551a:	6323      	str	r3, [r4, #48]	; 0x30
 800551c:	4b0c      	ldr	r3, [pc, #48]	; (8005550 <std+0x68>)
 800551e:	429c      	cmp	r4, r3
 8005520:	d006      	beq.n	8005530 <std+0x48>
 8005522:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8005526:	4294      	cmp	r4, r2
 8005528:	d002      	beq.n	8005530 <std+0x48>
 800552a:	33d0      	adds	r3, #208	; 0xd0
 800552c:	429c      	cmp	r4, r3
 800552e:	d105      	bne.n	800553c <std+0x54>
 8005530:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8005534:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005538:	f000 ba56 	b.w	80059e8 <__retarget_lock_init_recursive>
 800553c:	bd10      	pop	{r4, pc}
 800553e:	bf00      	nop
 8005540:	08005749 	.word	0x08005749
 8005544:	0800576b 	.word	0x0800576b
 8005548:	080057a3 	.word	0x080057a3
 800554c:	080057c7 	.word	0x080057c7
 8005550:	20000204 	.word	0x20000204

08005554 <stdio_exit_handler>:
 8005554:	4a02      	ldr	r2, [pc, #8]	; (8005560 <stdio_exit_handler+0xc>)
 8005556:	4903      	ldr	r1, [pc, #12]	; (8005564 <stdio_exit_handler+0x10>)
 8005558:	4803      	ldr	r0, [pc, #12]	; (8005568 <stdio_exit_handler+0x14>)
 800555a:	f000 b869 	b.w	8005630 <_fwalk_sglue>
 800555e:	bf00      	nop
 8005560:	2000003c 	.word	0x2000003c
 8005564:	08006289 	.word	0x08006289
 8005568:	20000048 	.word	0x20000048

0800556c <cleanup_stdio>:
 800556c:	6841      	ldr	r1, [r0, #4]
 800556e:	4b0c      	ldr	r3, [pc, #48]	; (80055a0 <cleanup_stdio+0x34>)
 8005570:	b510      	push	{r4, lr}
 8005572:	4299      	cmp	r1, r3
 8005574:	4604      	mov	r4, r0
 8005576:	d001      	beq.n	800557c <cleanup_stdio+0x10>
 8005578:	f000 fe86 	bl	8006288 <_fflush_r>
 800557c:	68a1      	ldr	r1, [r4, #8]
 800557e:	4b09      	ldr	r3, [pc, #36]	; (80055a4 <cleanup_stdio+0x38>)
 8005580:	4299      	cmp	r1, r3
 8005582:	d002      	beq.n	800558a <cleanup_stdio+0x1e>
 8005584:	4620      	mov	r0, r4
 8005586:	f000 fe7f 	bl	8006288 <_fflush_r>
 800558a:	68e1      	ldr	r1, [r4, #12]
 800558c:	4b06      	ldr	r3, [pc, #24]	; (80055a8 <cleanup_stdio+0x3c>)
 800558e:	4299      	cmp	r1, r3
 8005590:	d004      	beq.n	800559c <cleanup_stdio+0x30>
 8005592:	4620      	mov	r0, r4
 8005594:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005598:	f000 be76 	b.w	8006288 <_fflush_r>
 800559c:	bd10      	pop	{r4, pc}
 800559e:	bf00      	nop
 80055a0:	20000204 	.word	0x20000204
 80055a4:	2000026c 	.word	0x2000026c
 80055a8:	200002d4 	.word	0x200002d4

080055ac <global_stdio_init.part.0>:
 80055ac:	b510      	push	{r4, lr}
 80055ae:	4b0b      	ldr	r3, [pc, #44]	; (80055dc <global_stdio_init.part.0+0x30>)
 80055b0:	4c0b      	ldr	r4, [pc, #44]	; (80055e0 <global_stdio_init.part.0+0x34>)
 80055b2:	4a0c      	ldr	r2, [pc, #48]	; (80055e4 <global_stdio_init.part.0+0x38>)
 80055b4:	4620      	mov	r0, r4
 80055b6:	601a      	str	r2, [r3, #0]
 80055b8:	2104      	movs	r1, #4
 80055ba:	2200      	movs	r2, #0
 80055bc:	f7ff ff94 	bl	80054e8 <std>
 80055c0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80055c4:	2201      	movs	r2, #1
 80055c6:	2109      	movs	r1, #9
 80055c8:	f7ff ff8e 	bl	80054e8 <std>
 80055cc:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80055d0:	2202      	movs	r2, #2
 80055d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80055d6:	2112      	movs	r1, #18
 80055d8:	f7ff bf86 	b.w	80054e8 <std>
 80055dc:	2000033c 	.word	0x2000033c
 80055e0:	20000204 	.word	0x20000204
 80055e4:	08005555 	.word	0x08005555

080055e8 <__sfp_lock_acquire>:
 80055e8:	4801      	ldr	r0, [pc, #4]	; (80055f0 <__sfp_lock_acquire+0x8>)
 80055ea:	f000 b9fe 	b.w	80059ea <__retarget_lock_acquire_recursive>
 80055ee:	bf00      	nop
 80055f0:	20000345 	.word	0x20000345

080055f4 <__sfp_lock_release>:
 80055f4:	4801      	ldr	r0, [pc, #4]	; (80055fc <__sfp_lock_release+0x8>)
 80055f6:	f000 b9f9 	b.w	80059ec <__retarget_lock_release_recursive>
 80055fa:	bf00      	nop
 80055fc:	20000345 	.word	0x20000345

08005600 <__sinit>:
 8005600:	b510      	push	{r4, lr}
 8005602:	4604      	mov	r4, r0
 8005604:	f7ff fff0 	bl	80055e8 <__sfp_lock_acquire>
 8005608:	6a23      	ldr	r3, [r4, #32]
 800560a:	b11b      	cbz	r3, 8005614 <__sinit+0x14>
 800560c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005610:	f7ff bff0 	b.w	80055f4 <__sfp_lock_release>
 8005614:	4b04      	ldr	r3, [pc, #16]	; (8005628 <__sinit+0x28>)
 8005616:	6223      	str	r3, [r4, #32]
 8005618:	4b04      	ldr	r3, [pc, #16]	; (800562c <__sinit+0x2c>)
 800561a:	681b      	ldr	r3, [r3, #0]
 800561c:	2b00      	cmp	r3, #0
 800561e:	d1f5      	bne.n	800560c <__sinit+0xc>
 8005620:	f7ff ffc4 	bl	80055ac <global_stdio_init.part.0>
 8005624:	e7f2      	b.n	800560c <__sinit+0xc>
 8005626:	bf00      	nop
 8005628:	0800556d 	.word	0x0800556d
 800562c:	2000033c 	.word	0x2000033c

08005630 <_fwalk_sglue>:
 8005630:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005634:	4607      	mov	r7, r0
 8005636:	4688      	mov	r8, r1
 8005638:	4614      	mov	r4, r2
 800563a:	2600      	movs	r6, #0
 800563c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8005640:	f1b9 0901 	subs.w	r9, r9, #1
 8005644:	d505      	bpl.n	8005652 <_fwalk_sglue+0x22>
 8005646:	6824      	ldr	r4, [r4, #0]
 8005648:	2c00      	cmp	r4, #0
 800564a:	d1f7      	bne.n	800563c <_fwalk_sglue+0xc>
 800564c:	4630      	mov	r0, r6
 800564e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005652:	89ab      	ldrh	r3, [r5, #12]
 8005654:	2b01      	cmp	r3, #1
 8005656:	d907      	bls.n	8005668 <_fwalk_sglue+0x38>
 8005658:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800565c:	3301      	adds	r3, #1
 800565e:	d003      	beq.n	8005668 <_fwalk_sglue+0x38>
 8005660:	4629      	mov	r1, r5
 8005662:	4638      	mov	r0, r7
 8005664:	47c0      	blx	r8
 8005666:	4306      	orrs	r6, r0
 8005668:	3568      	adds	r5, #104	; 0x68
 800566a:	e7e9      	b.n	8005640 <_fwalk_sglue+0x10>

0800566c <iprintf>:
 800566c:	b40f      	push	{r0, r1, r2, r3}
 800566e:	b507      	push	{r0, r1, r2, lr}
 8005670:	4906      	ldr	r1, [pc, #24]	; (800568c <iprintf+0x20>)
 8005672:	ab04      	add	r3, sp, #16
 8005674:	6808      	ldr	r0, [r1, #0]
 8005676:	f853 2b04 	ldr.w	r2, [r3], #4
 800567a:	6881      	ldr	r1, [r0, #8]
 800567c:	9301      	str	r3, [sp, #4]
 800567e:	f000 fad3 	bl	8005c28 <_vfiprintf_r>
 8005682:	b003      	add	sp, #12
 8005684:	f85d eb04 	ldr.w	lr, [sp], #4
 8005688:	b004      	add	sp, #16
 800568a:	4770      	bx	lr
 800568c:	20000094 	.word	0x20000094

08005690 <_puts_r>:
 8005690:	6a03      	ldr	r3, [r0, #32]
 8005692:	b570      	push	{r4, r5, r6, lr}
 8005694:	4605      	mov	r5, r0
 8005696:	460e      	mov	r6, r1
 8005698:	6884      	ldr	r4, [r0, #8]
 800569a:	b90b      	cbnz	r3, 80056a0 <_puts_r+0x10>
 800569c:	f7ff ffb0 	bl	8005600 <__sinit>
 80056a0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80056a2:	07db      	lsls	r3, r3, #31
 80056a4:	d405      	bmi.n	80056b2 <_puts_r+0x22>
 80056a6:	89a3      	ldrh	r3, [r4, #12]
 80056a8:	0598      	lsls	r0, r3, #22
 80056aa:	d402      	bmi.n	80056b2 <_puts_r+0x22>
 80056ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80056ae:	f000 f99c 	bl	80059ea <__retarget_lock_acquire_recursive>
 80056b2:	89a3      	ldrh	r3, [r4, #12]
 80056b4:	0719      	lsls	r1, r3, #28
 80056b6:	d513      	bpl.n	80056e0 <_puts_r+0x50>
 80056b8:	6923      	ldr	r3, [r4, #16]
 80056ba:	b18b      	cbz	r3, 80056e0 <_puts_r+0x50>
 80056bc:	3e01      	subs	r6, #1
 80056be:	68a3      	ldr	r3, [r4, #8]
 80056c0:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80056c4:	3b01      	subs	r3, #1
 80056c6:	60a3      	str	r3, [r4, #8]
 80056c8:	b9e9      	cbnz	r1, 8005706 <_puts_r+0x76>
 80056ca:	2b00      	cmp	r3, #0
 80056cc:	da2e      	bge.n	800572c <_puts_r+0x9c>
 80056ce:	4622      	mov	r2, r4
 80056d0:	210a      	movs	r1, #10
 80056d2:	4628      	mov	r0, r5
 80056d4:	f000 f87b 	bl	80057ce <__swbuf_r>
 80056d8:	3001      	adds	r0, #1
 80056da:	d007      	beq.n	80056ec <_puts_r+0x5c>
 80056dc:	250a      	movs	r5, #10
 80056de:	e007      	b.n	80056f0 <_puts_r+0x60>
 80056e0:	4621      	mov	r1, r4
 80056e2:	4628      	mov	r0, r5
 80056e4:	f000 f8b0 	bl	8005848 <__swsetup_r>
 80056e8:	2800      	cmp	r0, #0
 80056ea:	d0e7      	beq.n	80056bc <_puts_r+0x2c>
 80056ec:	f04f 35ff 	mov.w	r5, #4294967295
 80056f0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80056f2:	07da      	lsls	r2, r3, #31
 80056f4:	d405      	bmi.n	8005702 <_puts_r+0x72>
 80056f6:	89a3      	ldrh	r3, [r4, #12]
 80056f8:	059b      	lsls	r3, r3, #22
 80056fa:	d402      	bmi.n	8005702 <_puts_r+0x72>
 80056fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80056fe:	f000 f975 	bl	80059ec <__retarget_lock_release_recursive>
 8005702:	4628      	mov	r0, r5
 8005704:	bd70      	pop	{r4, r5, r6, pc}
 8005706:	2b00      	cmp	r3, #0
 8005708:	da04      	bge.n	8005714 <_puts_r+0x84>
 800570a:	69a2      	ldr	r2, [r4, #24]
 800570c:	429a      	cmp	r2, r3
 800570e:	dc06      	bgt.n	800571e <_puts_r+0x8e>
 8005710:	290a      	cmp	r1, #10
 8005712:	d004      	beq.n	800571e <_puts_r+0x8e>
 8005714:	6823      	ldr	r3, [r4, #0]
 8005716:	1c5a      	adds	r2, r3, #1
 8005718:	6022      	str	r2, [r4, #0]
 800571a:	7019      	strb	r1, [r3, #0]
 800571c:	e7cf      	b.n	80056be <_puts_r+0x2e>
 800571e:	4622      	mov	r2, r4
 8005720:	4628      	mov	r0, r5
 8005722:	f000 f854 	bl	80057ce <__swbuf_r>
 8005726:	3001      	adds	r0, #1
 8005728:	d1c9      	bne.n	80056be <_puts_r+0x2e>
 800572a:	e7df      	b.n	80056ec <_puts_r+0x5c>
 800572c:	250a      	movs	r5, #10
 800572e:	6823      	ldr	r3, [r4, #0]
 8005730:	1c5a      	adds	r2, r3, #1
 8005732:	6022      	str	r2, [r4, #0]
 8005734:	701d      	strb	r5, [r3, #0]
 8005736:	e7db      	b.n	80056f0 <_puts_r+0x60>

08005738 <puts>:
 8005738:	4b02      	ldr	r3, [pc, #8]	; (8005744 <puts+0xc>)
 800573a:	4601      	mov	r1, r0
 800573c:	6818      	ldr	r0, [r3, #0]
 800573e:	f7ff bfa7 	b.w	8005690 <_puts_r>
 8005742:	bf00      	nop
 8005744:	20000094 	.word	0x20000094

08005748 <__sread>:
 8005748:	b510      	push	{r4, lr}
 800574a:	460c      	mov	r4, r1
 800574c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005750:	f000 f8fc 	bl	800594c <_read_r>
 8005754:	2800      	cmp	r0, #0
 8005756:	bfab      	itete	ge
 8005758:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800575a:	89a3      	ldrhlt	r3, [r4, #12]
 800575c:	181b      	addge	r3, r3, r0
 800575e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005762:	bfac      	ite	ge
 8005764:	6563      	strge	r3, [r4, #84]	; 0x54
 8005766:	81a3      	strhlt	r3, [r4, #12]
 8005768:	bd10      	pop	{r4, pc}

0800576a <__swrite>:
 800576a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800576e:	461f      	mov	r7, r3
 8005770:	898b      	ldrh	r3, [r1, #12]
 8005772:	4605      	mov	r5, r0
 8005774:	05db      	lsls	r3, r3, #23
 8005776:	460c      	mov	r4, r1
 8005778:	4616      	mov	r6, r2
 800577a:	d505      	bpl.n	8005788 <__swrite+0x1e>
 800577c:	2302      	movs	r3, #2
 800577e:	2200      	movs	r2, #0
 8005780:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005784:	f000 f8d0 	bl	8005928 <_lseek_r>
 8005788:	89a3      	ldrh	r3, [r4, #12]
 800578a:	4632      	mov	r2, r6
 800578c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005790:	81a3      	strh	r3, [r4, #12]
 8005792:	4628      	mov	r0, r5
 8005794:	463b      	mov	r3, r7
 8005796:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800579a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800579e:	f000 b8e7 	b.w	8005970 <_write_r>

080057a2 <__sseek>:
 80057a2:	b510      	push	{r4, lr}
 80057a4:	460c      	mov	r4, r1
 80057a6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80057aa:	f000 f8bd 	bl	8005928 <_lseek_r>
 80057ae:	1c43      	adds	r3, r0, #1
 80057b0:	89a3      	ldrh	r3, [r4, #12]
 80057b2:	bf15      	itete	ne
 80057b4:	6560      	strne	r0, [r4, #84]	; 0x54
 80057b6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80057ba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80057be:	81a3      	strheq	r3, [r4, #12]
 80057c0:	bf18      	it	ne
 80057c2:	81a3      	strhne	r3, [r4, #12]
 80057c4:	bd10      	pop	{r4, pc}

080057c6 <__sclose>:
 80057c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80057ca:	f000 b89d 	b.w	8005908 <_close_r>

080057ce <__swbuf_r>:
 80057ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80057d0:	460e      	mov	r6, r1
 80057d2:	4614      	mov	r4, r2
 80057d4:	4605      	mov	r5, r0
 80057d6:	b118      	cbz	r0, 80057e0 <__swbuf_r+0x12>
 80057d8:	6a03      	ldr	r3, [r0, #32]
 80057da:	b90b      	cbnz	r3, 80057e0 <__swbuf_r+0x12>
 80057dc:	f7ff ff10 	bl	8005600 <__sinit>
 80057e0:	69a3      	ldr	r3, [r4, #24]
 80057e2:	60a3      	str	r3, [r4, #8]
 80057e4:	89a3      	ldrh	r3, [r4, #12]
 80057e6:	071a      	lsls	r2, r3, #28
 80057e8:	d525      	bpl.n	8005836 <__swbuf_r+0x68>
 80057ea:	6923      	ldr	r3, [r4, #16]
 80057ec:	b31b      	cbz	r3, 8005836 <__swbuf_r+0x68>
 80057ee:	6823      	ldr	r3, [r4, #0]
 80057f0:	6922      	ldr	r2, [r4, #16]
 80057f2:	b2f6      	uxtb	r6, r6
 80057f4:	1a98      	subs	r0, r3, r2
 80057f6:	6963      	ldr	r3, [r4, #20]
 80057f8:	4637      	mov	r7, r6
 80057fa:	4283      	cmp	r3, r0
 80057fc:	dc04      	bgt.n	8005808 <__swbuf_r+0x3a>
 80057fe:	4621      	mov	r1, r4
 8005800:	4628      	mov	r0, r5
 8005802:	f000 fd41 	bl	8006288 <_fflush_r>
 8005806:	b9e0      	cbnz	r0, 8005842 <__swbuf_r+0x74>
 8005808:	68a3      	ldr	r3, [r4, #8]
 800580a:	3b01      	subs	r3, #1
 800580c:	60a3      	str	r3, [r4, #8]
 800580e:	6823      	ldr	r3, [r4, #0]
 8005810:	1c5a      	adds	r2, r3, #1
 8005812:	6022      	str	r2, [r4, #0]
 8005814:	701e      	strb	r6, [r3, #0]
 8005816:	6962      	ldr	r2, [r4, #20]
 8005818:	1c43      	adds	r3, r0, #1
 800581a:	429a      	cmp	r2, r3
 800581c:	d004      	beq.n	8005828 <__swbuf_r+0x5a>
 800581e:	89a3      	ldrh	r3, [r4, #12]
 8005820:	07db      	lsls	r3, r3, #31
 8005822:	d506      	bpl.n	8005832 <__swbuf_r+0x64>
 8005824:	2e0a      	cmp	r6, #10
 8005826:	d104      	bne.n	8005832 <__swbuf_r+0x64>
 8005828:	4621      	mov	r1, r4
 800582a:	4628      	mov	r0, r5
 800582c:	f000 fd2c 	bl	8006288 <_fflush_r>
 8005830:	b938      	cbnz	r0, 8005842 <__swbuf_r+0x74>
 8005832:	4638      	mov	r0, r7
 8005834:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005836:	4621      	mov	r1, r4
 8005838:	4628      	mov	r0, r5
 800583a:	f000 f805 	bl	8005848 <__swsetup_r>
 800583e:	2800      	cmp	r0, #0
 8005840:	d0d5      	beq.n	80057ee <__swbuf_r+0x20>
 8005842:	f04f 37ff 	mov.w	r7, #4294967295
 8005846:	e7f4      	b.n	8005832 <__swbuf_r+0x64>

08005848 <__swsetup_r>:
 8005848:	b538      	push	{r3, r4, r5, lr}
 800584a:	4b2a      	ldr	r3, [pc, #168]	; (80058f4 <__swsetup_r+0xac>)
 800584c:	4605      	mov	r5, r0
 800584e:	6818      	ldr	r0, [r3, #0]
 8005850:	460c      	mov	r4, r1
 8005852:	b118      	cbz	r0, 800585c <__swsetup_r+0x14>
 8005854:	6a03      	ldr	r3, [r0, #32]
 8005856:	b90b      	cbnz	r3, 800585c <__swsetup_r+0x14>
 8005858:	f7ff fed2 	bl	8005600 <__sinit>
 800585c:	89a3      	ldrh	r3, [r4, #12]
 800585e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005862:	0718      	lsls	r0, r3, #28
 8005864:	d422      	bmi.n	80058ac <__swsetup_r+0x64>
 8005866:	06d9      	lsls	r1, r3, #27
 8005868:	d407      	bmi.n	800587a <__swsetup_r+0x32>
 800586a:	2309      	movs	r3, #9
 800586c:	602b      	str	r3, [r5, #0]
 800586e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8005872:	f04f 30ff 	mov.w	r0, #4294967295
 8005876:	81a3      	strh	r3, [r4, #12]
 8005878:	e034      	b.n	80058e4 <__swsetup_r+0x9c>
 800587a:	0758      	lsls	r0, r3, #29
 800587c:	d512      	bpl.n	80058a4 <__swsetup_r+0x5c>
 800587e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005880:	b141      	cbz	r1, 8005894 <__swsetup_r+0x4c>
 8005882:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005886:	4299      	cmp	r1, r3
 8005888:	d002      	beq.n	8005890 <__swsetup_r+0x48>
 800588a:	4628      	mov	r0, r5
 800588c:	f000 f8b0 	bl	80059f0 <_free_r>
 8005890:	2300      	movs	r3, #0
 8005892:	6363      	str	r3, [r4, #52]	; 0x34
 8005894:	89a3      	ldrh	r3, [r4, #12]
 8005896:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800589a:	81a3      	strh	r3, [r4, #12]
 800589c:	2300      	movs	r3, #0
 800589e:	6063      	str	r3, [r4, #4]
 80058a0:	6923      	ldr	r3, [r4, #16]
 80058a2:	6023      	str	r3, [r4, #0]
 80058a4:	89a3      	ldrh	r3, [r4, #12]
 80058a6:	f043 0308 	orr.w	r3, r3, #8
 80058aa:	81a3      	strh	r3, [r4, #12]
 80058ac:	6923      	ldr	r3, [r4, #16]
 80058ae:	b94b      	cbnz	r3, 80058c4 <__swsetup_r+0x7c>
 80058b0:	89a3      	ldrh	r3, [r4, #12]
 80058b2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80058b6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80058ba:	d003      	beq.n	80058c4 <__swsetup_r+0x7c>
 80058bc:	4621      	mov	r1, r4
 80058be:	4628      	mov	r0, r5
 80058c0:	f000 fd2f 	bl	8006322 <__smakebuf_r>
 80058c4:	89a0      	ldrh	r0, [r4, #12]
 80058c6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80058ca:	f010 0301 	ands.w	r3, r0, #1
 80058ce:	d00a      	beq.n	80058e6 <__swsetup_r+0x9e>
 80058d0:	2300      	movs	r3, #0
 80058d2:	60a3      	str	r3, [r4, #8]
 80058d4:	6963      	ldr	r3, [r4, #20]
 80058d6:	425b      	negs	r3, r3
 80058d8:	61a3      	str	r3, [r4, #24]
 80058da:	6923      	ldr	r3, [r4, #16]
 80058dc:	b943      	cbnz	r3, 80058f0 <__swsetup_r+0xa8>
 80058de:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80058e2:	d1c4      	bne.n	800586e <__swsetup_r+0x26>
 80058e4:	bd38      	pop	{r3, r4, r5, pc}
 80058e6:	0781      	lsls	r1, r0, #30
 80058e8:	bf58      	it	pl
 80058ea:	6963      	ldrpl	r3, [r4, #20]
 80058ec:	60a3      	str	r3, [r4, #8]
 80058ee:	e7f4      	b.n	80058da <__swsetup_r+0x92>
 80058f0:	2000      	movs	r0, #0
 80058f2:	e7f7      	b.n	80058e4 <__swsetup_r+0x9c>
 80058f4:	20000094 	.word	0x20000094

080058f8 <memset>:
 80058f8:	4603      	mov	r3, r0
 80058fa:	4402      	add	r2, r0
 80058fc:	4293      	cmp	r3, r2
 80058fe:	d100      	bne.n	8005902 <memset+0xa>
 8005900:	4770      	bx	lr
 8005902:	f803 1b01 	strb.w	r1, [r3], #1
 8005906:	e7f9      	b.n	80058fc <memset+0x4>

08005908 <_close_r>:
 8005908:	b538      	push	{r3, r4, r5, lr}
 800590a:	2300      	movs	r3, #0
 800590c:	4d05      	ldr	r5, [pc, #20]	; (8005924 <_close_r+0x1c>)
 800590e:	4604      	mov	r4, r0
 8005910:	4608      	mov	r0, r1
 8005912:	602b      	str	r3, [r5, #0]
 8005914:	f7fc f939 	bl	8001b8a <_close>
 8005918:	1c43      	adds	r3, r0, #1
 800591a:	d102      	bne.n	8005922 <_close_r+0x1a>
 800591c:	682b      	ldr	r3, [r5, #0]
 800591e:	b103      	cbz	r3, 8005922 <_close_r+0x1a>
 8005920:	6023      	str	r3, [r4, #0]
 8005922:	bd38      	pop	{r3, r4, r5, pc}
 8005924:	20000340 	.word	0x20000340

08005928 <_lseek_r>:
 8005928:	b538      	push	{r3, r4, r5, lr}
 800592a:	4604      	mov	r4, r0
 800592c:	4608      	mov	r0, r1
 800592e:	4611      	mov	r1, r2
 8005930:	2200      	movs	r2, #0
 8005932:	4d05      	ldr	r5, [pc, #20]	; (8005948 <_lseek_r+0x20>)
 8005934:	602a      	str	r2, [r5, #0]
 8005936:	461a      	mov	r2, r3
 8005938:	f7fc f94b 	bl	8001bd2 <_lseek>
 800593c:	1c43      	adds	r3, r0, #1
 800593e:	d102      	bne.n	8005946 <_lseek_r+0x1e>
 8005940:	682b      	ldr	r3, [r5, #0]
 8005942:	b103      	cbz	r3, 8005946 <_lseek_r+0x1e>
 8005944:	6023      	str	r3, [r4, #0]
 8005946:	bd38      	pop	{r3, r4, r5, pc}
 8005948:	20000340 	.word	0x20000340

0800594c <_read_r>:
 800594c:	b538      	push	{r3, r4, r5, lr}
 800594e:	4604      	mov	r4, r0
 8005950:	4608      	mov	r0, r1
 8005952:	4611      	mov	r1, r2
 8005954:	2200      	movs	r2, #0
 8005956:	4d05      	ldr	r5, [pc, #20]	; (800596c <_read_r+0x20>)
 8005958:	602a      	str	r2, [r5, #0]
 800595a:	461a      	mov	r2, r3
 800595c:	f7fc f8f8 	bl	8001b50 <_read>
 8005960:	1c43      	adds	r3, r0, #1
 8005962:	d102      	bne.n	800596a <_read_r+0x1e>
 8005964:	682b      	ldr	r3, [r5, #0]
 8005966:	b103      	cbz	r3, 800596a <_read_r+0x1e>
 8005968:	6023      	str	r3, [r4, #0]
 800596a:	bd38      	pop	{r3, r4, r5, pc}
 800596c:	20000340 	.word	0x20000340

08005970 <_write_r>:
 8005970:	b538      	push	{r3, r4, r5, lr}
 8005972:	4604      	mov	r4, r0
 8005974:	4608      	mov	r0, r1
 8005976:	4611      	mov	r1, r2
 8005978:	2200      	movs	r2, #0
 800597a:	4d05      	ldr	r5, [pc, #20]	; (8005990 <_write_r+0x20>)
 800597c:	602a      	str	r2, [r5, #0]
 800597e:	461a      	mov	r2, r3
 8005980:	f7fb f82e 	bl	80009e0 <_write>
 8005984:	1c43      	adds	r3, r0, #1
 8005986:	d102      	bne.n	800598e <_write_r+0x1e>
 8005988:	682b      	ldr	r3, [r5, #0]
 800598a:	b103      	cbz	r3, 800598e <_write_r+0x1e>
 800598c:	6023      	str	r3, [r4, #0]
 800598e:	bd38      	pop	{r3, r4, r5, pc}
 8005990:	20000340 	.word	0x20000340

08005994 <__errno>:
 8005994:	4b01      	ldr	r3, [pc, #4]	; (800599c <__errno+0x8>)
 8005996:	6818      	ldr	r0, [r3, #0]
 8005998:	4770      	bx	lr
 800599a:	bf00      	nop
 800599c:	20000094 	.word	0x20000094

080059a0 <__libc_init_array>:
 80059a0:	b570      	push	{r4, r5, r6, lr}
 80059a2:	2600      	movs	r6, #0
 80059a4:	4d0c      	ldr	r5, [pc, #48]	; (80059d8 <__libc_init_array+0x38>)
 80059a6:	4c0d      	ldr	r4, [pc, #52]	; (80059dc <__libc_init_array+0x3c>)
 80059a8:	1b64      	subs	r4, r4, r5
 80059aa:	10a4      	asrs	r4, r4, #2
 80059ac:	42a6      	cmp	r6, r4
 80059ae:	d109      	bne.n	80059c4 <__libc_init_array+0x24>
 80059b0:	f000 fd34 	bl	800641c <_init>
 80059b4:	2600      	movs	r6, #0
 80059b6:	4d0a      	ldr	r5, [pc, #40]	; (80059e0 <__libc_init_array+0x40>)
 80059b8:	4c0a      	ldr	r4, [pc, #40]	; (80059e4 <__libc_init_array+0x44>)
 80059ba:	1b64      	subs	r4, r4, r5
 80059bc:	10a4      	asrs	r4, r4, #2
 80059be:	42a6      	cmp	r6, r4
 80059c0:	d105      	bne.n	80059ce <__libc_init_array+0x2e>
 80059c2:	bd70      	pop	{r4, r5, r6, pc}
 80059c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80059c8:	4798      	blx	r3
 80059ca:	3601      	adds	r6, #1
 80059cc:	e7ee      	b.n	80059ac <__libc_init_array+0xc>
 80059ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80059d2:	4798      	blx	r3
 80059d4:	3601      	adds	r6, #1
 80059d6:	e7f2      	b.n	80059be <__libc_init_array+0x1e>
 80059d8:	08006618 	.word	0x08006618
 80059dc:	08006618 	.word	0x08006618
 80059e0:	08006618 	.word	0x08006618
 80059e4:	0800661c 	.word	0x0800661c

080059e8 <__retarget_lock_init_recursive>:
 80059e8:	4770      	bx	lr

080059ea <__retarget_lock_acquire_recursive>:
 80059ea:	4770      	bx	lr

080059ec <__retarget_lock_release_recursive>:
 80059ec:	4770      	bx	lr
	...

080059f0 <_free_r>:
 80059f0:	b538      	push	{r3, r4, r5, lr}
 80059f2:	4605      	mov	r5, r0
 80059f4:	2900      	cmp	r1, #0
 80059f6:	d040      	beq.n	8005a7a <_free_r+0x8a>
 80059f8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80059fc:	1f0c      	subs	r4, r1, #4
 80059fe:	2b00      	cmp	r3, #0
 8005a00:	bfb8      	it	lt
 8005a02:	18e4      	addlt	r4, r4, r3
 8005a04:	f000 f8dc 	bl	8005bc0 <__malloc_lock>
 8005a08:	4a1c      	ldr	r2, [pc, #112]	; (8005a7c <_free_r+0x8c>)
 8005a0a:	6813      	ldr	r3, [r2, #0]
 8005a0c:	b933      	cbnz	r3, 8005a1c <_free_r+0x2c>
 8005a0e:	6063      	str	r3, [r4, #4]
 8005a10:	6014      	str	r4, [r2, #0]
 8005a12:	4628      	mov	r0, r5
 8005a14:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005a18:	f000 b8d8 	b.w	8005bcc <__malloc_unlock>
 8005a1c:	42a3      	cmp	r3, r4
 8005a1e:	d908      	bls.n	8005a32 <_free_r+0x42>
 8005a20:	6820      	ldr	r0, [r4, #0]
 8005a22:	1821      	adds	r1, r4, r0
 8005a24:	428b      	cmp	r3, r1
 8005a26:	bf01      	itttt	eq
 8005a28:	6819      	ldreq	r1, [r3, #0]
 8005a2a:	685b      	ldreq	r3, [r3, #4]
 8005a2c:	1809      	addeq	r1, r1, r0
 8005a2e:	6021      	streq	r1, [r4, #0]
 8005a30:	e7ed      	b.n	8005a0e <_free_r+0x1e>
 8005a32:	461a      	mov	r2, r3
 8005a34:	685b      	ldr	r3, [r3, #4]
 8005a36:	b10b      	cbz	r3, 8005a3c <_free_r+0x4c>
 8005a38:	42a3      	cmp	r3, r4
 8005a3a:	d9fa      	bls.n	8005a32 <_free_r+0x42>
 8005a3c:	6811      	ldr	r1, [r2, #0]
 8005a3e:	1850      	adds	r0, r2, r1
 8005a40:	42a0      	cmp	r0, r4
 8005a42:	d10b      	bne.n	8005a5c <_free_r+0x6c>
 8005a44:	6820      	ldr	r0, [r4, #0]
 8005a46:	4401      	add	r1, r0
 8005a48:	1850      	adds	r0, r2, r1
 8005a4a:	4283      	cmp	r3, r0
 8005a4c:	6011      	str	r1, [r2, #0]
 8005a4e:	d1e0      	bne.n	8005a12 <_free_r+0x22>
 8005a50:	6818      	ldr	r0, [r3, #0]
 8005a52:	685b      	ldr	r3, [r3, #4]
 8005a54:	4408      	add	r0, r1
 8005a56:	6010      	str	r0, [r2, #0]
 8005a58:	6053      	str	r3, [r2, #4]
 8005a5a:	e7da      	b.n	8005a12 <_free_r+0x22>
 8005a5c:	d902      	bls.n	8005a64 <_free_r+0x74>
 8005a5e:	230c      	movs	r3, #12
 8005a60:	602b      	str	r3, [r5, #0]
 8005a62:	e7d6      	b.n	8005a12 <_free_r+0x22>
 8005a64:	6820      	ldr	r0, [r4, #0]
 8005a66:	1821      	adds	r1, r4, r0
 8005a68:	428b      	cmp	r3, r1
 8005a6a:	bf01      	itttt	eq
 8005a6c:	6819      	ldreq	r1, [r3, #0]
 8005a6e:	685b      	ldreq	r3, [r3, #4]
 8005a70:	1809      	addeq	r1, r1, r0
 8005a72:	6021      	streq	r1, [r4, #0]
 8005a74:	6063      	str	r3, [r4, #4]
 8005a76:	6054      	str	r4, [r2, #4]
 8005a78:	e7cb      	b.n	8005a12 <_free_r+0x22>
 8005a7a:	bd38      	pop	{r3, r4, r5, pc}
 8005a7c:	20000348 	.word	0x20000348

08005a80 <sbrk_aligned>:
 8005a80:	b570      	push	{r4, r5, r6, lr}
 8005a82:	4e0e      	ldr	r6, [pc, #56]	; (8005abc <sbrk_aligned+0x3c>)
 8005a84:	460c      	mov	r4, r1
 8005a86:	6831      	ldr	r1, [r6, #0]
 8005a88:	4605      	mov	r5, r0
 8005a8a:	b911      	cbnz	r1, 8005a92 <sbrk_aligned+0x12>
 8005a8c:	f000 fca8 	bl	80063e0 <_sbrk_r>
 8005a90:	6030      	str	r0, [r6, #0]
 8005a92:	4621      	mov	r1, r4
 8005a94:	4628      	mov	r0, r5
 8005a96:	f000 fca3 	bl	80063e0 <_sbrk_r>
 8005a9a:	1c43      	adds	r3, r0, #1
 8005a9c:	d00a      	beq.n	8005ab4 <sbrk_aligned+0x34>
 8005a9e:	1cc4      	adds	r4, r0, #3
 8005aa0:	f024 0403 	bic.w	r4, r4, #3
 8005aa4:	42a0      	cmp	r0, r4
 8005aa6:	d007      	beq.n	8005ab8 <sbrk_aligned+0x38>
 8005aa8:	1a21      	subs	r1, r4, r0
 8005aaa:	4628      	mov	r0, r5
 8005aac:	f000 fc98 	bl	80063e0 <_sbrk_r>
 8005ab0:	3001      	adds	r0, #1
 8005ab2:	d101      	bne.n	8005ab8 <sbrk_aligned+0x38>
 8005ab4:	f04f 34ff 	mov.w	r4, #4294967295
 8005ab8:	4620      	mov	r0, r4
 8005aba:	bd70      	pop	{r4, r5, r6, pc}
 8005abc:	2000034c 	.word	0x2000034c

08005ac0 <_malloc_r>:
 8005ac0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005ac4:	1ccd      	adds	r5, r1, #3
 8005ac6:	f025 0503 	bic.w	r5, r5, #3
 8005aca:	3508      	adds	r5, #8
 8005acc:	2d0c      	cmp	r5, #12
 8005ace:	bf38      	it	cc
 8005ad0:	250c      	movcc	r5, #12
 8005ad2:	2d00      	cmp	r5, #0
 8005ad4:	4607      	mov	r7, r0
 8005ad6:	db01      	blt.n	8005adc <_malloc_r+0x1c>
 8005ad8:	42a9      	cmp	r1, r5
 8005ada:	d905      	bls.n	8005ae8 <_malloc_r+0x28>
 8005adc:	230c      	movs	r3, #12
 8005ade:	2600      	movs	r6, #0
 8005ae0:	603b      	str	r3, [r7, #0]
 8005ae2:	4630      	mov	r0, r6
 8005ae4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005ae8:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8005bbc <_malloc_r+0xfc>
 8005aec:	f000 f868 	bl	8005bc0 <__malloc_lock>
 8005af0:	f8d8 3000 	ldr.w	r3, [r8]
 8005af4:	461c      	mov	r4, r3
 8005af6:	bb5c      	cbnz	r4, 8005b50 <_malloc_r+0x90>
 8005af8:	4629      	mov	r1, r5
 8005afa:	4638      	mov	r0, r7
 8005afc:	f7ff ffc0 	bl	8005a80 <sbrk_aligned>
 8005b00:	1c43      	adds	r3, r0, #1
 8005b02:	4604      	mov	r4, r0
 8005b04:	d155      	bne.n	8005bb2 <_malloc_r+0xf2>
 8005b06:	f8d8 4000 	ldr.w	r4, [r8]
 8005b0a:	4626      	mov	r6, r4
 8005b0c:	2e00      	cmp	r6, #0
 8005b0e:	d145      	bne.n	8005b9c <_malloc_r+0xdc>
 8005b10:	2c00      	cmp	r4, #0
 8005b12:	d048      	beq.n	8005ba6 <_malloc_r+0xe6>
 8005b14:	6823      	ldr	r3, [r4, #0]
 8005b16:	4631      	mov	r1, r6
 8005b18:	4638      	mov	r0, r7
 8005b1a:	eb04 0903 	add.w	r9, r4, r3
 8005b1e:	f000 fc5f 	bl	80063e0 <_sbrk_r>
 8005b22:	4581      	cmp	r9, r0
 8005b24:	d13f      	bne.n	8005ba6 <_malloc_r+0xe6>
 8005b26:	6821      	ldr	r1, [r4, #0]
 8005b28:	4638      	mov	r0, r7
 8005b2a:	1a6d      	subs	r5, r5, r1
 8005b2c:	4629      	mov	r1, r5
 8005b2e:	f7ff ffa7 	bl	8005a80 <sbrk_aligned>
 8005b32:	3001      	adds	r0, #1
 8005b34:	d037      	beq.n	8005ba6 <_malloc_r+0xe6>
 8005b36:	6823      	ldr	r3, [r4, #0]
 8005b38:	442b      	add	r3, r5
 8005b3a:	6023      	str	r3, [r4, #0]
 8005b3c:	f8d8 3000 	ldr.w	r3, [r8]
 8005b40:	2b00      	cmp	r3, #0
 8005b42:	d038      	beq.n	8005bb6 <_malloc_r+0xf6>
 8005b44:	685a      	ldr	r2, [r3, #4]
 8005b46:	42a2      	cmp	r2, r4
 8005b48:	d12b      	bne.n	8005ba2 <_malloc_r+0xe2>
 8005b4a:	2200      	movs	r2, #0
 8005b4c:	605a      	str	r2, [r3, #4]
 8005b4e:	e00f      	b.n	8005b70 <_malloc_r+0xb0>
 8005b50:	6822      	ldr	r2, [r4, #0]
 8005b52:	1b52      	subs	r2, r2, r5
 8005b54:	d41f      	bmi.n	8005b96 <_malloc_r+0xd6>
 8005b56:	2a0b      	cmp	r2, #11
 8005b58:	d917      	bls.n	8005b8a <_malloc_r+0xca>
 8005b5a:	1961      	adds	r1, r4, r5
 8005b5c:	42a3      	cmp	r3, r4
 8005b5e:	6025      	str	r5, [r4, #0]
 8005b60:	bf18      	it	ne
 8005b62:	6059      	strne	r1, [r3, #4]
 8005b64:	6863      	ldr	r3, [r4, #4]
 8005b66:	bf08      	it	eq
 8005b68:	f8c8 1000 	streq.w	r1, [r8]
 8005b6c:	5162      	str	r2, [r4, r5]
 8005b6e:	604b      	str	r3, [r1, #4]
 8005b70:	4638      	mov	r0, r7
 8005b72:	f104 060b 	add.w	r6, r4, #11
 8005b76:	f000 f829 	bl	8005bcc <__malloc_unlock>
 8005b7a:	f026 0607 	bic.w	r6, r6, #7
 8005b7e:	1d23      	adds	r3, r4, #4
 8005b80:	1af2      	subs	r2, r6, r3
 8005b82:	d0ae      	beq.n	8005ae2 <_malloc_r+0x22>
 8005b84:	1b9b      	subs	r3, r3, r6
 8005b86:	50a3      	str	r3, [r4, r2]
 8005b88:	e7ab      	b.n	8005ae2 <_malloc_r+0x22>
 8005b8a:	42a3      	cmp	r3, r4
 8005b8c:	6862      	ldr	r2, [r4, #4]
 8005b8e:	d1dd      	bne.n	8005b4c <_malloc_r+0x8c>
 8005b90:	f8c8 2000 	str.w	r2, [r8]
 8005b94:	e7ec      	b.n	8005b70 <_malloc_r+0xb0>
 8005b96:	4623      	mov	r3, r4
 8005b98:	6864      	ldr	r4, [r4, #4]
 8005b9a:	e7ac      	b.n	8005af6 <_malloc_r+0x36>
 8005b9c:	4634      	mov	r4, r6
 8005b9e:	6876      	ldr	r6, [r6, #4]
 8005ba0:	e7b4      	b.n	8005b0c <_malloc_r+0x4c>
 8005ba2:	4613      	mov	r3, r2
 8005ba4:	e7cc      	b.n	8005b40 <_malloc_r+0x80>
 8005ba6:	230c      	movs	r3, #12
 8005ba8:	4638      	mov	r0, r7
 8005baa:	603b      	str	r3, [r7, #0]
 8005bac:	f000 f80e 	bl	8005bcc <__malloc_unlock>
 8005bb0:	e797      	b.n	8005ae2 <_malloc_r+0x22>
 8005bb2:	6025      	str	r5, [r4, #0]
 8005bb4:	e7dc      	b.n	8005b70 <_malloc_r+0xb0>
 8005bb6:	605b      	str	r3, [r3, #4]
 8005bb8:	deff      	udf	#255	; 0xff
 8005bba:	bf00      	nop
 8005bbc:	20000348 	.word	0x20000348

08005bc0 <__malloc_lock>:
 8005bc0:	4801      	ldr	r0, [pc, #4]	; (8005bc8 <__malloc_lock+0x8>)
 8005bc2:	f7ff bf12 	b.w	80059ea <__retarget_lock_acquire_recursive>
 8005bc6:	bf00      	nop
 8005bc8:	20000344 	.word	0x20000344

08005bcc <__malloc_unlock>:
 8005bcc:	4801      	ldr	r0, [pc, #4]	; (8005bd4 <__malloc_unlock+0x8>)
 8005bce:	f7ff bf0d 	b.w	80059ec <__retarget_lock_release_recursive>
 8005bd2:	bf00      	nop
 8005bd4:	20000344 	.word	0x20000344

08005bd8 <__sfputc_r>:
 8005bd8:	6893      	ldr	r3, [r2, #8]
 8005bda:	b410      	push	{r4}
 8005bdc:	3b01      	subs	r3, #1
 8005bde:	2b00      	cmp	r3, #0
 8005be0:	6093      	str	r3, [r2, #8]
 8005be2:	da07      	bge.n	8005bf4 <__sfputc_r+0x1c>
 8005be4:	6994      	ldr	r4, [r2, #24]
 8005be6:	42a3      	cmp	r3, r4
 8005be8:	db01      	blt.n	8005bee <__sfputc_r+0x16>
 8005bea:	290a      	cmp	r1, #10
 8005bec:	d102      	bne.n	8005bf4 <__sfputc_r+0x1c>
 8005bee:	bc10      	pop	{r4}
 8005bf0:	f7ff bded 	b.w	80057ce <__swbuf_r>
 8005bf4:	6813      	ldr	r3, [r2, #0]
 8005bf6:	1c58      	adds	r0, r3, #1
 8005bf8:	6010      	str	r0, [r2, #0]
 8005bfa:	7019      	strb	r1, [r3, #0]
 8005bfc:	4608      	mov	r0, r1
 8005bfe:	bc10      	pop	{r4}
 8005c00:	4770      	bx	lr

08005c02 <__sfputs_r>:
 8005c02:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005c04:	4606      	mov	r6, r0
 8005c06:	460f      	mov	r7, r1
 8005c08:	4614      	mov	r4, r2
 8005c0a:	18d5      	adds	r5, r2, r3
 8005c0c:	42ac      	cmp	r4, r5
 8005c0e:	d101      	bne.n	8005c14 <__sfputs_r+0x12>
 8005c10:	2000      	movs	r0, #0
 8005c12:	e007      	b.n	8005c24 <__sfputs_r+0x22>
 8005c14:	463a      	mov	r2, r7
 8005c16:	4630      	mov	r0, r6
 8005c18:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005c1c:	f7ff ffdc 	bl	8005bd8 <__sfputc_r>
 8005c20:	1c43      	adds	r3, r0, #1
 8005c22:	d1f3      	bne.n	8005c0c <__sfputs_r+0xa>
 8005c24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08005c28 <_vfiprintf_r>:
 8005c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005c2c:	460d      	mov	r5, r1
 8005c2e:	4614      	mov	r4, r2
 8005c30:	4698      	mov	r8, r3
 8005c32:	4606      	mov	r6, r0
 8005c34:	b09d      	sub	sp, #116	; 0x74
 8005c36:	b118      	cbz	r0, 8005c40 <_vfiprintf_r+0x18>
 8005c38:	6a03      	ldr	r3, [r0, #32]
 8005c3a:	b90b      	cbnz	r3, 8005c40 <_vfiprintf_r+0x18>
 8005c3c:	f7ff fce0 	bl	8005600 <__sinit>
 8005c40:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005c42:	07d9      	lsls	r1, r3, #31
 8005c44:	d405      	bmi.n	8005c52 <_vfiprintf_r+0x2a>
 8005c46:	89ab      	ldrh	r3, [r5, #12]
 8005c48:	059a      	lsls	r2, r3, #22
 8005c4a:	d402      	bmi.n	8005c52 <_vfiprintf_r+0x2a>
 8005c4c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005c4e:	f7ff fecc 	bl	80059ea <__retarget_lock_acquire_recursive>
 8005c52:	89ab      	ldrh	r3, [r5, #12]
 8005c54:	071b      	lsls	r3, r3, #28
 8005c56:	d501      	bpl.n	8005c5c <_vfiprintf_r+0x34>
 8005c58:	692b      	ldr	r3, [r5, #16]
 8005c5a:	b99b      	cbnz	r3, 8005c84 <_vfiprintf_r+0x5c>
 8005c5c:	4629      	mov	r1, r5
 8005c5e:	4630      	mov	r0, r6
 8005c60:	f7ff fdf2 	bl	8005848 <__swsetup_r>
 8005c64:	b170      	cbz	r0, 8005c84 <_vfiprintf_r+0x5c>
 8005c66:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005c68:	07dc      	lsls	r4, r3, #31
 8005c6a:	d504      	bpl.n	8005c76 <_vfiprintf_r+0x4e>
 8005c6c:	f04f 30ff 	mov.w	r0, #4294967295
 8005c70:	b01d      	add	sp, #116	; 0x74
 8005c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c76:	89ab      	ldrh	r3, [r5, #12]
 8005c78:	0598      	lsls	r0, r3, #22
 8005c7a:	d4f7      	bmi.n	8005c6c <_vfiprintf_r+0x44>
 8005c7c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005c7e:	f7ff feb5 	bl	80059ec <__retarget_lock_release_recursive>
 8005c82:	e7f3      	b.n	8005c6c <_vfiprintf_r+0x44>
 8005c84:	2300      	movs	r3, #0
 8005c86:	9309      	str	r3, [sp, #36]	; 0x24
 8005c88:	2320      	movs	r3, #32
 8005c8a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005c8e:	2330      	movs	r3, #48	; 0x30
 8005c90:	f04f 0901 	mov.w	r9, #1
 8005c94:	f8cd 800c 	str.w	r8, [sp, #12]
 8005c98:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 8005e48 <_vfiprintf_r+0x220>
 8005c9c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005ca0:	4623      	mov	r3, r4
 8005ca2:	469a      	mov	sl, r3
 8005ca4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005ca8:	b10a      	cbz	r2, 8005cae <_vfiprintf_r+0x86>
 8005caa:	2a25      	cmp	r2, #37	; 0x25
 8005cac:	d1f9      	bne.n	8005ca2 <_vfiprintf_r+0x7a>
 8005cae:	ebba 0b04 	subs.w	fp, sl, r4
 8005cb2:	d00b      	beq.n	8005ccc <_vfiprintf_r+0xa4>
 8005cb4:	465b      	mov	r3, fp
 8005cb6:	4622      	mov	r2, r4
 8005cb8:	4629      	mov	r1, r5
 8005cba:	4630      	mov	r0, r6
 8005cbc:	f7ff ffa1 	bl	8005c02 <__sfputs_r>
 8005cc0:	3001      	adds	r0, #1
 8005cc2:	f000 80a9 	beq.w	8005e18 <_vfiprintf_r+0x1f0>
 8005cc6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005cc8:	445a      	add	r2, fp
 8005cca:	9209      	str	r2, [sp, #36]	; 0x24
 8005ccc:	f89a 3000 	ldrb.w	r3, [sl]
 8005cd0:	2b00      	cmp	r3, #0
 8005cd2:	f000 80a1 	beq.w	8005e18 <_vfiprintf_r+0x1f0>
 8005cd6:	2300      	movs	r3, #0
 8005cd8:	f04f 32ff 	mov.w	r2, #4294967295
 8005cdc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005ce0:	f10a 0a01 	add.w	sl, sl, #1
 8005ce4:	9304      	str	r3, [sp, #16]
 8005ce6:	9307      	str	r3, [sp, #28]
 8005ce8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005cec:	931a      	str	r3, [sp, #104]	; 0x68
 8005cee:	4654      	mov	r4, sl
 8005cf0:	2205      	movs	r2, #5
 8005cf2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005cf6:	4854      	ldr	r0, [pc, #336]	; (8005e48 <_vfiprintf_r+0x220>)
 8005cf8:	f000 fb82 	bl	8006400 <memchr>
 8005cfc:	9a04      	ldr	r2, [sp, #16]
 8005cfe:	b9d8      	cbnz	r0, 8005d38 <_vfiprintf_r+0x110>
 8005d00:	06d1      	lsls	r1, r2, #27
 8005d02:	bf44      	itt	mi
 8005d04:	2320      	movmi	r3, #32
 8005d06:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005d0a:	0713      	lsls	r3, r2, #28
 8005d0c:	bf44      	itt	mi
 8005d0e:	232b      	movmi	r3, #43	; 0x2b
 8005d10:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005d14:	f89a 3000 	ldrb.w	r3, [sl]
 8005d18:	2b2a      	cmp	r3, #42	; 0x2a
 8005d1a:	d015      	beq.n	8005d48 <_vfiprintf_r+0x120>
 8005d1c:	4654      	mov	r4, sl
 8005d1e:	2000      	movs	r0, #0
 8005d20:	f04f 0c0a 	mov.w	ip, #10
 8005d24:	9a07      	ldr	r2, [sp, #28]
 8005d26:	4621      	mov	r1, r4
 8005d28:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005d2c:	3b30      	subs	r3, #48	; 0x30
 8005d2e:	2b09      	cmp	r3, #9
 8005d30:	d94d      	bls.n	8005dce <_vfiprintf_r+0x1a6>
 8005d32:	b1b0      	cbz	r0, 8005d62 <_vfiprintf_r+0x13a>
 8005d34:	9207      	str	r2, [sp, #28]
 8005d36:	e014      	b.n	8005d62 <_vfiprintf_r+0x13a>
 8005d38:	eba0 0308 	sub.w	r3, r0, r8
 8005d3c:	fa09 f303 	lsl.w	r3, r9, r3
 8005d40:	4313      	orrs	r3, r2
 8005d42:	46a2      	mov	sl, r4
 8005d44:	9304      	str	r3, [sp, #16]
 8005d46:	e7d2      	b.n	8005cee <_vfiprintf_r+0xc6>
 8005d48:	9b03      	ldr	r3, [sp, #12]
 8005d4a:	1d19      	adds	r1, r3, #4
 8005d4c:	681b      	ldr	r3, [r3, #0]
 8005d4e:	9103      	str	r1, [sp, #12]
 8005d50:	2b00      	cmp	r3, #0
 8005d52:	bfbb      	ittet	lt
 8005d54:	425b      	neglt	r3, r3
 8005d56:	f042 0202 	orrlt.w	r2, r2, #2
 8005d5a:	9307      	strge	r3, [sp, #28]
 8005d5c:	9307      	strlt	r3, [sp, #28]
 8005d5e:	bfb8      	it	lt
 8005d60:	9204      	strlt	r2, [sp, #16]
 8005d62:	7823      	ldrb	r3, [r4, #0]
 8005d64:	2b2e      	cmp	r3, #46	; 0x2e
 8005d66:	d10c      	bne.n	8005d82 <_vfiprintf_r+0x15a>
 8005d68:	7863      	ldrb	r3, [r4, #1]
 8005d6a:	2b2a      	cmp	r3, #42	; 0x2a
 8005d6c:	d134      	bne.n	8005dd8 <_vfiprintf_r+0x1b0>
 8005d6e:	9b03      	ldr	r3, [sp, #12]
 8005d70:	3402      	adds	r4, #2
 8005d72:	1d1a      	adds	r2, r3, #4
 8005d74:	681b      	ldr	r3, [r3, #0]
 8005d76:	9203      	str	r2, [sp, #12]
 8005d78:	2b00      	cmp	r3, #0
 8005d7a:	bfb8      	it	lt
 8005d7c:	f04f 33ff 	movlt.w	r3, #4294967295
 8005d80:	9305      	str	r3, [sp, #20]
 8005d82:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8005e4c <_vfiprintf_r+0x224>
 8005d86:	2203      	movs	r2, #3
 8005d88:	4650      	mov	r0, sl
 8005d8a:	7821      	ldrb	r1, [r4, #0]
 8005d8c:	f000 fb38 	bl	8006400 <memchr>
 8005d90:	b138      	cbz	r0, 8005da2 <_vfiprintf_r+0x17a>
 8005d92:	2240      	movs	r2, #64	; 0x40
 8005d94:	9b04      	ldr	r3, [sp, #16]
 8005d96:	eba0 000a 	sub.w	r0, r0, sl
 8005d9a:	4082      	lsls	r2, r0
 8005d9c:	4313      	orrs	r3, r2
 8005d9e:	3401      	adds	r4, #1
 8005da0:	9304      	str	r3, [sp, #16]
 8005da2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005da6:	2206      	movs	r2, #6
 8005da8:	4829      	ldr	r0, [pc, #164]	; (8005e50 <_vfiprintf_r+0x228>)
 8005daa:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005dae:	f000 fb27 	bl	8006400 <memchr>
 8005db2:	2800      	cmp	r0, #0
 8005db4:	d03f      	beq.n	8005e36 <_vfiprintf_r+0x20e>
 8005db6:	4b27      	ldr	r3, [pc, #156]	; (8005e54 <_vfiprintf_r+0x22c>)
 8005db8:	bb1b      	cbnz	r3, 8005e02 <_vfiprintf_r+0x1da>
 8005dba:	9b03      	ldr	r3, [sp, #12]
 8005dbc:	3307      	adds	r3, #7
 8005dbe:	f023 0307 	bic.w	r3, r3, #7
 8005dc2:	3308      	adds	r3, #8
 8005dc4:	9303      	str	r3, [sp, #12]
 8005dc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005dc8:	443b      	add	r3, r7
 8005dca:	9309      	str	r3, [sp, #36]	; 0x24
 8005dcc:	e768      	b.n	8005ca0 <_vfiprintf_r+0x78>
 8005dce:	460c      	mov	r4, r1
 8005dd0:	2001      	movs	r0, #1
 8005dd2:	fb0c 3202 	mla	r2, ip, r2, r3
 8005dd6:	e7a6      	b.n	8005d26 <_vfiprintf_r+0xfe>
 8005dd8:	2300      	movs	r3, #0
 8005dda:	f04f 0c0a 	mov.w	ip, #10
 8005dde:	4619      	mov	r1, r3
 8005de0:	3401      	adds	r4, #1
 8005de2:	9305      	str	r3, [sp, #20]
 8005de4:	4620      	mov	r0, r4
 8005de6:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005dea:	3a30      	subs	r2, #48	; 0x30
 8005dec:	2a09      	cmp	r2, #9
 8005dee:	d903      	bls.n	8005df8 <_vfiprintf_r+0x1d0>
 8005df0:	2b00      	cmp	r3, #0
 8005df2:	d0c6      	beq.n	8005d82 <_vfiprintf_r+0x15a>
 8005df4:	9105      	str	r1, [sp, #20]
 8005df6:	e7c4      	b.n	8005d82 <_vfiprintf_r+0x15a>
 8005df8:	4604      	mov	r4, r0
 8005dfa:	2301      	movs	r3, #1
 8005dfc:	fb0c 2101 	mla	r1, ip, r1, r2
 8005e00:	e7f0      	b.n	8005de4 <_vfiprintf_r+0x1bc>
 8005e02:	ab03      	add	r3, sp, #12
 8005e04:	9300      	str	r3, [sp, #0]
 8005e06:	462a      	mov	r2, r5
 8005e08:	4630      	mov	r0, r6
 8005e0a:	4b13      	ldr	r3, [pc, #76]	; (8005e58 <_vfiprintf_r+0x230>)
 8005e0c:	a904      	add	r1, sp, #16
 8005e0e:	f3af 8000 	nop.w
 8005e12:	4607      	mov	r7, r0
 8005e14:	1c78      	adds	r0, r7, #1
 8005e16:	d1d6      	bne.n	8005dc6 <_vfiprintf_r+0x19e>
 8005e18:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005e1a:	07d9      	lsls	r1, r3, #31
 8005e1c:	d405      	bmi.n	8005e2a <_vfiprintf_r+0x202>
 8005e1e:	89ab      	ldrh	r3, [r5, #12]
 8005e20:	059a      	lsls	r2, r3, #22
 8005e22:	d402      	bmi.n	8005e2a <_vfiprintf_r+0x202>
 8005e24:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005e26:	f7ff fde1 	bl	80059ec <__retarget_lock_release_recursive>
 8005e2a:	89ab      	ldrh	r3, [r5, #12]
 8005e2c:	065b      	lsls	r3, r3, #25
 8005e2e:	f53f af1d 	bmi.w	8005c6c <_vfiprintf_r+0x44>
 8005e32:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005e34:	e71c      	b.n	8005c70 <_vfiprintf_r+0x48>
 8005e36:	ab03      	add	r3, sp, #12
 8005e38:	9300      	str	r3, [sp, #0]
 8005e3a:	462a      	mov	r2, r5
 8005e3c:	4630      	mov	r0, r6
 8005e3e:	4b06      	ldr	r3, [pc, #24]	; (8005e58 <_vfiprintf_r+0x230>)
 8005e40:	a904      	add	r1, sp, #16
 8005e42:	f000 f87d 	bl	8005f40 <_printf_i>
 8005e46:	e7e4      	b.n	8005e12 <_vfiprintf_r+0x1ea>
 8005e48:	080065da 	.word	0x080065da
 8005e4c:	080065e0 	.word	0x080065e0
 8005e50:	080065e4 	.word	0x080065e4
 8005e54:	00000000 	.word	0x00000000
 8005e58:	08005c03 	.word	0x08005c03

08005e5c <_printf_common>:
 8005e5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005e60:	4616      	mov	r6, r2
 8005e62:	4699      	mov	r9, r3
 8005e64:	688a      	ldr	r2, [r1, #8]
 8005e66:	690b      	ldr	r3, [r1, #16]
 8005e68:	4607      	mov	r7, r0
 8005e6a:	4293      	cmp	r3, r2
 8005e6c:	bfb8      	it	lt
 8005e6e:	4613      	movlt	r3, r2
 8005e70:	6033      	str	r3, [r6, #0]
 8005e72:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8005e76:	460c      	mov	r4, r1
 8005e78:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8005e7c:	b10a      	cbz	r2, 8005e82 <_printf_common+0x26>
 8005e7e:	3301      	adds	r3, #1
 8005e80:	6033      	str	r3, [r6, #0]
 8005e82:	6823      	ldr	r3, [r4, #0]
 8005e84:	0699      	lsls	r1, r3, #26
 8005e86:	bf42      	ittt	mi
 8005e88:	6833      	ldrmi	r3, [r6, #0]
 8005e8a:	3302      	addmi	r3, #2
 8005e8c:	6033      	strmi	r3, [r6, #0]
 8005e8e:	6825      	ldr	r5, [r4, #0]
 8005e90:	f015 0506 	ands.w	r5, r5, #6
 8005e94:	d106      	bne.n	8005ea4 <_printf_common+0x48>
 8005e96:	f104 0a19 	add.w	sl, r4, #25
 8005e9a:	68e3      	ldr	r3, [r4, #12]
 8005e9c:	6832      	ldr	r2, [r6, #0]
 8005e9e:	1a9b      	subs	r3, r3, r2
 8005ea0:	42ab      	cmp	r3, r5
 8005ea2:	dc2b      	bgt.n	8005efc <_printf_common+0xa0>
 8005ea4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8005ea8:	1e13      	subs	r3, r2, #0
 8005eaa:	6822      	ldr	r2, [r4, #0]
 8005eac:	bf18      	it	ne
 8005eae:	2301      	movne	r3, #1
 8005eb0:	0692      	lsls	r2, r2, #26
 8005eb2:	d430      	bmi.n	8005f16 <_printf_common+0xba>
 8005eb4:	4649      	mov	r1, r9
 8005eb6:	4638      	mov	r0, r7
 8005eb8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005ebc:	47c0      	blx	r8
 8005ebe:	3001      	adds	r0, #1
 8005ec0:	d023      	beq.n	8005f0a <_printf_common+0xae>
 8005ec2:	6823      	ldr	r3, [r4, #0]
 8005ec4:	6922      	ldr	r2, [r4, #16]
 8005ec6:	f003 0306 	and.w	r3, r3, #6
 8005eca:	2b04      	cmp	r3, #4
 8005ecc:	bf14      	ite	ne
 8005ece:	2500      	movne	r5, #0
 8005ed0:	6833      	ldreq	r3, [r6, #0]
 8005ed2:	f04f 0600 	mov.w	r6, #0
 8005ed6:	bf08      	it	eq
 8005ed8:	68e5      	ldreq	r5, [r4, #12]
 8005eda:	f104 041a 	add.w	r4, r4, #26
 8005ede:	bf08      	it	eq
 8005ee0:	1aed      	subeq	r5, r5, r3
 8005ee2:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8005ee6:	bf08      	it	eq
 8005ee8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005eec:	4293      	cmp	r3, r2
 8005eee:	bfc4      	itt	gt
 8005ef0:	1a9b      	subgt	r3, r3, r2
 8005ef2:	18ed      	addgt	r5, r5, r3
 8005ef4:	42b5      	cmp	r5, r6
 8005ef6:	d11a      	bne.n	8005f2e <_printf_common+0xd2>
 8005ef8:	2000      	movs	r0, #0
 8005efa:	e008      	b.n	8005f0e <_printf_common+0xb2>
 8005efc:	2301      	movs	r3, #1
 8005efe:	4652      	mov	r2, sl
 8005f00:	4649      	mov	r1, r9
 8005f02:	4638      	mov	r0, r7
 8005f04:	47c0      	blx	r8
 8005f06:	3001      	adds	r0, #1
 8005f08:	d103      	bne.n	8005f12 <_printf_common+0xb6>
 8005f0a:	f04f 30ff 	mov.w	r0, #4294967295
 8005f0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005f12:	3501      	adds	r5, #1
 8005f14:	e7c1      	b.n	8005e9a <_printf_common+0x3e>
 8005f16:	2030      	movs	r0, #48	; 0x30
 8005f18:	18e1      	adds	r1, r4, r3
 8005f1a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8005f1e:	1c5a      	adds	r2, r3, #1
 8005f20:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8005f24:	4422      	add	r2, r4
 8005f26:	3302      	adds	r3, #2
 8005f28:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005f2c:	e7c2      	b.n	8005eb4 <_printf_common+0x58>
 8005f2e:	2301      	movs	r3, #1
 8005f30:	4622      	mov	r2, r4
 8005f32:	4649      	mov	r1, r9
 8005f34:	4638      	mov	r0, r7
 8005f36:	47c0      	blx	r8
 8005f38:	3001      	adds	r0, #1
 8005f3a:	d0e6      	beq.n	8005f0a <_printf_common+0xae>
 8005f3c:	3601      	adds	r6, #1
 8005f3e:	e7d9      	b.n	8005ef4 <_printf_common+0x98>

08005f40 <_printf_i>:
 8005f40:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005f44:	7e0f      	ldrb	r7, [r1, #24]
 8005f46:	4691      	mov	r9, r2
 8005f48:	2f78      	cmp	r7, #120	; 0x78
 8005f4a:	4680      	mov	r8, r0
 8005f4c:	460c      	mov	r4, r1
 8005f4e:	469a      	mov	sl, r3
 8005f50:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005f52:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8005f56:	d807      	bhi.n	8005f68 <_printf_i+0x28>
 8005f58:	2f62      	cmp	r7, #98	; 0x62
 8005f5a:	d80a      	bhi.n	8005f72 <_printf_i+0x32>
 8005f5c:	2f00      	cmp	r7, #0
 8005f5e:	f000 80d5 	beq.w	800610c <_printf_i+0x1cc>
 8005f62:	2f58      	cmp	r7, #88	; 0x58
 8005f64:	f000 80c1 	beq.w	80060ea <_printf_i+0x1aa>
 8005f68:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005f6c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8005f70:	e03a      	b.n	8005fe8 <_printf_i+0xa8>
 8005f72:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8005f76:	2b15      	cmp	r3, #21
 8005f78:	d8f6      	bhi.n	8005f68 <_printf_i+0x28>
 8005f7a:	a101      	add	r1, pc, #4	; (adr r1, 8005f80 <_printf_i+0x40>)
 8005f7c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8005f80:	08005fd9 	.word	0x08005fd9
 8005f84:	08005fed 	.word	0x08005fed
 8005f88:	08005f69 	.word	0x08005f69
 8005f8c:	08005f69 	.word	0x08005f69
 8005f90:	08005f69 	.word	0x08005f69
 8005f94:	08005f69 	.word	0x08005f69
 8005f98:	08005fed 	.word	0x08005fed
 8005f9c:	08005f69 	.word	0x08005f69
 8005fa0:	08005f69 	.word	0x08005f69
 8005fa4:	08005f69 	.word	0x08005f69
 8005fa8:	08005f69 	.word	0x08005f69
 8005fac:	080060f3 	.word	0x080060f3
 8005fb0:	08006019 	.word	0x08006019
 8005fb4:	080060ad 	.word	0x080060ad
 8005fb8:	08005f69 	.word	0x08005f69
 8005fbc:	08005f69 	.word	0x08005f69
 8005fc0:	08006115 	.word	0x08006115
 8005fc4:	08005f69 	.word	0x08005f69
 8005fc8:	08006019 	.word	0x08006019
 8005fcc:	08005f69 	.word	0x08005f69
 8005fd0:	08005f69 	.word	0x08005f69
 8005fd4:	080060b5 	.word	0x080060b5
 8005fd8:	682b      	ldr	r3, [r5, #0]
 8005fda:	1d1a      	adds	r2, r3, #4
 8005fdc:	681b      	ldr	r3, [r3, #0]
 8005fde:	602a      	str	r2, [r5, #0]
 8005fe0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005fe4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8005fe8:	2301      	movs	r3, #1
 8005fea:	e0a0      	b.n	800612e <_printf_i+0x1ee>
 8005fec:	6820      	ldr	r0, [r4, #0]
 8005fee:	682b      	ldr	r3, [r5, #0]
 8005ff0:	0607      	lsls	r7, r0, #24
 8005ff2:	f103 0104 	add.w	r1, r3, #4
 8005ff6:	6029      	str	r1, [r5, #0]
 8005ff8:	d501      	bpl.n	8005ffe <_printf_i+0xbe>
 8005ffa:	681e      	ldr	r6, [r3, #0]
 8005ffc:	e003      	b.n	8006006 <_printf_i+0xc6>
 8005ffe:	0646      	lsls	r6, r0, #25
 8006000:	d5fb      	bpl.n	8005ffa <_printf_i+0xba>
 8006002:	f9b3 6000 	ldrsh.w	r6, [r3]
 8006006:	2e00      	cmp	r6, #0
 8006008:	da03      	bge.n	8006012 <_printf_i+0xd2>
 800600a:	232d      	movs	r3, #45	; 0x2d
 800600c:	4276      	negs	r6, r6
 800600e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006012:	230a      	movs	r3, #10
 8006014:	4859      	ldr	r0, [pc, #356]	; (800617c <_printf_i+0x23c>)
 8006016:	e012      	b.n	800603e <_printf_i+0xfe>
 8006018:	682b      	ldr	r3, [r5, #0]
 800601a:	6820      	ldr	r0, [r4, #0]
 800601c:	1d19      	adds	r1, r3, #4
 800601e:	6029      	str	r1, [r5, #0]
 8006020:	0605      	lsls	r5, r0, #24
 8006022:	d501      	bpl.n	8006028 <_printf_i+0xe8>
 8006024:	681e      	ldr	r6, [r3, #0]
 8006026:	e002      	b.n	800602e <_printf_i+0xee>
 8006028:	0641      	lsls	r1, r0, #25
 800602a:	d5fb      	bpl.n	8006024 <_printf_i+0xe4>
 800602c:	881e      	ldrh	r6, [r3, #0]
 800602e:	2f6f      	cmp	r7, #111	; 0x6f
 8006030:	bf0c      	ite	eq
 8006032:	2308      	moveq	r3, #8
 8006034:	230a      	movne	r3, #10
 8006036:	4851      	ldr	r0, [pc, #324]	; (800617c <_printf_i+0x23c>)
 8006038:	2100      	movs	r1, #0
 800603a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800603e:	6865      	ldr	r5, [r4, #4]
 8006040:	2d00      	cmp	r5, #0
 8006042:	bfa8      	it	ge
 8006044:	6821      	ldrge	r1, [r4, #0]
 8006046:	60a5      	str	r5, [r4, #8]
 8006048:	bfa4      	itt	ge
 800604a:	f021 0104 	bicge.w	r1, r1, #4
 800604e:	6021      	strge	r1, [r4, #0]
 8006050:	b90e      	cbnz	r6, 8006056 <_printf_i+0x116>
 8006052:	2d00      	cmp	r5, #0
 8006054:	d04b      	beq.n	80060ee <_printf_i+0x1ae>
 8006056:	4615      	mov	r5, r2
 8006058:	fbb6 f1f3 	udiv	r1, r6, r3
 800605c:	fb03 6711 	mls	r7, r3, r1, r6
 8006060:	5dc7      	ldrb	r7, [r0, r7]
 8006062:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8006066:	4637      	mov	r7, r6
 8006068:	42bb      	cmp	r3, r7
 800606a:	460e      	mov	r6, r1
 800606c:	d9f4      	bls.n	8006058 <_printf_i+0x118>
 800606e:	2b08      	cmp	r3, #8
 8006070:	d10b      	bne.n	800608a <_printf_i+0x14a>
 8006072:	6823      	ldr	r3, [r4, #0]
 8006074:	07de      	lsls	r6, r3, #31
 8006076:	d508      	bpl.n	800608a <_printf_i+0x14a>
 8006078:	6923      	ldr	r3, [r4, #16]
 800607a:	6861      	ldr	r1, [r4, #4]
 800607c:	4299      	cmp	r1, r3
 800607e:	bfde      	ittt	le
 8006080:	2330      	movle	r3, #48	; 0x30
 8006082:	f805 3c01 	strble.w	r3, [r5, #-1]
 8006086:	f105 35ff 	addle.w	r5, r5, #4294967295
 800608a:	1b52      	subs	r2, r2, r5
 800608c:	6122      	str	r2, [r4, #16]
 800608e:	464b      	mov	r3, r9
 8006090:	4621      	mov	r1, r4
 8006092:	4640      	mov	r0, r8
 8006094:	f8cd a000 	str.w	sl, [sp]
 8006098:	aa03      	add	r2, sp, #12
 800609a:	f7ff fedf 	bl	8005e5c <_printf_common>
 800609e:	3001      	adds	r0, #1
 80060a0:	d14a      	bne.n	8006138 <_printf_i+0x1f8>
 80060a2:	f04f 30ff 	mov.w	r0, #4294967295
 80060a6:	b004      	add	sp, #16
 80060a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80060ac:	6823      	ldr	r3, [r4, #0]
 80060ae:	f043 0320 	orr.w	r3, r3, #32
 80060b2:	6023      	str	r3, [r4, #0]
 80060b4:	2778      	movs	r7, #120	; 0x78
 80060b6:	4832      	ldr	r0, [pc, #200]	; (8006180 <_printf_i+0x240>)
 80060b8:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80060bc:	6823      	ldr	r3, [r4, #0]
 80060be:	6829      	ldr	r1, [r5, #0]
 80060c0:	061f      	lsls	r7, r3, #24
 80060c2:	f851 6b04 	ldr.w	r6, [r1], #4
 80060c6:	d402      	bmi.n	80060ce <_printf_i+0x18e>
 80060c8:	065f      	lsls	r7, r3, #25
 80060ca:	bf48      	it	mi
 80060cc:	b2b6      	uxthmi	r6, r6
 80060ce:	07df      	lsls	r7, r3, #31
 80060d0:	bf48      	it	mi
 80060d2:	f043 0320 	orrmi.w	r3, r3, #32
 80060d6:	6029      	str	r1, [r5, #0]
 80060d8:	bf48      	it	mi
 80060da:	6023      	strmi	r3, [r4, #0]
 80060dc:	b91e      	cbnz	r6, 80060e6 <_printf_i+0x1a6>
 80060de:	6823      	ldr	r3, [r4, #0]
 80060e0:	f023 0320 	bic.w	r3, r3, #32
 80060e4:	6023      	str	r3, [r4, #0]
 80060e6:	2310      	movs	r3, #16
 80060e8:	e7a6      	b.n	8006038 <_printf_i+0xf8>
 80060ea:	4824      	ldr	r0, [pc, #144]	; (800617c <_printf_i+0x23c>)
 80060ec:	e7e4      	b.n	80060b8 <_printf_i+0x178>
 80060ee:	4615      	mov	r5, r2
 80060f0:	e7bd      	b.n	800606e <_printf_i+0x12e>
 80060f2:	682b      	ldr	r3, [r5, #0]
 80060f4:	6826      	ldr	r6, [r4, #0]
 80060f6:	1d18      	adds	r0, r3, #4
 80060f8:	6961      	ldr	r1, [r4, #20]
 80060fa:	6028      	str	r0, [r5, #0]
 80060fc:	0635      	lsls	r5, r6, #24
 80060fe:	681b      	ldr	r3, [r3, #0]
 8006100:	d501      	bpl.n	8006106 <_printf_i+0x1c6>
 8006102:	6019      	str	r1, [r3, #0]
 8006104:	e002      	b.n	800610c <_printf_i+0x1cc>
 8006106:	0670      	lsls	r0, r6, #25
 8006108:	d5fb      	bpl.n	8006102 <_printf_i+0x1c2>
 800610a:	8019      	strh	r1, [r3, #0]
 800610c:	2300      	movs	r3, #0
 800610e:	4615      	mov	r5, r2
 8006110:	6123      	str	r3, [r4, #16]
 8006112:	e7bc      	b.n	800608e <_printf_i+0x14e>
 8006114:	682b      	ldr	r3, [r5, #0]
 8006116:	2100      	movs	r1, #0
 8006118:	1d1a      	adds	r2, r3, #4
 800611a:	602a      	str	r2, [r5, #0]
 800611c:	681d      	ldr	r5, [r3, #0]
 800611e:	6862      	ldr	r2, [r4, #4]
 8006120:	4628      	mov	r0, r5
 8006122:	f000 f96d 	bl	8006400 <memchr>
 8006126:	b108      	cbz	r0, 800612c <_printf_i+0x1ec>
 8006128:	1b40      	subs	r0, r0, r5
 800612a:	6060      	str	r0, [r4, #4]
 800612c:	6863      	ldr	r3, [r4, #4]
 800612e:	6123      	str	r3, [r4, #16]
 8006130:	2300      	movs	r3, #0
 8006132:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006136:	e7aa      	b.n	800608e <_printf_i+0x14e>
 8006138:	462a      	mov	r2, r5
 800613a:	4649      	mov	r1, r9
 800613c:	4640      	mov	r0, r8
 800613e:	6923      	ldr	r3, [r4, #16]
 8006140:	47d0      	blx	sl
 8006142:	3001      	adds	r0, #1
 8006144:	d0ad      	beq.n	80060a2 <_printf_i+0x162>
 8006146:	6823      	ldr	r3, [r4, #0]
 8006148:	079b      	lsls	r3, r3, #30
 800614a:	d413      	bmi.n	8006174 <_printf_i+0x234>
 800614c:	68e0      	ldr	r0, [r4, #12]
 800614e:	9b03      	ldr	r3, [sp, #12]
 8006150:	4298      	cmp	r0, r3
 8006152:	bfb8      	it	lt
 8006154:	4618      	movlt	r0, r3
 8006156:	e7a6      	b.n	80060a6 <_printf_i+0x166>
 8006158:	2301      	movs	r3, #1
 800615a:	4632      	mov	r2, r6
 800615c:	4649      	mov	r1, r9
 800615e:	4640      	mov	r0, r8
 8006160:	47d0      	blx	sl
 8006162:	3001      	adds	r0, #1
 8006164:	d09d      	beq.n	80060a2 <_printf_i+0x162>
 8006166:	3501      	adds	r5, #1
 8006168:	68e3      	ldr	r3, [r4, #12]
 800616a:	9903      	ldr	r1, [sp, #12]
 800616c:	1a5b      	subs	r3, r3, r1
 800616e:	42ab      	cmp	r3, r5
 8006170:	dcf2      	bgt.n	8006158 <_printf_i+0x218>
 8006172:	e7eb      	b.n	800614c <_printf_i+0x20c>
 8006174:	2500      	movs	r5, #0
 8006176:	f104 0619 	add.w	r6, r4, #25
 800617a:	e7f5      	b.n	8006168 <_printf_i+0x228>
 800617c:	080065eb 	.word	0x080065eb
 8006180:	080065fc 	.word	0x080065fc

08006184 <__sflush_r>:
 8006184:	898a      	ldrh	r2, [r1, #12]
 8006186:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006188:	4605      	mov	r5, r0
 800618a:	0710      	lsls	r0, r2, #28
 800618c:	460c      	mov	r4, r1
 800618e:	d457      	bmi.n	8006240 <__sflush_r+0xbc>
 8006190:	684b      	ldr	r3, [r1, #4]
 8006192:	2b00      	cmp	r3, #0
 8006194:	dc04      	bgt.n	80061a0 <__sflush_r+0x1c>
 8006196:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8006198:	2b00      	cmp	r3, #0
 800619a:	dc01      	bgt.n	80061a0 <__sflush_r+0x1c>
 800619c:	2000      	movs	r0, #0
 800619e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80061a0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80061a2:	2e00      	cmp	r6, #0
 80061a4:	d0fa      	beq.n	800619c <__sflush_r+0x18>
 80061a6:	2300      	movs	r3, #0
 80061a8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80061ac:	682f      	ldr	r7, [r5, #0]
 80061ae:	6a21      	ldr	r1, [r4, #32]
 80061b0:	602b      	str	r3, [r5, #0]
 80061b2:	d032      	beq.n	800621a <__sflush_r+0x96>
 80061b4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80061b6:	89a3      	ldrh	r3, [r4, #12]
 80061b8:	075a      	lsls	r2, r3, #29
 80061ba:	d505      	bpl.n	80061c8 <__sflush_r+0x44>
 80061bc:	6863      	ldr	r3, [r4, #4]
 80061be:	1ac0      	subs	r0, r0, r3
 80061c0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80061c2:	b10b      	cbz	r3, 80061c8 <__sflush_r+0x44>
 80061c4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80061c6:	1ac0      	subs	r0, r0, r3
 80061c8:	2300      	movs	r3, #0
 80061ca:	4602      	mov	r2, r0
 80061cc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80061ce:	4628      	mov	r0, r5
 80061d0:	6a21      	ldr	r1, [r4, #32]
 80061d2:	47b0      	blx	r6
 80061d4:	1c43      	adds	r3, r0, #1
 80061d6:	89a3      	ldrh	r3, [r4, #12]
 80061d8:	d106      	bne.n	80061e8 <__sflush_r+0x64>
 80061da:	6829      	ldr	r1, [r5, #0]
 80061dc:	291d      	cmp	r1, #29
 80061de:	d82b      	bhi.n	8006238 <__sflush_r+0xb4>
 80061e0:	4a28      	ldr	r2, [pc, #160]	; (8006284 <__sflush_r+0x100>)
 80061e2:	410a      	asrs	r2, r1
 80061e4:	07d6      	lsls	r6, r2, #31
 80061e6:	d427      	bmi.n	8006238 <__sflush_r+0xb4>
 80061e8:	2200      	movs	r2, #0
 80061ea:	6062      	str	r2, [r4, #4]
 80061ec:	6922      	ldr	r2, [r4, #16]
 80061ee:	04d9      	lsls	r1, r3, #19
 80061f0:	6022      	str	r2, [r4, #0]
 80061f2:	d504      	bpl.n	80061fe <__sflush_r+0x7a>
 80061f4:	1c42      	adds	r2, r0, #1
 80061f6:	d101      	bne.n	80061fc <__sflush_r+0x78>
 80061f8:	682b      	ldr	r3, [r5, #0]
 80061fa:	b903      	cbnz	r3, 80061fe <__sflush_r+0x7a>
 80061fc:	6560      	str	r0, [r4, #84]	; 0x54
 80061fe:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006200:	602f      	str	r7, [r5, #0]
 8006202:	2900      	cmp	r1, #0
 8006204:	d0ca      	beq.n	800619c <__sflush_r+0x18>
 8006206:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800620a:	4299      	cmp	r1, r3
 800620c:	d002      	beq.n	8006214 <__sflush_r+0x90>
 800620e:	4628      	mov	r0, r5
 8006210:	f7ff fbee 	bl	80059f0 <_free_r>
 8006214:	2000      	movs	r0, #0
 8006216:	6360      	str	r0, [r4, #52]	; 0x34
 8006218:	e7c1      	b.n	800619e <__sflush_r+0x1a>
 800621a:	2301      	movs	r3, #1
 800621c:	4628      	mov	r0, r5
 800621e:	47b0      	blx	r6
 8006220:	1c41      	adds	r1, r0, #1
 8006222:	d1c8      	bne.n	80061b6 <__sflush_r+0x32>
 8006224:	682b      	ldr	r3, [r5, #0]
 8006226:	2b00      	cmp	r3, #0
 8006228:	d0c5      	beq.n	80061b6 <__sflush_r+0x32>
 800622a:	2b1d      	cmp	r3, #29
 800622c:	d001      	beq.n	8006232 <__sflush_r+0xae>
 800622e:	2b16      	cmp	r3, #22
 8006230:	d101      	bne.n	8006236 <__sflush_r+0xb2>
 8006232:	602f      	str	r7, [r5, #0]
 8006234:	e7b2      	b.n	800619c <__sflush_r+0x18>
 8006236:	89a3      	ldrh	r3, [r4, #12]
 8006238:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800623c:	81a3      	strh	r3, [r4, #12]
 800623e:	e7ae      	b.n	800619e <__sflush_r+0x1a>
 8006240:	690f      	ldr	r7, [r1, #16]
 8006242:	2f00      	cmp	r7, #0
 8006244:	d0aa      	beq.n	800619c <__sflush_r+0x18>
 8006246:	0793      	lsls	r3, r2, #30
 8006248:	bf18      	it	ne
 800624a:	2300      	movne	r3, #0
 800624c:	680e      	ldr	r6, [r1, #0]
 800624e:	bf08      	it	eq
 8006250:	694b      	ldreq	r3, [r1, #20]
 8006252:	1bf6      	subs	r6, r6, r7
 8006254:	600f      	str	r7, [r1, #0]
 8006256:	608b      	str	r3, [r1, #8]
 8006258:	2e00      	cmp	r6, #0
 800625a:	dd9f      	ble.n	800619c <__sflush_r+0x18>
 800625c:	4633      	mov	r3, r6
 800625e:	463a      	mov	r2, r7
 8006260:	4628      	mov	r0, r5
 8006262:	6a21      	ldr	r1, [r4, #32]
 8006264:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8006268:	47e0      	blx	ip
 800626a:	2800      	cmp	r0, #0
 800626c:	dc06      	bgt.n	800627c <__sflush_r+0xf8>
 800626e:	89a3      	ldrh	r3, [r4, #12]
 8006270:	f04f 30ff 	mov.w	r0, #4294967295
 8006274:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006278:	81a3      	strh	r3, [r4, #12]
 800627a:	e790      	b.n	800619e <__sflush_r+0x1a>
 800627c:	4407      	add	r7, r0
 800627e:	1a36      	subs	r6, r6, r0
 8006280:	e7ea      	b.n	8006258 <__sflush_r+0xd4>
 8006282:	bf00      	nop
 8006284:	dfbffffe 	.word	0xdfbffffe

08006288 <_fflush_r>:
 8006288:	b538      	push	{r3, r4, r5, lr}
 800628a:	690b      	ldr	r3, [r1, #16]
 800628c:	4605      	mov	r5, r0
 800628e:	460c      	mov	r4, r1
 8006290:	b913      	cbnz	r3, 8006298 <_fflush_r+0x10>
 8006292:	2500      	movs	r5, #0
 8006294:	4628      	mov	r0, r5
 8006296:	bd38      	pop	{r3, r4, r5, pc}
 8006298:	b118      	cbz	r0, 80062a2 <_fflush_r+0x1a>
 800629a:	6a03      	ldr	r3, [r0, #32]
 800629c:	b90b      	cbnz	r3, 80062a2 <_fflush_r+0x1a>
 800629e:	f7ff f9af 	bl	8005600 <__sinit>
 80062a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80062a6:	2b00      	cmp	r3, #0
 80062a8:	d0f3      	beq.n	8006292 <_fflush_r+0xa>
 80062aa:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80062ac:	07d0      	lsls	r0, r2, #31
 80062ae:	d404      	bmi.n	80062ba <_fflush_r+0x32>
 80062b0:	0599      	lsls	r1, r3, #22
 80062b2:	d402      	bmi.n	80062ba <_fflush_r+0x32>
 80062b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80062b6:	f7ff fb98 	bl	80059ea <__retarget_lock_acquire_recursive>
 80062ba:	4628      	mov	r0, r5
 80062bc:	4621      	mov	r1, r4
 80062be:	f7ff ff61 	bl	8006184 <__sflush_r>
 80062c2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80062c4:	4605      	mov	r5, r0
 80062c6:	07da      	lsls	r2, r3, #31
 80062c8:	d4e4      	bmi.n	8006294 <_fflush_r+0xc>
 80062ca:	89a3      	ldrh	r3, [r4, #12]
 80062cc:	059b      	lsls	r3, r3, #22
 80062ce:	d4e1      	bmi.n	8006294 <_fflush_r+0xc>
 80062d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80062d2:	f7ff fb8b 	bl	80059ec <__retarget_lock_release_recursive>
 80062d6:	e7dd      	b.n	8006294 <_fflush_r+0xc>

080062d8 <__swhatbuf_r>:
 80062d8:	b570      	push	{r4, r5, r6, lr}
 80062da:	460c      	mov	r4, r1
 80062dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80062e0:	4615      	mov	r5, r2
 80062e2:	2900      	cmp	r1, #0
 80062e4:	461e      	mov	r6, r3
 80062e6:	b096      	sub	sp, #88	; 0x58
 80062e8:	da0c      	bge.n	8006304 <__swhatbuf_r+0x2c>
 80062ea:	89a3      	ldrh	r3, [r4, #12]
 80062ec:	2100      	movs	r1, #0
 80062ee:	f013 0f80 	tst.w	r3, #128	; 0x80
 80062f2:	bf0c      	ite	eq
 80062f4:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80062f8:	2340      	movne	r3, #64	; 0x40
 80062fa:	2000      	movs	r0, #0
 80062fc:	6031      	str	r1, [r6, #0]
 80062fe:	602b      	str	r3, [r5, #0]
 8006300:	b016      	add	sp, #88	; 0x58
 8006302:	bd70      	pop	{r4, r5, r6, pc}
 8006304:	466a      	mov	r2, sp
 8006306:	f000 f849 	bl	800639c <_fstat_r>
 800630a:	2800      	cmp	r0, #0
 800630c:	dbed      	blt.n	80062ea <__swhatbuf_r+0x12>
 800630e:	9901      	ldr	r1, [sp, #4]
 8006310:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8006314:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8006318:	4259      	negs	r1, r3
 800631a:	4159      	adcs	r1, r3
 800631c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006320:	e7eb      	b.n	80062fa <__swhatbuf_r+0x22>

08006322 <__smakebuf_r>:
 8006322:	898b      	ldrh	r3, [r1, #12]
 8006324:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006326:	079d      	lsls	r5, r3, #30
 8006328:	4606      	mov	r6, r0
 800632a:	460c      	mov	r4, r1
 800632c:	d507      	bpl.n	800633e <__smakebuf_r+0x1c>
 800632e:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8006332:	6023      	str	r3, [r4, #0]
 8006334:	6123      	str	r3, [r4, #16]
 8006336:	2301      	movs	r3, #1
 8006338:	6163      	str	r3, [r4, #20]
 800633a:	b002      	add	sp, #8
 800633c:	bd70      	pop	{r4, r5, r6, pc}
 800633e:	466a      	mov	r2, sp
 8006340:	ab01      	add	r3, sp, #4
 8006342:	f7ff ffc9 	bl	80062d8 <__swhatbuf_r>
 8006346:	9900      	ldr	r1, [sp, #0]
 8006348:	4605      	mov	r5, r0
 800634a:	4630      	mov	r0, r6
 800634c:	f7ff fbb8 	bl	8005ac0 <_malloc_r>
 8006350:	b948      	cbnz	r0, 8006366 <__smakebuf_r+0x44>
 8006352:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006356:	059a      	lsls	r2, r3, #22
 8006358:	d4ef      	bmi.n	800633a <__smakebuf_r+0x18>
 800635a:	f023 0303 	bic.w	r3, r3, #3
 800635e:	f043 0302 	orr.w	r3, r3, #2
 8006362:	81a3      	strh	r3, [r4, #12]
 8006364:	e7e3      	b.n	800632e <__smakebuf_r+0xc>
 8006366:	89a3      	ldrh	r3, [r4, #12]
 8006368:	6020      	str	r0, [r4, #0]
 800636a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800636e:	81a3      	strh	r3, [r4, #12]
 8006370:	9b00      	ldr	r3, [sp, #0]
 8006372:	6120      	str	r0, [r4, #16]
 8006374:	6163      	str	r3, [r4, #20]
 8006376:	9b01      	ldr	r3, [sp, #4]
 8006378:	b15b      	cbz	r3, 8006392 <__smakebuf_r+0x70>
 800637a:	4630      	mov	r0, r6
 800637c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006380:	f000 f81e 	bl	80063c0 <_isatty_r>
 8006384:	b128      	cbz	r0, 8006392 <__smakebuf_r+0x70>
 8006386:	89a3      	ldrh	r3, [r4, #12]
 8006388:	f023 0303 	bic.w	r3, r3, #3
 800638c:	f043 0301 	orr.w	r3, r3, #1
 8006390:	81a3      	strh	r3, [r4, #12]
 8006392:	89a3      	ldrh	r3, [r4, #12]
 8006394:	431d      	orrs	r5, r3
 8006396:	81a5      	strh	r5, [r4, #12]
 8006398:	e7cf      	b.n	800633a <__smakebuf_r+0x18>
	...

0800639c <_fstat_r>:
 800639c:	b538      	push	{r3, r4, r5, lr}
 800639e:	2300      	movs	r3, #0
 80063a0:	4d06      	ldr	r5, [pc, #24]	; (80063bc <_fstat_r+0x20>)
 80063a2:	4604      	mov	r4, r0
 80063a4:	4608      	mov	r0, r1
 80063a6:	4611      	mov	r1, r2
 80063a8:	602b      	str	r3, [r5, #0]
 80063aa:	f7fb fbf9 	bl	8001ba0 <_fstat>
 80063ae:	1c43      	adds	r3, r0, #1
 80063b0:	d102      	bne.n	80063b8 <_fstat_r+0x1c>
 80063b2:	682b      	ldr	r3, [r5, #0]
 80063b4:	b103      	cbz	r3, 80063b8 <_fstat_r+0x1c>
 80063b6:	6023      	str	r3, [r4, #0]
 80063b8:	bd38      	pop	{r3, r4, r5, pc}
 80063ba:	bf00      	nop
 80063bc:	20000340 	.word	0x20000340

080063c0 <_isatty_r>:
 80063c0:	b538      	push	{r3, r4, r5, lr}
 80063c2:	2300      	movs	r3, #0
 80063c4:	4d05      	ldr	r5, [pc, #20]	; (80063dc <_isatty_r+0x1c>)
 80063c6:	4604      	mov	r4, r0
 80063c8:	4608      	mov	r0, r1
 80063ca:	602b      	str	r3, [r5, #0]
 80063cc:	f7fb fbf7 	bl	8001bbe <_isatty>
 80063d0:	1c43      	adds	r3, r0, #1
 80063d2:	d102      	bne.n	80063da <_isatty_r+0x1a>
 80063d4:	682b      	ldr	r3, [r5, #0]
 80063d6:	b103      	cbz	r3, 80063da <_isatty_r+0x1a>
 80063d8:	6023      	str	r3, [r4, #0]
 80063da:	bd38      	pop	{r3, r4, r5, pc}
 80063dc:	20000340 	.word	0x20000340

080063e0 <_sbrk_r>:
 80063e0:	b538      	push	{r3, r4, r5, lr}
 80063e2:	2300      	movs	r3, #0
 80063e4:	4d05      	ldr	r5, [pc, #20]	; (80063fc <_sbrk_r+0x1c>)
 80063e6:	4604      	mov	r4, r0
 80063e8:	4608      	mov	r0, r1
 80063ea:	602b      	str	r3, [r5, #0]
 80063ec:	f7fb fbfe 	bl	8001bec <_sbrk>
 80063f0:	1c43      	adds	r3, r0, #1
 80063f2:	d102      	bne.n	80063fa <_sbrk_r+0x1a>
 80063f4:	682b      	ldr	r3, [r5, #0]
 80063f6:	b103      	cbz	r3, 80063fa <_sbrk_r+0x1a>
 80063f8:	6023      	str	r3, [r4, #0]
 80063fa:	bd38      	pop	{r3, r4, r5, pc}
 80063fc:	20000340 	.word	0x20000340

08006400 <memchr>:
 8006400:	4603      	mov	r3, r0
 8006402:	b510      	push	{r4, lr}
 8006404:	b2c9      	uxtb	r1, r1
 8006406:	4402      	add	r2, r0
 8006408:	4293      	cmp	r3, r2
 800640a:	4618      	mov	r0, r3
 800640c:	d101      	bne.n	8006412 <memchr+0x12>
 800640e:	2000      	movs	r0, #0
 8006410:	e003      	b.n	800641a <memchr+0x1a>
 8006412:	7804      	ldrb	r4, [r0, #0]
 8006414:	3301      	adds	r3, #1
 8006416:	428c      	cmp	r4, r1
 8006418:	d1f6      	bne.n	8006408 <memchr+0x8>
 800641a:	bd10      	pop	{r4, pc}

0800641c <_init>:
 800641c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800641e:	bf00      	nop
 8006420:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006422:	bc08      	pop	{r3}
 8006424:	469e      	mov	lr, r3
 8006426:	4770      	bx	lr

08006428 <_fini>:
 8006428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800642a:	bf00      	nop
 800642c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800642e:	bc08      	pop	{r3}
 8006430:	469e      	mov	lr, r3
 8006432:	4770      	bx	lr
